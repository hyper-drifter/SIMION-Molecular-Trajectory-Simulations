(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    274561,       5544]
NotebookOptionsPosition[    268753,       5386]
NotebookOutlinePosition[    269096,       5401]
CellTagsIndexPosition[    269053,       5398]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
THE FOLLOWING ASSUMES THAT IMPORTED DATA IS IN A TSV FORMAT OF THE FOLLOWING \
STYLE: X VX Y VY WITH INTEGER FREQUENCIES SERVING AS THE SEPARATION BETWEEN \
DIFFERENT SIMULATIONS.  CHANGES TO THIS CODE MUST TAKE THIS INTO CONSIDERATION\
\>", "Text",
 CellChangeTimes->{{3.6677569400191393`*^9, 3.667757060164483*^9}, {
  3.66775909166575*^9, 3.667759112943102*^9}, {3.667832719329768*^9, 
  3.66783275385422*^9}, {3.671729927871538*^9, 3.6717299315391397`*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.670334328837563*^9, 3.670334339588306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"200", " ", "volt", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lowFieldMPI", "=", 
     RowBox[{"Import", "[", "\"\<low-field-200-V-MPI.tsv\>\"", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"moreData", "=", 
     RowBox[{"Import", "[", "\"\<low-field-200-V-MPI-more.tsv\>\"", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowFieldMPI", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"lowFieldMPI", ",", "moreData"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lowFieldAlt", "=", 
     RowBox[{"Import", "[", "\"\<low-field-200-V-Alt.tsv\>\"", "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highFieldMPI", "=", 
     RowBox[{"Import", "[", "\"\<High-field-MPI.tsv\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highFieldAlt", "=", 
     RowBox[{"Import", "[", "\"\<high-field-Alt.tsv\>\"", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.681128016708659*^9, 3.681128029159107*^9}, {
  3.681551380044499*^9, 3.681551426598604*^9}, {3.68155160696557*^9, 
  3.681551607726788*^9}, {3.681580447647916*^9, 3.681580473206912*^9}, {
  3.681659114191842*^9, 3.681659127652123*^9}, {3.682166039420864*^9, 
  3.682166083383003*^9}, {3.6886754913667855`*^9, 3.688675520058181*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["--This first function(getIndices) finds how many frequencies were \
tested in the data set.\n\n--This function(plotVData) makes plots of Vy v. Vx \
for each frequency and places them in a list. Converts to m/s\n \n--The count \
function counts how many particles survived for each frequency (Here the \
frequency is in kHz and as an optional argument one can provide the number of \
particles simulated to compute the success rate instead of particle count.\n  \
       \n--The plotPhaseSpaceXData makes phase space plots of Vx v x.\n\n\
--The findPeakFreq function sorts through the data to find the frequency at \
which maximum trapping occurs. It also returns the position of the data point \
in the count list.\nThe format being ",
  FontWeight->"Bold"],
 StyleBox["{index, {frequency,count}}\n\n--",
  FontSlant->"Italic"],
 StyleBox["The maxBoltz function is also here to plot theoretical Maxwellian \
distributions on histograms. MAKE SURE THAT IF YOU ARE USING A DIFFERENT MASS \
THAT YOU ALTER THE MATH PARAMETER IN THE FUNCTION!!!\n\n--The speedToTemp \
function takes the average speed of the molecules and calculates the \
temperature.",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.667672371386359*^9, 3.667672418318089*^9}, 
   3.667672518720188*^9, 3.6676741587696333`*^9, 3.667683148154711*^9, {
   3.6678355621528788`*^9, 3.667835594692507*^9}, 3.671727835922806*^9, {
   3.671729209471756*^9, 3.671729344141761*^9}, {3.671988594981444*^9, 
   3.6719886278204308`*^9}, {3.674914385728664*^9, 3.674914443536866*^9}, {
   3.6750012265775633`*^9, 3.675001237858427*^9}, {3.675001756806386*^9, 
   3.675001781743286*^9}, {3.675002082202207*^9, 3.675002158535655*^9}, 
   3.675002250489203*^9, {3.6756866330859747`*^9, 3.675686634723485*^9}, {
   3.681054508976218*^9, 3.6810546614867764`*^9}, {3.681054696168902*^9, 
   3.681054699027442*^9}, {3.681551416252674*^9, 3.6815514177798433`*^9}, {
   3.688751458807047*^9, 3.688751488070467*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getIndices", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"indices", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"data", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}],
              "]"}], "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"indices", ",", "i"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "indices", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.667659869031968*^9, 3.6676598729699173`*^9}, {
   3.667659907473193*^9, 3.667660001757038*^9}, {3.667660075871605*^9, 
   3.66766018930908*^9}, {3.667660227331959*^9, 3.667660227930565*^9}, {
   3.667660332585683*^9, 3.667660461104998*^9}, {3.66766057746915*^9, 
   3.667660601222875*^9}, {3.667660635328277*^9, 3.6676606614260263`*^9}, {
   3.667660706256215*^9, 3.667660709835599*^9}, {3.667660828086639*^9, 
   3.667660915459283*^9}, {3.667660949785516*^9, 3.6676609979469557`*^9}, {
   3.667661070411283*^9, 3.6676610737249527`*^9}, {3.667661245500369*^9, 
   3.667661280810173*^9}, {3.667661555226038*^9, 3.667661623149704*^9}, 
   3.667661684908586*^9, {3.6676617711345673`*^9, 3.667661791391315*^9}, {
   3.667661900694957*^9, 3.6676619167984333`*^9}, {3.667661947742538*^9, 
   3.6676620717932653`*^9}, {3.667662113813779*^9, 3.667662182690028*^9}, {
   3.6676625220619917`*^9, 3.6676625853744593`*^9}, {3.667662744333829*^9, 
   3.667662786728298*^9}, {3.667662861393619*^9, 3.667662890268682*^9}, {
   3.6676629370332317`*^9, 3.6676629876691227`*^9}, {3.667663046618265*^9, 
   3.6676630470925198`*^9}, {3.667663199749485*^9, 3.667663210321073*^9}, {
   3.6676632706564693`*^9, 3.667663293677437*^9}, 3.6676633680344677`*^9, {
   3.667663427914921*^9, 3.667663428733301*^9}, 3.6676724183184547`*^9, 
   3.667835562153377*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotVData", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"vPlots", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList", ",", 
      RowBox[{"k", "=", "0"}], ",", "freq"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"freq", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vList", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], 
              "*", "1000"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vPlots", ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"vList", ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<, \>\"", "<>", 
                 RowBox[{"ToString", "[", "freq", "]"}]}]}]}], "]"}]}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"k", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"freq", "=", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vPlots", ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"vList", ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{
                 RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\<, \>\"", "<>", 
                 RowBox[{"ToString", "[", "freq", "]"}]}]}]}], "]"}]}], "]"}],
            ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"vPlots", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6676634494096527`*^9, 3.6676634726379023`*^9}, {
   3.667663516033545*^9, 3.667663541786474*^9}, {3.667663578447805*^9, 
   3.667663594238201*^9}, {3.66766364696064*^9, 3.667663665017823*^9}, {
   3.667664297927742*^9, 3.6676643387818527`*^9}, 3.6676643714546328`*^9, {
   3.667671397631112*^9, 3.6676716164428883`*^9}, {3.667671752891222*^9, 
   3.6676717606356564`*^9}, {3.667671818475004*^9, 3.667671935711884*^9}, {
   3.6676719878399963`*^9, 3.667672020485806*^9}, 3.667672491144166*^9, {
   3.667683848653598*^9, 3.667683857035335*^9}, {3.667683896468519*^9, 
   3.667683909716754*^9}, {3.667684237002583*^9, 3.667684239563719*^9}, {
   3.667684445011178*^9, 3.667684447243455*^9}, {3.667729107932733*^9, 
   3.6677291188761053`*^9}, 3.6677550439462223`*^9, 3.667835562154152*^9, {
   3.6712878246011667`*^9, 3.671287874464983*^9}, {3.671287953144315*^9, 
   3.671287953629367*^9}, {3.67128800306499*^9, 3.671288057949256*^9}, {
   3.6712881648575573`*^9, 3.671288208950531*^9}, {3.671288312852807*^9, 
   3.6712883476603117`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"count", "[", 
   RowBox[{"data_", ",", 
    RowBox[{"initNumber_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"counts", "=", "0"}], ",", 
      RowBox[{"countList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList", ",", "freq"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"freq", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], " ", "&&", " ", 
           RowBox[{"i", "\[NotEqual]", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"countList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"freq", "/", "1000"}], ",", 
               RowBox[{"counts", "/", "initNumber"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"freq", "=", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"counts", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"countList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Last", "[", "indexList", "]"}], ",", "1"}], 
                 "\[RightDoubleBracket]"}], "/", "1000"}], ",", 
               RowBox[{"counts", "/", "initNumber"}]}], "}"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "countList", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.66775032984654*^9, 3.667750346764262*^9}, {
   3.6677504076624193`*^9, 3.667750408487493*^9}, {3.667750489922374*^9, 
   3.66775059387519*^9}, {3.6677506615672894`*^9, 3.6677506769610558`*^9}, {
   3.667750717688188*^9, 3.6677507345186787`*^9}, {3.6677507702918673`*^9, 
   3.6677508776697598`*^9}, {3.6677509095717154`*^9, 3.667750933714686*^9}, {
   3.66775101333071*^9, 3.667751053032297*^9}, {3.667751137991049*^9, 
   3.667751181523608*^9}, {3.667751233073598*^9, 3.667751234520054*^9}, {
   3.667751281514202*^9, 3.667751299537883*^9}, {3.6677513353186893`*^9, 
   3.667751335581458*^9}, 3.667835562154558*^9, {3.668877623528111*^9, 
   3.6688776266371117`*^9}, {3.668879409592163*^9, 3.668879426319365*^9}, {
   3.67500117937947*^9, 3.67500120807831*^9}, {3.6750013005775013`*^9, 
   3.675001331714299*^9}, {3.675001814382588*^9, 3.675001868881412*^9}, 
   3.681054032122476*^9, 3.68105412775244*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotPhaseSpaceYData", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"psPlots", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"1000", "*", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psPlots", ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"psList", ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<y(mm)\>\"", ",", "\"\<Vy(m/s)\>\""}], "}"}]}], 
               ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", ".05"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", "12"}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"PointSize", "[", ".012", "]"}]}]}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"psList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"psPlots", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6676634494096527`*^9, 3.6676634726379023`*^9}, {
   3.667663516033545*^9, 3.667663541786474*^9}, {3.667663578447805*^9, 
   3.667663594238201*^9}, {3.66766364696064*^9, 3.667663665017823*^9}, {
   3.667664297927742*^9, 3.6676643387818527`*^9}, 3.6676643714546328`*^9, {
   3.667671397631112*^9, 3.6676716164428883`*^9}, {3.667671752891222*^9, 
   3.6676717606356564`*^9}, {3.667671818475004*^9, 3.667671935711884*^9}, {
   3.6676719878399963`*^9, 3.667672020485806*^9}, 3.667672491144166*^9, {
   3.667672598928376*^9, 3.667672685257111*^9}, {3.667672837447526*^9, 
   3.667672838639127*^9}, {3.667684247350618*^9, 3.66768425369951*^9}, {
   3.667750297303577*^9, 3.667750298364802*^9}, 3.6677550515876427`*^9, 
   3.667835562154846*^9, 3.670510444331159*^9, {3.670510485749453*^9, 
   3.6705104910174093`*^9}, {3.6706723489094677`*^9, 3.670672428834034*^9}, {
   3.6706726474068947`*^9, 3.670672656495677*^9}, {3.670672783326212*^9, 
   3.670672784449913*^9}, {3.670672817819399*^9, 3.670672819661394*^9}, {
   3.670673250516693*^9, 3.670673255966158*^9}, {3.670673898044055*^9, 
   3.6706739017236357`*^9}, {3.675606190808222*^9, 3.675606196062562*^9}, {
   3.675606232344037*^9, 3.67560626275646*^9}, {3.6756064578391323`*^9, 
   3.6756064982131233`*^9}, 3.675607155725132*^9, {3.675608002679961*^9, 
   3.675608075729782*^9}, {3.6756081095212927`*^9, 3.675608153915148*^9}, {
   3.675608223214458*^9, 3.675608230012579*^9}, {3.675608390171836*^9, 
   3.675608391123014*^9}, {3.675687108661817*^9, 3.675687114358317*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotPhaseSpaceXData", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"psPlots", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"1000", "*", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
              "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psPlots", ",", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"psList", ",", 
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<x(mm)\>\"", ",", "\"\<Vx(m/s)\>\""}], "}"}]}], 
               ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", ".05"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", "12"}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"PointSize", "[", ".012", "]"}]}]}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"psList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"psPlots", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6676634494096527`*^9, 3.6676634726379023`*^9}, {
   3.667663516033545*^9, 3.667663541786474*^9}, {3.667663578447805*^9, 
   3.667663594238201*^9}, {3.66766364696064*^9, 3.667663665017823*^9}, {
   3.667664297927742*^9, 3.6676643387818527`*^9}, 3.6676643714546328`*^9, {
   3.667671397631112*^9, 3.6676716164428883`*^9}, {3.667671752891222*^9, 
   3.6676717606356564`*^9}, {3.667671818475004*^9, 3.667671935711884*^9}, {
   3.6676719878399963`*^9, 3.667672020485806*^9}, 3.667672491144166*^9, {
   3.667672598928376*^9, 3.667672685257111*^9}, {3.667672837447526*^9, 
   3.667672838639127*^9}, {3.667684247350618*^9, 3.66768425369951*^9}, {
   3.667750297303577*^9, 3.667750298364802*^9}, 3.6677550515876427`*^9, 
   3.667835562154846*^9, 3.670510444331159*^9, {3.670510485749453*^9, 
   3.6705104910174093`*^9}, {3.6706723489094677`*^9, 3.670672428834034*^9}, {
   3.6706727259417973`*^9, 3.670672759486842*^9}, {3.670672883629239*^9, 
   3.67067295702907*^9}, {3.6706732602811728`*^9, 3.670673262997829*^9}, {
   3.670673906756898*^9, 3.670673909994336*^9}, {3.672070948887066*^9, 
   3.672070977318911*^9}, 3.675606272899674*^9, 3.67560651577039*^9, 
   3.6756071621389027`*^9, {3.6756081791465816`*^9, 3.675608182261323*^9}, {
   3.675608239908922*^9, 3.675608241331416*^9}, {3.675608386828968*^9, 
   3.675608387849704*^9}, {3.675687121363481*^9, 3.6756871257761507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findPeakFreq", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", "maxTrapped", ",", 
      RowBox[{"peakData", "=", 
       RowBox[{"{", "}"}]}], ",", "countList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"countList", "=", 
      RowBox[{"count", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxTrapped", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "countList", "]"}], "\[LeftDoubleBracket]", 
        "2", "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"countList", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "maxTrapped"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"peakData", "=", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
              "countList", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "peakData", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.671727856890018*^9, 3.6717278763941927`*^9}, {
   3.67172791042807*^9, 3.671728055812201*^9}, {3.671728106436311*^9, 
   3.671728106829732*^9}, {3.6717281797535477`*^9, 3.671728251645327*^9}, {
   3.671728446456442*^9, 3.671728446786934*^9}, 3.671728500721972*^9, {
   3.671728868370347*^9, 3.671728885911644*^9}, {3.671728925501277*^9, 
   3.671728930598373*^9}, {3.671729036318033*^9, 3.67172904993771*^9}, {
   3.671729089964199*^9, 3.6717290924907722`*^9}, {3.671729126081555*^9, 
   3.67172918412405*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxboltz1D", "[", 
   RowBox[{"v_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"3.321", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "26"}]]}]}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"1.38", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "23"}]]}]}], ",", "prob"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prob", "=", 
      RowBox[{
       SqrtBox[
        RowBox[{"(", 
         FractionBox["m", 
          RowBox[{"2", " ", "\[Pi]", " ", "k", " ", "T"}]], ")"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "m"}], " ", 
          SuperscriptBox["v", "2"]}], 
         RowBox[{"2", " ", "k", " ", "T"}]]]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.667234895957103*^9, 3.6672349032124453`*^9}, 
   3.6672382293078833`*^9, 3.6712235994414053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxboltz", "[", 
   RowBox[{"v_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"3.321", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "26"}]]}]}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"1.38", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "23"}]]}]}], ",", "prob"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"Scaling", " ", "factor", " ", "really", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "matter", " ", "since", " ", "I", " ",
       "scale", " ", "the", " ", "distribution", " ", "anyways", " ", "to", 
      " ", "match", " ", "the", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"prob", "=", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["m", 
         RowBox[{"2", " ", "\[Pi]", " ", "k", " ", "T"}]], ")"}], " ", 
       "\[Pi]", " ", 
       SuperscriptBox["v", "2"], 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "m"}], " ", 
          SuperscriptBox["v", "2"]}], 
         RowBox[{"2", " ", "k", " ", "T"}]]]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{
  3.6886756779779477`*^9, {3.6903058271738033`*^9, 3.6903058651751595`*^9}, {
   3.6903059585249615`*^9, 3.6903059843895955`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"speedToTemp", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "=", 
       RowBox[{"1.38", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "23"}]]}]}], ",", 
      RowBox[{"m", "=", 
       RowBox[{"3.321", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "26"}]]}]}], ",", "E", ",", "T"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"T", "=", 
      FractionBox[
       RowBox[{".5", " ", "m", " ", 
        SuperscriptBox["v", "2"]}], "k"]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "T", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6749142186061153`*^9, 3.6749142984241667`*^9}, 
   3.674914365095498*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["--The getVelocities function grabs all of the velocity data and \
places it into a list.\n\n--The getPositions function does the same thing but \
for the positions.\n\n--The getPlotArea function uses a crude method of area \
approximation to find how much of a space is covered by the data. ",
  FontWeight->"Bold"],
 StyleBox["I would NOT recommend using it.\n",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\n--The graphPlotAreas function takes the plot areas of the \
velocity graphs for each frequency measured and graphs the result.",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.667756687489594*^9, 3.667756833660075*^9}, {
  3.667756912547267*^9, 3.6677569296689243`*^9}, {3.667834454051134*^9, 
  3.6678344988280907`*^9}, {3.6717295401289454`*^9, 3.671729576929964*^9}, {
  3.6717297839231567`*^9, 3.6717298039067163`*^9}, {3.671729869205606*^9, 
  3.6717298815829477`*^9}, {3.6810546680914288`*^9, 3.681054678679036*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getVelocities", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"finalList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vList", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], 
              "*", "1000"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "vList"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "vList"}], "]"}], ";"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"finalList", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.6677548422187443`*^9, 3.667754895058812*^9}, {
   3.667754934396628*^9, 3.667755012147859*^9}, 3.667755072506229*^9, 
   3.667755344278878*^9, 3.6677554194331417`*^9, {3.667756034896699*^9, 
   3.667756041451212*^9}, 3.667756811968339*^9, {3.668880069996791*^9, 
   3.6688800956895723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPositions", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"finalList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"pList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}],
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "pList"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"pList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "pList"}], "]"}], ";"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"finalList", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667756881911368*^9, 3.667756904768776*^9}, 
   3.6677571327122717`*^9, {3.667757196450549*^9, 3.6677572063150787`*^9}, {
   3.668880263311659*^9, 3.668880267400154*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPlotArea", "[", "Data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "y", ",", 
      RowBox[{"area", "=", "0"}], ",", "i", ",", "sortedData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sortedData", "=", 
      RowBox[{"Sort", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "Data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x1", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x2", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"area", "=", 
         RowBox[{"area", "+", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", 
            RowBox[{"(", 
             RowBox[{"x2", "-", "x1"}], ")"}]}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "area", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667755312136026*^9, 3.66775545510564*^9}, {
   3.667755606803481*^9, 3.667755721861433*^9}, {3.667755904489266*^9, 
   3.66775594946108*^9}, 3.667756811968512*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphPlotAreas", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"areaList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", 
      RowBox[{"velocities", "=", 
       RowBox[{"{", "}"}]}], ",", "frequencyList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"frequencyList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"getIndices", "[", "data", "]"}], "\[RightDoubleBracket]"}],
          "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
       "1000"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"velocities", "=", 
      RowBox[{"getVelocities", "[", "data", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "velocities", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"areaList", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "frequencyList", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"getPlotArea", "[", 
             RowBox[{
             "velocities", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"areaList", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Frequency (kHz)\>\"", ",", 
           "\"\<velocity space area (\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(s\), \(2\)]\))\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<Velocity Space area v Frequency\>\""}], 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667833630001484*^9, 3.667833703931077*^9}, {
  3.667833736448064*^9, 3.667833794863759*^9}, {3.667833826649708*^9, 
  3.667833977491797*^9}, {3.667834018306315*^9, 3.667834082363345*^9}, {
  3.667834156277253*^9, 3.667834240652669*^9}, {3.667834519880701*^9, 
  3.667834568176113*^9}, {3.667834641447834*^9, 3.667834643902892*^9}, {
  3.667834731518578*^9, 3.667834752936783*^9}, {3.667834902026792*^9, 
  3.6678349869668083`*^9}, {3.6678350223183823`*^9, 3.66783514752422*^9}, {
  3.667835200203517*^9, 3.667835201683688*^9}, {3.667907040323604*^9, 
  3.667907042117138*^9}, {3.667907487521336*^9, 3.667907516313013*^9}}]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.681127872927005*^9, 3.681127880262867*^9}, 
   3.681127962219912*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["The ",
  FontSlant->"Italic"],
 StyleBox["findMaxwellianFit",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" function fits a Maxwellian velocity distribution to a histogram \
of the velocity data. This gives the approximate temperature ",
  FontSlant->"Italic"],
 StyleBox["T",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" of the successfully trapped molecules in that particular \
direction. Due to the nature of the HistogramList function I had to drop the \
first element from histX in order to transpose it with histCount.",
  FontSlant->"Italic"],
 StyleBox["\[Alpha]",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" simply scales the distribution function up. ",
  FontSlant->"Italic"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671992179520112*^9, 3.671992233944306*^9}, {
   3.6719923022544527`*^9, 3.671992328361953*^9}, {3.671992396103582*^9, 
   3.67199243506503*^9}, {3.6719925474242887`*^9, 3.671992587089669*^9}, {
   3.671992635444891*^9, 3.671992680294301*^9}, {3.671992755764916*^9, 
   3.6719927563547497`*^9}, {3.671992802069626*^9, 3.67199281137331*^9}, 
   3.6724035608484077`*^9, {3.6724037459703293`*^9, 3.6724037870925417`*^9}, {
   3.672403854722337*^9, 3.67240386293318*^9}, {3.672406076057173*^9, 
   3.672406219166072*^9}, {3.688676458218663*^9, 3.6886764609936075`*^9}, 
   3.688751449598757*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMaxwellianFit", "[", 
   RowBox[{"vData_", ",", "binWidth_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "histDataForVelocities", ",", "bestFitForVelocities", ",", "bestFitPlot",
       ",", "histX", ",", "histCount"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"histX", ",", "histCount"}], "}"}], "=", 
      RowBox[{"HistogramList", "[", 
       RowBox[{
        RowBox[{"Norm", "/@", "vData"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Norm", "/@", "vData"}], "]"}], ",", "binWidth"}], "}"}]}],
        "]"}]}], ";", 
     RowBox[{"histDataForVelocities", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"histX", ",", "1"}], "]"}], ",", "histCount"}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"bestFitForVelocities", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"histDataForVelocities", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"maxboltz", "[", 
            RowBox[{"v", ",", "T"}], "]"}]}], ",", 
          RowBox[{"0", "<", "T", "<", "0.3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "T"}], "}"}], ",", "v"}], "]"}]}], ";", 
     RowBox[{"bestFitPlot", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"bestFitForVelocities", "[", "\"\<BestFit\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Norm", "/@", "vData"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "bestFitForVelocities", "[", "\"\<BestFitParameters\>\"", "]"}], ",", 
        
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"bestFitPlot", ",", 
           RowBox[{"ListPlot", "[", "histDataForVelocities", "]"}]}], "}"}], 
         "]"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.672405325878304*^9, 3.6724053738673067`*^9}, 
   3.674909442600326*^9, {3.675694354541595*^9, 3.6756943909249496`*^9}, {
   3.675694446992486*^9, 3.675694447065097*^9}, {3.6756944791123447`*^9, 
   3.675694584614746*^9}, {3.6886755472114315`*^9, 3.6886755544615793`*^9}, {
   3.688675688499444*^9, 3.6886756886595316`*^9}, {3.6886757979481525`*^9, 
   3.688675799219054*^9}, {3.6886758345476*^9, 3.688675841843779*^9}, {
   3.688675929986998*^9, 3.688675944899046*^9}, {3.688676169643858*^9, 
   3.6886761726039867`*^9}, 3.688676256947709*^9, {3.6886763213629584`*^9, 
   3.688676323116228*^9}, {3.6902948436076274`*^9, 3.6902948483967967`*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[TextData[StyleBox["Here I analyze data for the chip at 200 volts.",
 FontSize->20]], "Text",
 CellChangeTimes->{{3.6810547657767677`*^9, 3.6810547880573*^9}, 
   3.681128822476712*^9, {3.681551468062471*^9, 3.681551468165717*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lowMPIPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowFieldMPI", ",", "20000"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Low field in MPI Config\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowAltPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowFieldAlt", ",", "20000"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Low field in Alt Config\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highMPIPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highFieldMPI", ",", "20000"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<High field in MPI Config\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highAltPlot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highFieldAlt", ",", "20000"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<High field in Alt Config\>\""}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHbt0TSlv7mvHf4JVFSC6Tk2zBUQnzvIG00GfNneB
6Den94DpVKneGSA6553BLBDNFB60HUTzZXWB6SbhH1J8QPrBvggZEM3AGjPJ
EEgf8tsIpkv4Hi8A0S4GjAtBNOffF15GQPpM4mc/EB3S2/EsAUhv+rgBTAft
+fQbRCfJnmNIBOlXyuQC0VKzJnGD6N++zl0MeUD5yad6QfSXnT6apkA6hC8b
TKd8y9YH0ds8loDpXROuG4PohIPBZiD69jTV1Tr5rx3TC9LXgGitpws2gWim
aMn9IHpvd+EJEP3V0+MkiO5imngTRCfdfn8XRH87M/kxiG5s03oPouXqOmV1
gXTRTzsFEF1QdVcFRL/q5lMF0WrXV7qB6J8Zee4gGgCxs7X5
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lowMPIPlot", ",", "lowAltPlot"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"highMPIPlot", ",", "highAltPlot"}], "}"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6821662707078867`*^9, 3.682166328958857*^9}, {
  3.6821663591341047`*^9, 3.6821663597974367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxdmH+MXFUVx28boAUpGQSxTQ2ZqpBCaRwI1sqPcAixLj9KX1sKS0vb19Kl
2/355vfvmTuj6EpomYihS23gGSzZGqwjSlyxwAMlbYI2Y8FQJdZnQUTAZKyx
VkVxZ/c70fOdfzafPfee7zn317v3LNo6uqZvtjHm1CxjOn9nfneL+f+fEFvi
gNisp/7EljggNhuoP7ElDojNPdSf2BIHxGYj9Se2xAGx2UT9iS1xQGw2U39i
SxwQG1dzlFiIXWJL7BMHxCGx2UL6xELsEltinzggDonNVtInFmKX2BL7xAFx
SGzuJX1iIXaJLbFPHBCHxGYb6RMLsUtsiX3igDgkNn2kTyzELrEl9okD4pDY
3Ef6xELsEltinzggDonNdtInFmKX2BL7xAFxSGz6SZ9YiF1iS+wTB8Rhvyy9
6RPvnVh2zg0z/9hB+sSyQ7d3yW7J7hMHO2TLVetil+//1AyHO+SD/X85unJr
DPoD8vVXqj0vlK+f4eiAHHp2cudZ7WUzLANoL9AfkG+cOmvz+G1fmGE7AL1b
oD8gm+ccWbD6N7dCv9vfgf6A9DgfzE++vgb6g/KZkSdmHTwTHB2U4oUHvvj7
wh3QH0Q8d0J/UC7Y8tNXl/TdDf1B+Wdl4GDq4V7oD8qKS9Kz98zdAP1BxLce
+oMS7j1/33Mv3gX9Icn/6dIr5z51D/SH5OyFj2267BUX+kOIH+wS2yH52IO3
vHvG1VugPySf/PepdLgXHFD7cEjWvTjx7dvlXugPy7W/W7Vz98hW6A/L9HB8
dBv0hzF/aO8OY/z7oE/t/WHtP6D+4TDGF+3NiESPjk5N2Q7oj2j/QuyO6P52
RA4c25xZdfF90B/BfIGDEfnzvOdjj17eD/0RzBfYjGp7dFTmtC+aWiJgIbs7
ivkdhP6ovLakb8GJ3u3QH5XP//Bw5vnHB6A/ivmGPRzV8RkP6wPtI568/NCV
2aWLRhGPJ19Z/+rBNy8cnuGYJ5MX3//e6skRxOdhvXgz7HiYzwTi9eShtalP
7/4Qds+TvT+LNhP9ccTvYb6SM9zwpH7i0PhPHkF735MjY0ePhx+BvUkceFhf
aN/y5Hj8gV1vnUT8oSdPfbczQYi37clQrrDvipuGkH9ct4/EKf+4HDXHZ5/9
ADhGLHGdnxOXx6+74rU9b2O83Lhk4gvnhUu7+VN/S3qNOPYTxscn/824vPGP
zgLq5h/HeYLxbsWx/9A/jMvf3ni9llyRQv7U3ySwvtPIP6HbRxNY3xnkn8B+
g10SWE+wO9TeTWD9ZZF/Qr61/QfvJp+Bnk3I+m2dFQN7g/z5CUmt6ESYQ/4J
efKczg4oIP8E9hPsrQT2DzhMYL8UkX8C5zPYJOVk0xncky0h/yTWSwX5J7H+
y8g/KVe9feCSt74EuyRl2v1CsJPE/FaRfxL7BXZvqn/nOLrAIv8k1ju4Qe39
pNz2ua/d6P4B9iZxkMT+A7fIX5jE+gG3iU1Kpo+/BTXkn8J+gj2awnqEPZbS
ekJ2JyW3Hp5z/TfXdfNPYf2jvZeS3onP/uLa29HepuTl/zxdPNns5p/S8fkp
fJ8x/s2UHt+A2rem/E8fgLCHKVlwxp3nLX0a/dspPT4mrecjktb2KNljxJLW
4+EQu2n58dRqvqinm39aj5dNyw13bfj+C+9jvhtpHb9P/poUX5DW89VK6/EN
yX87jfMBdpOR6r+u8Y6M1ZF/hvLPaP0Y2YXsTkavTzej58fLyOmXtn3HvQN6
luwN6u+TvUkcZPA9QT6tjF5/YUbvpza1N1mtF8nq8Y+SPZbV4ylZfR44WZz/
WG9uVp8nHvm3WR1vI6v3i0/6zaxef0EW3y/0b2V1fmFW75826ZmcjieS0/lF
czq/WE7rSQ73R5yfTg7fs+7+z+n96uX0fNicjq+Ro/xz+F7DfzMnHy7qLGBw
QPG3cnp8QvLXzunz3OT1+c0cIY7m5dyH99dX39z9HuR1/JLX8Tl5+fWRv699
cx++Ny7ZPWKb1/k28vr75Odl5+LOjTCP8cjj/tb9HhK38vr7F+Z1/u28/Hxj
Z0V0v4cFsT/qbHF8PyMFPb/RAu6X8B8r6PikgPcJ4nMKOh6X2ntkt6TfKOj9
4xco/4IE7z82teO6+Rf0faFF/sKCvp+0C7hfw26Ksv1XfxxYcgr3kUhRrj5/
2XXPrUH7aFFunD4Au/ehojx787mzl3wVLEXZ82jn182/SPch6u8VcX+Hni3q
+1KjSPehoqz8666pExD2JukHZG8V9f0uJP/tosxa+eV5q76H+5wp6ftdpET5
l7S/WEnHJyV9v3NK+r7plrSeR/1tSc7rTMd89G+Qvl/C+wv9myW877r34ZJ+
T7SofUj5tUv6/mzK+v4bKev5i5blpY9fuvbMJ9A+VtbvDynLM0/mD112DexO
WcfnluWdqdW1+7dgj9pb8t8o6/eSX5bpz/svwc2yfn8FZf1+apXpPVDW7502
xW8qWj9S0e+RaAXnAd5PsYp+v0hF6zkV/f5xKzgv8T7yKvo9aSs6n0ZFv6f8
in4/N0k/qOj3Vaui338h+WtXZO0ji3al43hPm6p+b0Wq+v0brWq9WBXnHeoH
UtXj61T1+LlVre8R26rOr0H+/SreL4i3WdXxB1VdP2iRv5D6t6u6nmCs9jfX
6vpIxOp45ltd/4haXU9YbLX/mNX1lOVW1yPE6npOj9X1DMfq+kuvpfoI2fut
rgd5FucT9HNWxu7vTHC3nkPxjZG/BuU7bjHfmzE/pDdB+TSJJy32w0bMH/U/
bHU9rkXxHCN/IbV/x+r6XJvsp62uv5mats+t6fpdpKbznV/T4xWtYX/Avrim
84tR/+U1rEfUK4X0eqi/U8N5jXh7a7re6NZ0PbOf/HnUPkf+LfEY5dOgeMep
vU/+JyieJvWfJHtA9sPELeJjNV3PDWs47zZh/mu6PtyuYf2innyaxsfUdT5z
6zr/SF3Xl+fXtb8o2RfXdf05Ru2X1/F9XIv5r+v6dk9d5+fU9frpJT2X2vfX
df3cI84RW+IxGo8G6Y3Xqf5OPFHX89Ws6/merGP/rMP8/6//fwEA9+b1
           
           "]]}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Low field in MPI Config\"", TraditionalForm],
       PlotRange->{{0, 600.}, {0, 0.00905}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {307.2, -189.86004134396768}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxd1z9rFEEYx/GJYAqrrcVixS4gLgopBHEwKCkUFsHaMWBhTHKzd3t3+XfJ
vAFhUQvLAat0W4oEnM7CZvEVDLY2Y2MhFiK7hz7fNOGT3zPPs7Oze6dXt0aP
n19QSl1fUerv7/7nhVb//+Swhg3sYA8HOMJqG/NhDRvYwR4OcITVS8yHNWxg
B3s4wBFWO5gPa9jADvZwgOOOvr5x5fu39Ut3+z/sSudLX+6tYYN6t6uf3XxS
rJ1d6+3hAEesV3uyf74n6zVslvVrw3zkHg57cl5Erkb699mPr4+2imE+rEdD
/a1hPnIH+5HcTxjpzx8/vFpN68N81Csrndlh/e3heuAC1sv1uncJG9Rb5A5u
YG+H63/Qu0UerH77c/Xpu4f3e3eYF+1w/zZ6J6tv7L1fOb94b9h/JftncF7J
eUUl52nUl6g3sK3w/FTy/jeVfv3ldPPT4s6w/0qef1vJ8wxwh3kRTqhXY3l/
srHcXz7Wv062z+s3m8P+Ua+Rl1hvxtg/7FDfoL9H3o7l+QXkHdZH1KexfD7U
RObZRN7/HHkxkfdPT/D8o97AFnaY16Cfn2D/E3n9Af06rI/on2BVS2dwXuP5
r7H/Ws4vkZsa7z9yV8vnu0G9r+X70aI+1PLztEP/iPoEqyk+/6b4/ENeTOX7
q+ES9Qa2sJti/1N5/R55i3kB/bopvu9Qn1CvZjLPZvg+Ql7M8P2IvERuZvL6
7Ux+PznUN+jnkbe4vgB3WB+xPsFqLp3BOVzM8e8T5CVyM5fXY+fyfjisb2CP
fi3ygLyDI+Yn5Gof57+P/cMFrOES/cy+nGdhh/oGuYdbzAvIOzjCCVYHOH84
h4sDnD9cwgbrLexQ38AebrE+IO/geCDfj4T16lDWZ3AOF4c4f7g8xPkjt+jn
4Ab1HnkLB7jD/Ih+CVZHOH84P8L+j2R/jfoS9Qa2qHfIG9jDLRzgDo5wgtUx
9g/nx9g/co28RG6QW9jBDdb7ZT78/6mFA9Z3yCPyBKsFPv8WMs/hAtZwucD+
kVvYwQ3We+TtAvtH3sER9QlWJ3j/4RwuYH0i+5XIDWxR75A3sEd9Cwe4gyP6
JeTqVDqD81PsH7n+5z+udaFi
           "]]}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{195.3125, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Low field in Alt Config\"", TraditionalForm],
       PlotRange->{{200., 500.}, {0, 0.00075}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {921.5999999999999, -189.86004134396768},
       ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1rurJEUUx/GzgisYdaoYlJgtyBYKGwjiwUVZfEArGPi8tVfXe+/cedTM
fbiu7m79A0L7CAwLjDbrUGTBygwEaQyNClOTNjEQA5HpwT3fSYYPv/Poamam
58n91Zs3HhKRLy+I/Pe+fb2t8uBL4QQXWN5BP5zgAsu76IcTXGB5D/1wggss
76MfTnCB5QP0wwkusOyhH05wgSVYO1jhACc4wwWusFzHfljhACc4wwWusOxj
P6xwgBOc4QJXWD7EfljhACc4wwWusHyE/bDCAU5whgtcYbmB/bDCAU5whgtc
YfkY+2GFA5zgDBe4wnKA/Qf69NUn/vj9yuMvbPfv/OjWAXna+dLW+UB/+uH7
Ly6OV7YuB3r9mbf8pXvPbl2Ry+HU/9zW7lD/uffnr6/v+2k/HA7tvATnnZ+a
9h/afRX1cmTnO1iP7PkCnI7svgwXuMIys/fTzWyuM+yf4fyoz6gvqK+wHFs7
WI/1q5/vXvvx9vPT/mN7PxOcUV8wrx5P91en/XPb7+a2X+f28xHm+s1fF/e+
fe2laf8uf2Xaj7zM9e87s/unX1+b9iOXhe13C1uvcIDTYrr+l6f9i+m8V6f9
C7uvwrK08xysSzsvLHXvkV8ee+O3V6f9S3s/8xLnX9rrq7Cs7HwHKxxWenn5
3YX7D7847Yfzys4vK3t9FZZo3URcT7Tn8dHO12j3t3DAvIg8YX8X7ecvw320
n8eCfIAr6kfsk7Wtb9b4PVzb6/Wwor9d2/kB9RH1aW2/fx3qM66nR3+BB7iu
7fd/xDzZ2P3Nxva7ja33qFfUtxu7L6A/wgnuMD/DPVzgYWOfHxXXM6JeTmze
nOD3ELk/wfMJeYs8II9wgjvsz8h7zC/wgPqKfEQup/Z51ZzieYzcI1fkLfKA
PJ7a52VC3sEZ7uECD3CFR1jOcP4z/B9A7mFFfQuHM3veiP6EvIMz5vVwgQe4
7jz9fxwxX85t3pzj/LA/x/8j5C3mBTjCCf0d8gz3cEH/gLzCIyyf4Pywgz2s
cAsHOMIJ7uAM93CBB7jCIyw3cX7YwR5WuL2p8uArII9wgjs4wz1csG9AXpGP
yOVTmzewgz2scAsHOMIJ7uAM93CBB7jCIyy3rBvYwR5WuIUDHOEEd3CGe7jA
A1zhEZbPrBvYwR5WuIUDHOEEd3CGe7jAA1zhEZbPrRvYwR5WuIUDHOEEd3CG
e7jAA1zhEZbb1g3sYA8r3MIBjnCCOzjDPVzgAa7wCMsd6wZ2sIcVbuEARzjB
HZzhHi7wAFd4hOWudQM72MP6v/8FuhRu5g==
           "]]}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{93.75, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"High field in MPI Config\"", TraditionalForm],
       PlotRange->{{100., 500.}, {0, 0.00085}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {307.2, -569.5801240319031}, 
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1ruKJUUcB+BaQQOjE4tBi9mC2ChsIIiFm5gIjWDgvXZ1ve9Oz8ze3N1x
6wWE1icoMNqsQxHBygxMGp+gMDVpcwORcwa3v5MM3/z+l6rTM3PmuatHb117
IoTw/YUQ/vu6f70Tw+OviDOuOLxLP8644vAe/TjjisP79OOMKw4f0I8zrjh8
SD/OuOLwEf0444pD2rrDESecccEVNxyusB9HnHDGBVfccLjKfhxxwhkXXHHD
4WP244gTzrjgihsOn7AfR5xwxgVX3HC4xn4cccIZF1xxw+FT9uOIE8644Iob
Dp+xH0eccMYFV9xw+Jz9OOKEMy644obDF+zHESecccEVNxy+ZD+OOOGMC664
4fAV+3HECWdccMUNh6/ZjyNOOOOCK244XGc/jjjhjAuuuF2PL1x+9q8/Lz39
2v4bN9iPI043tv2ZvJznz+zzSn0jD0cHX9y7O4pXXnq7v/jo+b3j0bY+kWf6
y3n+8mH/Ufzn0d9/vHm1P+wnD+M2343bvMP9GH/4/eEbv569ejjfGH/7+afv
nlov7T2Mh/O8cjgvHs/3xcP5ySfmF/bP1Nfz/PLeC/0Nr9SH4+283fH2fB3u
qY/H2/kDTng83r5fmXxiX2HfTF6P44s3frzwy5OvH+5P3uhf2RdOtt6dcH/c
n2zPH/FwwvMnH3HGE+cp5DOuJ9ufj4W8ka/MD6c8/9Ntf3fK/ckj/cPpdl8i
H0+3v28ZT7iwbyav7FtwwyvnCTe383c3+f3HPY70D+TpJvenPuOJ/oJnXJm/
MK/hFYdb23m7Wzx/8v7W9v2P5ANO1I/kmXwiL+QzeSVfcMMrDrf5+3+bzyPc
44gH5iU8Up9vbz/PJlyon8krXqhveMXhzta7O9t5He5xvLP9fB7IE/lInvGE
C/0zeSVfyBv5isPdrXe4u8v9ySMeqE/kI854wgXPuOIFN7zi8A33xx3uccQD
TnjEGU+44BlXvOB27sP/nyt5uLfNd7jDPY54uMf98Uh9Jp9wwTP9FS+44ZV5
4T73xx3ucbzP8ydPeMQZT7jgGVe83I/h8VcjX3F4wP1xh/sH2/mRfMAJj/Rn
8gkX6mfyihfqG16pD2fbfIc73J/x/MkHnPCIM55wwTOueMENrzh8u/UOd7jH
EQ844RFnPOGCZ1zxghtecXi49Q53uMfxf/8LtsN15w==
           
           "]]}}, {}, {}, {{}, {}}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{93.75, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Large,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"High field in Alt Config\"", TraditionalForm],
       PlotRange->{{100., 500.}, {0, 0.0006}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {921.5999999999999, -569.5801240319031},
       ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}}, {}},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6821663147539053`*^9, 3.6821663607216673`*^9}, 
   3.682166518244054*^9, 3.682166655630287*^9, {3.6821670352094097`*^9, 
   3.6821670480295887`*^9}, 3.682354907712862*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.681054842422659*^9, 3.681054845412569*^9}, {
   3.681055384879377*^9, 3.681055456043747*^9}, 3.6810554926688833`*^9, 
   3.6810558506934843`*^9, {3.68112794755727*^9, 3.681127954033312*^9}, 
   3.68112825872847*^9, {3.682355070096325*^9, 3.682355070274377*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["BELOW IS AN ANALYSIS OF THE DATA FOR THE MICROCHIP AT AN OPERATING \
VOLTAGE OF 650 VOLTS",
  FontWeight->"Bold"],
 StyleBox["\n\nFirst, an examination of the successfully trapped molecules. \
IE. lasting longer than 200 \[Mu]s.",
  FontSlant->"Italic"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.672406299411086*^9, 3.672406369807857*^9}, {
  3.6810543014677143`*^9, 3.6810543880049334`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowFieldMPIData", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Low Field in MPI Config\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.667835216901589*^9, 3.6678352210918207`*^9}, {
   3.667835253088744*^9, 3.667835379778184*^9}, {3.6679069353101892`*^9, 
   3.667906953295762*^9}, {3.667907001235524*^9, 3.667907002652276*^9}, {
   3.669402967041664*^9, 3.669402968928097*^9}, {3.66940300545721*^9, 
   3.669403009651804*^9}, {3.669500284674066*^9, 3.669500292955172*^9}, 
   3.669725479331181*^9, 3.669725593334639*^9, {3.670510367700489*^9, 
   3.6705103701512833`*^9}, {3.670523295423088*^9, 3.670523297199369*^9}, {
   3.670593423482819*^9, 3.67059342696406*^9}, {3.6705934618746653`*^9, 
   3.670593463285919*^9}, {3.6712232389425488`*^9, 3.671223250988199*^9}, {
   3.671291417957312*^9, 3.671291420158251*^9}, {3.6712918271820393`*^9, 
   3.671291868023569*^9}, {3.671370957240224*^9, 3.67137099953724*^9}, {
   3.671371089917704*^9, 3.6713710906504087`*^9}, {3.671376809332457*^9, 
   3.6713768483151627`*^9}, {3.671376883455371*^9, 3.671376886596787*^9}, {
   3.671726439584536*^9, 3.671726500078903*^9}, {3.6717265580140343`*^9, 
   3.671726558461043*^9}, {3.671730031847269*^9, 3.6717300338245487`*^9}, {
   3.671730148812173*^9, 3.6717301695338907`*^9}, {3.671730240384691*^9, 
   3.671730242812039*^9}, {3.671730621453169*^9, 3.671730626408749*^9}, {
   3.671730735332095*^9, 3.671730753915518*^9}, {3.6717331441420927`*^9, 
   3.671733149723336*^9}, {3.671733596198204*^9, 3.671733600513226*^9}, {
   3.671751746475916*^9, 3.671751747871023*^9}, {3.671806905870159*^9, 
   3.671806908477103*^9}, {3.671807300573804*^9, 3.671807308170566*^9}, {
   3.671807389141344*^9, 3.671807442914322*^9}, 3.671807476985197*^9, {
   3.6718113364472313`*^9, 3.6718113391747293`*^9}, {3.671811396268889*^9, 
   3.6718113978866997`*^9}, {3.6718969037967987`*^9, 
   3.6718969042150927`*^9}, {3.671896941023902*^9, 3.671896941830223*^9}, {
   3.671986655343342*^9, 3.6719866591860027`*^9}, 3.6724063496089783`*^9, {
   3.6750009961269903`*^9, 3.6750009989659653`*^9}, {3.6750010368305397`*^9, 
   3.675001084121121*^9}, {3.675001116044058*^9, 3.67500114073326*^9}, 
   3.675001247298616*^9, {3.675001373218972*^9, 3.675001383335866*^9}, {
   3.675001908196707*^9, 3.675001909710918*^9}, {3.675001976857985*^9, 
   3.675001986214384*^9}, {3.6750024612696*^9, 3.675002505848626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highFieldMPIData", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<High Field in MPI Config\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.671732963882579*^9, 3.671732986707149*^9}, {
   3.671733121424595*^9, 3.671733164759647*^9}, {3.6717517432765408`*^9, 
   3.6717517806576366`*^9}, {3.671797361621078*^9, 3.671797363095244*^9}, {
   3.6718068081981983`*^9, 3.671806812891964*^9}, {3.671806858687076*^9, 
   3.671806859038855*^9}, {3.6718113433945627`*^9, 3.67181134520055*^9}, {
   3.671896911636156*^9, 3.671896913210784*^9}, {3.6719867212703733`*^9, 
   3.671986724671282*^9}, 3.67240634960926*^9, 3.675001394199885*^9, 
   3.675001919399118*^9, 3.6750020192208757`*^9, 3.675002545725992*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowFieldAltData", ",", "20000"}], "]"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Low Field in Alt Config\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.671806275296825*^9, 3.671806303455255*^9}, {
   3.671806347358521*^9, 3.671806383679628*^9}, {3.6718064220390387`*^9, 
   3.671806424207232*^9}, {3.6718064642916403`*^9, 3.6718064669309807`*^9}, {
   3.6718065013305197`*^9, 3.6718065357363977`*^9}, {3.6718065767252607`*^9, 
   3.6718065782055407`*^9}, {3.6718066663922253`*^9, 3.671806675986937*^9}, {
   3.671806743602935*^9, 3.67180678639237*^9}, {3.671806853191099*^9, 
   3.671806871472752*^9}, {3.6718113488990593`*^9, 3.671811350832982*^9}, {
   3.6718969170384493`*^9, 3.6718969176785793`*^9}, {3.671986369746079*^9, 
   3.671986387922196*^9}, {3.671986452450508*^9, 3.671986482723908*^9}, {
   3.671986538945705*^9, 3.6719865684018106`*^9}, {3.671986607430962*^9, 
   3.671986641303533*^9}, 3.672406349609522*^9, 3.675001395630026*^9, 
   3.6750019257119713`*^9, 3.675002021845222*^9, 3.675002549453123*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highFieldAltData", ",", "20000"}], "]"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"12", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (kHz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<High Field in Alt Config\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}]], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.6718110748262577`*^9, 3.671811122924124*^9}, {
   3.6718113530602007`*^9, 3.671811359202157*^9}, {3.671896919322907*^9, 
   3.6718969196749163`*^9}, {3.67198670402214*^9, 3.671986709478715*^9}, 
   3.6719867448704033`*^9, 3.672406349609806*^9, 3.675001397236978*^9, 
   3.675001930398773*^9, 3.675002024148842*^9, 3.6750025517907343`*^9}],

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "d"}], "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.671811180825755*^9, 3.671811213731708*^9}, 
   3.672406349610024*^9, {3.6750010408518953`*^9, 3.67500104253648*^9}}]
}, Closed]],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NHqoUx3H2DBe1bi/8hr60cAFDecT9OOKGs6n6LeVhL1lDfcPzF8R+lQ1nM8x
vqbhvo356hr2Q8w3rPF+YEPQmxrOe8AtDfs/cFvDfQX261JcP32K8xtSOB+g
P2lM8fGmFPenOYX93I/4p7g+VsFPKeyXkG9L4XyB8fYU97dD6ONM8f6pK4X9
Htgt+D0p3o9VUt3F+sqkRcBqivd/8wIXUrzfXBT6l1L8vaScQv0GfyWF/QD9
5mqKv9fUUrw/XE/x/vSw0KchcFP4o5Xi/fp2SvTD01x/fZr34w1prq8xzd9X
TGlurznN32Msaf6+ZE3z9wgS8mxp/n5iF/o4hHxnmr+PudL8fcqd5u87njT6
2f33KEFXBc6nUf/w/lQQ44tp/h5XEvqU06hneK+qpPl7VFXYWxPj62n+3jWc
5u9nDSG/mebvb6001jfeI9sC6zL8/Vaf4e+VhgyPjzHD3zdNGT6fOcPf+yxC
njXD32cpg+8BwG/L8Pdle4a/Bzsy3F6nmN+V4e/L7gx/f/Zk+HuuIuxRM/z9
PZ/h78OFDOofxheFPaUMf68uZ3j8Khn+PUFV2FcT8utCn2HB3xDzNTP8e4NW
hr+PtzNYP/i+QZfl8+mzXD9DFvUR8xuz/PsKU5bHy5zl+lmy/PsIqxhPWf79
gy3Lv8ewZ7n+DqGPM8v948ry7z3cWR4/j9BHyfLvJ1QhLy/kFYT+xSz/fqWU
Rb0EvSz0rQj/VIV+NSG/nkV9WIj4Z/n3KQ2Bm2J8S+jfFvy6HKfrc8hXJ+Kf
49/fGAU2CX5zDvUe8i05nm9WwU851FN8D2TLYT3OQ/xzWO/gd+Rw/sb8TqGP
Kye+x8lhfV6B+Iv5lRz/fkkV+ubF/AWBi0JeKYf6jXiVBX9F6F/NoR7D3pqY
vy70HxbyGznk0+WIfw717yrEP8e/t2oLft0Ql68f4uMNQzy/jYJuGkL9gTzz
EPenRWDrELeX/ivv3yJjYWg=
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{339.84375000000006`, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Medium,
       LabelStyle->{12, 
         GrayLevel[0]},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Low Field in MPI Config\"", TraditionalForm],
       PlotRange->{{350., 1000.}, {0, 0.01585}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {192., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxdmEuoG1UYx6dFa3AVUSGKSIoooVJMVUoQxIPFGqql02o1PjstFIILjfhK
8zwzSe4dxcf4WARxMSBCCrXMMkjFEREDggy6MLiQUVxE3YwuJEgXUudE/H7Z
XH78v/d35mRudp967tjpnZZlvb3Dsi79zT9nlPX/TxFcBlfBCmyDHXALrMEB
OARH4BicgFNwBrY6kosddfL249U9Z2+6518ud9TeAzf8/vP+K3OubnhPzqqj
Lp7949vDp6o529CdDd+VcwusO+rvwTMXXny3nnMADjvqvb92nZg+eF/O0cb/
UM4x7JOOeufrYf2z/uGc04766pP5G7uygzlnm/4O5Gx11W3PfrjjwuX35lzs
SvtyV5244pvrjv7wgOm/K/OprqzPhu50zXxs039X1qfhH3RlfyHiRbCPUX8C
PUU/GfqxeurLt/a9snf3EdN/z8znIdN/T9Xti6UXvj9m+u9JfwV7G/Gcnuy3
1ZP16B72D/sQHCFfjPoSxEt7Zj5Gz2Bv9U09j5j++2Z+x03/4GpfHbz5pZ3v
F54w/ffV+eWJl4/caPztvpmP0R3orb6pr2H6BwfwD5EvQr1xX1198ovvbj39
mOkf8VJw1lfpB1d99Onnj5r+B5KLAxm/DL06MOfzcdM/7G2wM0D/iKcH6H8g
9xMO5Pyjgepec/7+nzoPm/6RLxnIeaUDeV6ygTwP1lDGK4LLQ3Xt64d+u+zO
o6b/ofRXQ5x/6M4Qzz/i6aF83oOhOe93m/6H8r6MhvJ5j8EJOB3K5yFDPktL
vaDl/VHU8nkuwb6sZT8V2Fe1PJ81LfettDzvdS33bcO+gXiOlvNvQm8hflvL
86uh+9rM/ymzD/AU9qGW522m5XmMkG8O/1irH59/7c1f/jyR8wL9Joi3RL4U
vIJ/hnmstXweLdfsy+QvuOrcx5cMnjb7d9WZX2/ZVzj3pNm/K+dRdmV/Fdec
d8fs35X91sAK8euuvB9s5GvA3kH+pivn1YLeduU8tCvn54MD5J9iPiHiz5A/
cuX5nLtyPzHqWcA/wTyWrtxf6sr7aoV4GXiNeixP1l/wZH1FT/qXPNyPnoxX
8WR9VdjXoCtP3h91T97/tifv04Yn7wcH/k0P9y3yt5Ffw9735P0VgKeoL0T+
GewjxJ978v6M4b8AJ4i3RLzUk+9jK8TPoK89+T5ljaReGOF9EHppJOsrj2S8
CvyrI7m/GuKpkay3DrZH8vuqAX8H+Zsj+X7ZArcRX8PfR/wA+hT9hSP5fTlD
vRH0Ofxj6IsRvs9H8v+VJepL0c8K/WaoZ4181ljaF8b4f2gs7UtjfP+P5ftJ
ZWzOpzL7H8v3mRriKXAd9djQG6jPGct5NGHfArfhr1G/Dz1A/VPoIfxnsI8w
jzns47Hc72LT/36zf+hL5E/BK9hnyL9GfdZE6oWJ9C9OpH1pIusrgysT2V8V
XAMr+Nc3+e8w+4feQD0O9OZEzqMF+zZYw99H/gA8ncjfO8KJ/L1jhngReI78
MfQF8iXgJeaXQl9N5O83GfQ16rW2JBe2ZH/FLVlfaQu/D23J+BVwFfFq8FfI
X9/w9Wb/sG9sdPN7lAO9Cf8W9Dbq08jvo94A/lPkD+E/g38EfY78MeIvUH8C
/yX0FLyCfYZ61tCtbdlPYVvWU9yW9iXo5W2ZvwKuwr4GXSF/HboNboAdcHNb
Wf//tJC/jXwa/fnQA/AU8UPkn8E+Qv45/GPoC+gJ9CXip8i/AmfgNfwtH/v3
pX0RXAKXfVlvBfGq0GvQFbiO+Da44ct5OPBvglvI3wZrsI98AfQpOES+GThC
vLkvz1sMfYH4CeItYZ/CfgXOwGv4W6/+p/8Dp6OpMg==
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{393.75, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Medium,
       LabelStyle->{12, 
         GrayLevel[0]},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Low Field in Alt Config\"", TraditionalForm],
       PlotRange->{{400., 800.}, {0, 0.002}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {576., -118.66252583997979}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmE2I3GQYx9OidfUUUWFFkRRR1spiqlKKIL5YrEO1NK1W12q7aaGweNBo
d2aSzNc7cyriR1APi4gERNhCLTkuUjEiYqEgQQ9dPEgUD1Uv0YMU6UHqPIM+
v7ksv/k/X//3zSRvdvuJVw+d3Oo4zuIWx7n2999P+bpx/v+pwDW4ATunNLtg
D+yDDTgAh+AIbMEZOAcX4BJcgWtwA3ZWNbtgD+yDDTgAh+AIbMEZOAcX4BJc
gWtws2oW99z5+8+7bnps+kVb625b617bHH/wsL/jzENT9mf6jimbGT8y5QAc
ts3VM398t/+EP+VoxmbKFpyBc/QvZrxnyiXiq7Z5/69ty2tPPzHlGvEN4p2O
effiqPXF4NEpux0d73V0PR9sOuaBVz7ecv76x8U/OER8hPoWeob8vKPnLRBf
Ir7qyPrvE//Qm4755rONt7Y1e8V/V9dzuzreA/uIN13tJ+jqeUNw1NX7abt6
/bOuvn5y1C9Qr4ReQa/BDfo5se7nxlr3Yl3fB5tY1w9ivf4hOIrN8g3f3n7w
h6fE/yw/EP+x+fqdnd3F7QfEfyzrf0j8x+bv4cvnV99bEv+x7Mdh8R+bVnB1
/tQlia9jc9ub+3677uGD4h/sJJrdxPRuPffkT+mz4j+R9dgv/hM9j0m0nyDR
84SoHyXm3OZy58Bdz4l/9MsSs/ee9tYP5l4U/4mpP7z5k8+/fF78z/qJXiYm
+fXenXNnXxL/s3mPin/oTWJ+fO2Nt3/5c1n8p5rdVMd70P1U9zep7hekst9H
xH8q+xuK/9TceMdHx+67KGxRP0P/PJXrQfQiNWc/vbaAx8R/am45/tX39598
QfxDr9G/QT+np+d3e9qf19P9/Z7eH9PTfgJw2NPzRGCLellPz5v39HoU4LIH
/5i/hr8G+U5f7odyPbp9PY/X1783v4/972P/kR9Cj8AWnIFz9Cv6+voqMV/V
1/7qvt6PBvnOQMe7A+z/QMf7A93PDPT6BwO9niHqRahnB/r3naFejvgC9Uvo
1UDfX2rM2wzk/v2M+B/q/i7YG+p6/lDnm6G+fwVD+Ed+NNT3RzvU9+sMnKN+
Ab1EvQp6DW5Qzxnp+dyRjvdG+nnkj3D/H+nnV4D8cKTni6DbkX6+ZKiXI75A
fDnSz5cKXKNeg3zH6vg5q/25Vj/f5q2u51ldbwHxPvTd0I2V67M15ZbV54UA
+UvQQ+SvWH0+iaw+78XIt9BPgzPwGubPUW/d6vNhAd4Al6h/AXoFP5tWn0dr
q89flxHfoP4V5DtjnT831ro71us7P8b7AfQF5PuI3z3G+Xms52shP0D+EvJD
6CvgCBzDr5313yX7P8Z5HLyG/Bz6OuYvoG9AL6FfwDwVeBPx9Vif3y+P9ftF
A/0KdGei9bmJ1l3o8xO8HyB+YaLn9Wf63bL/iDeIb6FfAF5CfAheAUfoF0O3
8HMa/bKJfn9fA+cT/f+AdXCB+A3o5X/8D+VE9D0=
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{295.3125, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Medium,
       LabelStyle->{12, 
         GrayLevel[0]},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"High Field in MPI Config\"", TraditionalForm],
       PlotRange->{{300., 600.}, {0, 0.00205}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {192., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
      GraphicsBox[{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmE2o42QUhjOiY3EVQaGKSAY3ZWAw/jAUQfxwUMPoMJnR0e5uHBCKizGg
aL1t2i+9vfdGUIw/iy5cBETobIYsi4wYF2JBkODG4iq6KrqJGykyC9F8Fc9z
N5eH9z3vOefLD21PXX3j8mu3WZb10QnL+ud/8/eusv7/Z4MdsAtWYB8cgEOw
BqfgDJyDC3AJrsA12NqXbIMdsAtWYB8cgEOwBqfgDJyDi3115twDv/969q6n
/uVyx/c3XIFr+K2hevXRK+7p6w81bA/Vret//HjhqtuwM1Qffz/xvo6ebNjd
6aphBd0fmvwnGg52+Y81HMKvkZcO1cPXPj9x846nG852ut9wPlT3vn/+t9sf
v9RwsfNfNvvv+r1o9odeo94aqb07f7jv0s/Pm/1HanjPjed+2X/J7D+S9e5I
zqNG6tsPH3nnzKmLZn/4A+jhSPbXIzlvOlKef6v95k+mPkN9Dn8BLjF/hbx6
pD798+Te/IUrZv9I6nakbqz33r744Mtm/0ju60ZyHgXdj7B/JM83RD8dYX/U
Z5G5n86b/dG/QP8ykudbYZ86MvffBbP/GPuPZb4zlufpjuV8Cro/lv2Dsdwv
hF/Dn47l9cnA+Vh99+Xyg5O12acYy/1K9Kug19CtiZzHnsj9nImsdydyHjWR
ef5EnmcAPZzI+TXyU+RnmC+Hv4C/RL8K9TXY0pJbWlWf3f3FV9+8Ys5Dy7w2
/I6W+3TALuq7GvePlvN78PvQe+gfaHnefdSH6DfQeP/An2j5PKXQ5+iXIX8B
zuFfIr8ArzTuZy2fx7WW75MK+2zQv0b+FudnxVJvxXgfxDKvHct+Dvwd6G4s
5+1CV7F8H3nQ/Vju3wMHsXw/9pEXYr8B8jX0BPkp9Hms/hq/fvOtTzxz/bHf
AvPk4CXqi9g8L8+a6w+9RP4aegXeoF+N89jG5nl6xlz/qfS3pvg8MJX5bejO
VM7fgd9Ffncq+yvoHvJ85PWgB9D74BA8QL2GnoBTzDcHZ/AvpuZ9cc5cf+y7
hF5gnhW4nMrPg2vkVfBvME8N/xZsHUh/C2wfyHnbB7Legd6B7h7I+brwK/g9
6D70HvQAeh96CH0AXR/I803AKXh+ID+vZ9AXyM/hX0IvwCtwifw19qnAG9TX
6L8FWzPJrZnsZ4PbYGcmv890oLvI787w/EP3UO9D70EPoPeRH8I/AGvUJ9DT
mbl/z5rrD382k+e9wHnkyFvO5PfDAv4V/CX8a3CFeTbgGv4t+lmHcr/WodRt
cPtQ5jnQO9Bd6F2wgt8D+5ivBz0A95EfQh+ANTg5xPdx9J/Dn4EX4By8RF4B
fQUu4V9Dr6BvsH8N/xZ+60j+PtE6kroNbsPvgDvwu+AuWKHeO5K/v/jw9+AP
wH34Q+gD5GtwciTPK0XeHJzBv0C/HP4l9AK82uWdNtcf9Wv4K/AG/hr6Fvta
x5Jbx9JvQ29Dd8CdY1x/1HfhV2DvWO7vg3vID6D30S8ED8Aa/RPoKfLn0DPw
Apwjf4m8AvusUF/Cv4ZegTfw19C3YCuR/lYidRt6G+yAO6h3wV34FdgD++Be
gucfeh8cgge7evN7r8Z8yc5vfi9OUT9HfYb6Bfw5eIn6AvUr+Ev41+AK/g24
xj5b6NZ7/+l/Axrj1t8=
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{393.75, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"Success Rate\"", TraditionalForm], None}, {
          FormBox["\"Frequency (kHz)\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Medium,
       LabelStyle->{12, 
         GrayLevel[0]},
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
              Part[#, 1]], 
             (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"High Field in Alt Config\"", TraditionalForm],
       PlotRange->{{400., 800.}, {0, 0.00145}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {576., -355.98757751993935}, 
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -237.32505167995959`}}], 
      LineBox[{{0, -237.32505167995959`}, {0, -474.65010335991917`}}], 
      LineBox[{{768., 0}, {768., -237.32505167995959`}}], 
      LineBox[{{768., -237.32505167995959`}, {768., -474.65010335991917`}}], 
      LineBox[{{0, 0}, {384., 0}}], LineBox[{{384., 0}, {768., 0}}], 
      LineBox[{{0, -474.65010335991917`}, {384., -474.65010335991917`}}], 
      LineBox[{{384., -474.65010335991917`}, {768., -474.65010335991917`}}]}},
    
    Antialiasing->False]},
  ContentSelectable->True,
  ImageSize->{780., 486.65010335991917`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.67198655491304*^9, 3.671986572263214*^9}, {
   3.671986644116452*^9, 3.671986667726696*^9}, {3.671986735664747*^9, 
   3.67198674823308*^9}, 3.672229195704817*^9, 3.6723995766712093`*^9, 
   3.672406366777636*^9, {3.675001021917201*^9, 3.675001043167799*^9}, 
   3.675001098307766*^9, {3.6750011288801737`*^9, 3.6750011555678797`*^9}, 
   3.675001260772443*^9, 3.6750013586582527`*^9, 3.6750014121189413`*^9, 
   3.6750018911497*^9, 3.675001943540155*^9, 3.675002037384777*^9, 
   3.675002516767852*^9, 3.675002565141279*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["EVERYTHING BELOW THIS POINT IS AN ANALYSIS OF THE TRAPPED \
MOLECULES IN THE LOW FIELD SEEKING STATE IN THE MPI CONFIGURATION AT 650 \
VOLTS\n",
  FontSize->16,
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox["\nThese graphs compare the initial velocity sample with the \
trapped molecule velocities for the low field state using the MPI \
configuration at 573 kHz",
  FontSlant->"Italic"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671897119418868*^9, 3.671897177808055*^9}, {
   3.671929823730041*^9, 3.671929827001545*^9}, 3.671992267223769*^9, {
   3.672228804159605*^9, 3.672228865198934*^9}, {3.681053923800117*^9, 
   3.681053934314385*^9}, 3.6903043403471165`*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakVelData", "=", 
   RowBox[{
    RowBox[{"getVelocities", "[", "lowFieldMPI", "]"}], 
    "\[LeftDoubleBracket]", "226", "\[RightDoubleBracket]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671895298193215*^9, 3.671895325748622*^9}, 
   3.671897177809507*^9, 3.6886755904667234`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakVx", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "peakVelData", "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", "27"}], 
       "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "40", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Final vX * 27\>\""}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671895357099962*^9, 3.67189545460008*^9}, {
   3.671896074806272*^9, 3.671896153268407*^9}, {3.671896197594254*^9, 
   3.671896201499951*^9}, {3.671896236662858*^9, 3.671896287804305*^9}, 
   3.671896433438031*^9, {3.6718964890622396`*^9, 3.67189654514841*^9}, 
   3.671897177810377*^9, {3.671925439378859*^9, 3.671925444948915*^9}, {
   3.671925490832087*^9, 3.671925491142928*^9}, {3.671925590056435*^9, 
   3.671925720884837*^9}, {3.671925771288362*^9, 3.6719258408776827`*^9}, {
   3.6719260041005793`*^9, 3.671926021961844*^9}, {3.6719260636061983`*^9, 
   3.6719261360867357`*^9}, {3.671926170949378*^9, 3.671926196534305*^9}, {
   3.6719262368598557`*^9, 3.671926282497162*^9}, {3.671926319510963*^9, 
   3.671926337648425*^9}, {3.671926441415077*^9, 3.671926446634721*^9}, {
   3.671926486833981*^9, 3.671926547489544*^9}, {3.671926736801449*^9, 
   3.671926810130027*^9}, {3.6719269375556593`*^9, 3.6719269809930964`*^9}, {
   3.671927024773837*^9, 3.671927125716012*^9}, {3.671927162651692*^9, 
   3.671927180954323*^9}, {3.671927272432518*^9, 3.671927405265842*^9}, {
   3.671927508371649*^9, 3.671927547982854*^9}, {3.671927797995441*^9, 
   3.671927817568528*^9}, {3.6719278834403152`*^9, 3.671927886541568*^9}, {
   3.671979129772626*^9, 3.6719791384025307`*^9}, {3.671979284176076*^9, 
   3.671979284406592*^9}, 3.6719793273104477`*^9, {3.6719793968612633`*^9, 
   3.671979409513568*^9}, {3.6719794501937923`*^9, 3.671979450871595*^9}, {
   3.671979503910071*^9, 3.6719795043826647`*^9}, {3.671979748937928*^9, 
   3.671979749816036*^9}, {3.671993072370682*^9, 3.671993072879533*^9}, {
   3.6719931485389147`*^9, 3.671993148709899*^9}, {3.6719931917140837`*^9, 
   3.6719931918119793`*^9}, {3.6719932632332363`*^9, 3.6719932634328537`*^9}, 
   3.672066726268166*^9, {3.6722289257999773`*^9, 3.672228926512169*^9}, 
   3.6724018292535973`*^9, 3.6724024481325293`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakvY", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Catenate", "[", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "peakVelData", "]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "35"}], 
       "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "40", ",", "2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "40"}], ",", "40"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1500"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Final vY * 35\>\""}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671895431254941*^9, 3.6718954697880297`*^9}, {
   3.671896067931342*^9, 3.6718960697927237`*^9}, {3.671896336670608*^9, 
   3.671896340438545*^9}, 3.6718964301380253`*^9, {3.67189655362628*^9, 
   3.6718965538919363`*^9}, 3.671897177811184*^9, {3.671925454951606*^9, 
   3.671925456800975*^9}, {3.671925493105287*^9, 3.671925493347971*^9}, {
   3.671927560192513*^9, 3.6719276222876177`*^9}, 3.671929647889065*^9, 
   3.671929743487846*^9, {3.671930177819807*^9, 3.671930199623893*^9}, 
   3.671979183294064*^9, {3.671979282266911*^9, 3.6719792824949627`*^9}, {
   3.671979329451342*^9, 3.671979333930685*^9}, {3.671979452768558*^9, 
   3.671979453236145*^9}, {3.6719795067812233`*^9, 3.671979507057233*^9}, {
   3.6719797516869297`*^9, 3.671979752598184*^9}, {3.6719930752962217`*^9, 
   3.671993075563137*^9}, {3.671993153264008*^9, 3.6719931534184217`*^9}, {
   3.67199319471959*^9, 3.671993194857381*^9}, {3.671993265648534*^9, 
   3.671993265876031*^9}, {3.6720668095019417`*^9, 3.6720668534090548`*^9}, {
   3.672228919555513*^9, 3.6722289208934917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initVx", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "initialVelocities", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "*", "1000"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "40", ",", "2"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Initial vX v. Final (Red) vX*27\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671895824999107*^9, 3.671895975272954*^9}, {
   3.671896052054047*^9, 3.671896060510997*^9}, {3.671896297608734*^9, 
   3.6718963176097593`*^9}, 3.671896425092259*^9, 3.671897177812026*^9, {
   3.6719254774341803`*^9, 3.67192548829241*^9}, {3.671927893176656*^9, 
   3.671927981698852*^9}, {3.671929298589633*^9, 3.67192932827067*^9}, 
   3.6719791853848543`*^9, {3.671979276107534*^9, 3.671979276783407*^9}, {
   3.671979613542347*^9, 3.671979614324892*^9}, {3.671979757501277*^9, 
   3.6719797582130003`*^9}, {3.672229037707563*^9, 3.672229040843471*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"initVy", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", "initialVelocities", "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "*", "1000"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "40"}], ",", "40", ",", "2"}], "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Initial vY v. Final (Red) vY*35\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671896356933069*^9, 3.671896374238907*^9}, 
   3.671896422154405*^9, 3.6718971778126583`*^9, {3.671925500220969*^9, 
   3.671925501947514*^9}, {3.671925579786862*^9, 3.671925581486003*^9}, {
   3.671929656291127*^9, 3.671929678704804*^9}, 3.671979188067288*^9, {
   3.671979279767192*^9, 3.6719792800520897`*^9}, {3.6719796177545757`*^9, 
   3.6719796179068203`*^9}, {3.6719797600620127`*^9, 3.671979760946533*^9}, {
   3.672229042907196*^9, 3.672229044149776*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distributionAt300mK", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"maxboltz1D", "[", 
       RowBox[{"v", ",", ".3"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1550", "/", 
        RowBox[{
         RowBox[{"FindMaximum", "[", 
          RowBox[{
           RowBox[{"maxboltz1D", "[", 
            RowBox[{"x", ",", ".3"}], "]"}], ",", "x"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "40"}], ",", "40"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.671928304286634*^9, 3.671928401001244*^9}, {
   3.671928431261306*^9, 3.6719284319966516`*^9}, {3.6719285200938597`*^9, 
   3.671928522855709*^9}, {3.671928621485158*^9, 3.671928627088311*^9}, 
   3.671929071829088*^9, {3.6719291961453447`*^9, 3.671929202636417*^9}, {
   3.6719294706841307`*^9, 3.6719294710026617`*^9}, {3.672403176828785*^9, 
   3.672403179113636*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within the tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\)\[NoBreak] digits of \
working precision to meet these tolerances. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.671929471664342*^9, 3.671929840462442*^9, 3.671930419259807*^9, 
   3.6719789997448387`*^9, 3.6719792066561813`*^9, 3.671979304293325*^9, 
   3.671979522899687*^9, 3.6719796371137238`*^9, 3.671979815254138*^9, 
   3.671980398092955*^9, 3.671987952328082*^9, 3.672066666217895*^9, {
   3.672228941112529*^9, 3.672228967558112*^9}, 3.672229057436965*^9, 
   3.672399589562105*^9, 3.6749091996352253`*^9, 3.675694413257819*^9, 
   3.677851811533639*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"distributionAtXT", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"maxboltz1D", "[", 
       RowBox[{"v", ",", ".0517"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1550", "/", 
        RowBox[{
         RowBox[{"FindMaximum", "[", 
          RowBox[{
           RowBox[{"maxboltz1D", "[", 
            RowBox[{"x", ",", ".0517"}], "]"}], ",", "x"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "40"}], ",", "40"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"distributionAtYT", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"maxboltz1D", "[", 
       RowBox[{"v", ",", ".0928"}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1550", "/", 
        RowBox[{
         RowBox[{"FindMaximum", "[", 
          RowBox[{
           RowBox[{"maxboltz1D", "[", 
            RowBox[{"x", ",", ".0928"}], "]"}], ",", "x"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", 
       RowBox[{"-", "40"}], ",", "40"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xComparisonGraphic", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "initVx", ",", "peakVx", ",", "distributionAt300mK", ",", 
      "distributionAtXT"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yComparisonGraphic", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
     "initVy", ",", "peakvY", ",", "distributionAt300mK", ",", 
      "distributionAtYT"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"xComparisonGraphic", ",", "yComparisonGraphic"}], "}"}], 
  "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.6724040011251287`*^9, 3.672404036368335*^9}, {
  3.672404319733962*^9, 3.67240432584381*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"I", " ", 
   RowBox[{"don", "'"}], "t", " ", "like", " ", "this", " ", 
   RowBox[{"graph", ".", " ", 
    RowBox[{"It", "'"}]}], "s", " ", "sort", " ", "of", " ", 
   RowBox[{"artificial", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.68112952666013*^9, 3.681129603625278*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
          RectangleBox[{-40., 0}, {-38., 2},
           RoundingRadius->0], RectangleBox[{-38., 0}, {-36., 7},
           RoundingRadius->0], RectangleBox[{-36., 0}, {-34., 10},
           RoundingRadius->0], RectangleBox[{-34., 0}, {-32., 18},
           RoundingRadius->0], RectangleBox[{-32., 0}, {-30., 34},
           RoundingRadius->0], RectangleBox[{-30., 0}, {-28., 55},
           RoundingRadius->0], RectangleBox[{-28., 0}, {-26., 89},
           RoundingRadius->0], RectangleBox[{-26., 0}, {-24., 112},
           RoundingRadius->0], RectangleBox[{-24., 0}, {-22., 176},
           RoundingRadius->0], RectangleBox[{-22., 0}, {-20., 241},
           RoundingRadius->0], RectangleBox[{-20., 0}, {-18., 329},
           RoundingRadius->0], RectangleBox[{-18., 0}, {-16., 452},
           RoundingRadius->0], RectangleBox[{-16., 0}, {-14., 602},
           RoundingRadius->0], RectangleBox[{-14., 0}, {-12., 689},
           RoundingRadius->0], RectangleBox[{-12., 0}, {-10., 900},
           RoundingRadius->0], RectangleBox[{-10., 0}, {-8., 986},
           RoundingRadius->0], RectangleBox[{-8., 0}, {-6., 1161},
           RoundingRadius->0], RectangleBox[{-6., 0}, {-4., 1299},
           RoundingRadius->0], RectangleBox[{-4., 0}, {-2., 1356},
           RoundingRadius->0], RectangleBox[{-2., 0}, {0., 1533},
           RoundingRadius->0], RectangleBox[{0., 0}, {2., 1424},
           RoundingRadius->0], RectangleBox[{2., 0}, {4., 1321},
           RoundingRadius->0], RectangleBox[{4., 0}, {6., 1261},
           RoundingRadius->0], RectangleBox[{6., 0}, {8., 1199},
           RoundingRadius->0], RectangleBox[{8., 0}, {10., 1053},
           RoundingRadius->0], RectangleBox[{10., 0}, {12., 897},
           RoundingRadius->0], RectangleBox[{12., 0}, {14., 703},
           RoundingRadius->0], RectangleBox[{14., 0}, {16., 581},
           RoundingRadius->0], RectangleBox[{16., 0}, {18., 467},
           RoundingRadius->0], RectangleBox[{18., 0}, {20., 342},
           RoundingRadius->0], RectangleBox[{20., 0}, {22., 233},
           RoundingRadius->0], RectangleBox[{22., 0}, {24., 152},
           RoundingRadius->0], RectangleBox[{24., 0}, {26., 125},
           RoundingRadius->0], RectangleBox[{26., 0}, {28., 72},
           RoundingRadius->0], RectangleBox[{28., 0}, {30., 55},
           RoundingRadius->0], RectangleBox[{30., 0}, {32., 29},
           RoundingRadius->0], RectangleBox[{32., 0}, {34., 20},
           RoundingRadius->0], RectangleBox[{34., 0}, {36., 8},
           RoundingRadius->0], RectangleBox[{36., 0}, {38., 2},
           RoundingRadius->0], RectangleBox[{38., 0}, {40., 5},
           
           RoundingRadius->
            0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
        {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.511], Thickness[
         Small]}], {}, 
         {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.511], Thickness[Small]}], 
          RectangleBox[{-20., 0}, {-18., 27},
           RoundingRadius->0], RectangleBox[{-16., 0}, {-14., 27},
           RoundingRadius->0], RectangleBox[{-12., 0}, {-10., 135},
           RoundingRadius->0], RectangleBox[{-10., 0}, {-8., 378},
           RoundingRadius->0], RectangleBox[{-8., 0}, {-6., 486},
           RoundingRadius->0], RectangleBox[{-6., 0}, {-4., 837},
           RoundingRadius->0], RectangleBox[{-4., 0}, {-2., 1107},
           RoundingRadius->0], RectangleBox[{-2., 0}, {0., 1485},
           RoundingRadius->0], RectangleBox[{0., 0}, {2., 1485},
           RoundingRadius->0], RectangleBox[{2., 0}, {4., 1080},
           RoundingRadius->0], RectangleBox[{4., 0}, {6., 702},
           RoundingRadius->0], RectangleBox[{6., 0}, {8., 378},
           RoundingRadius->0], RectangleBox[{8., 0}, {10., 216},
           RoundingRadius->0], RectangleBox[{10., 0}, {12., 189},
           RoundingRadius->0], RectangleBox[{12., 0}, {14., 27},
           
           RoundingRadius->
            0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
5IY82A2Ej7c39qJ/h7O8hXryYNafdQCMOdB46qvE2qU8mEpv0fjAyYHEthul
TdbyYLwqJjvwCzuynuWW6d/Kg2+bczbXT7AjNk5b9XdMZOi99r7vZzYbSvc5
uR0iQIbquvx3ySN70GW9J7oaemSoHLZXEXm4B/UkvX5gYkCGx/T7rj2J2IMS
7ryVdyCQofhIvOUg8x7kPr/H3cmUDJTvvt0KB3cjqfQ7PHROZIhhUensOseM
LD0S5zvOkIF07NVbbh4GJKzL1o17RAablCJr0sguFL5OthF4QgaPusThiMe7
UPxi76XZKtp4gcOLA8a70LOBqJm4OjLUfOoQI8fQI7fpAC/rZjJYVpZOa3ft
UOXEh/syPpIhiDN4h+y3Q03lYtpaHiRDyqmDfOt0O1S2yfpy2yEyTZ9P4YXW
NrUm5NH1je9kUK96QcbubFHP5DfC3BQZ+J/2/GcSvk7VCrttFLxOs3NnuZSx
r1ONrZ+9cdwkw9Fw2zDWkjUq6ZFeueE/MqSqD+Z3Da1SOaPN85foKLDxdHTJ
6r8VauETrnH63RTg57m/5+n3v9T6XXSOT/dQQCPCT4Ln/F8q0eCSpAsbBUI0
fpl9qFimVrktVuXupcC3Z8t3nQSXqMesjW5X8NLm46mra3i6SO2vuHdDkp8C
ApHnukUsFqlFErkj6QIUsNLcXvsav0Ad2ltvYi5MgaTAfYWvP/6hjlt7uYVK
UOClQk5nMtsfalldwuV7+ymwMi24agJz1NnFPSu9khQICJKy7C6bpaa9e53G
K0MB82CtrQ8x01Rm3Mc0Q3kKsE1xjOXWTFHTHek/qipQoMNnotN+bpJ6Zhw9
EFGkgMlx8q0P7hNUJqMb/V+UKMAydDIxlzJO5YzgOvREmQJvj5kE2/eNUd93
D7PFHKSAkfU67gPxJ5XO5uyRnUMUYOjpk8qN/kH9fPV7eY0KBZrNHrLaV49S
w0Tb0nxUKQBGLl8GZEeofYKU1nI1CmzH+ycpvPxG5Q2zlDJSp8CFaEG7skNf
afuR3hig8fnQ80ulXF+o1poCEiMaFFjzV2qRTxyksg/gg501KXDGc/h66fJH
qp77VfVuGi87X/WS9/tAXWgrjNTVokC4naF66af31AZmbrV8Gs9b/KGXN+2n
SnIl+a/RONS4sK+koZdqPFYoYKFNgcH4IuJRxx5qSJwQ4SaNP0Qy/rDEd1ID
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
x2zR/N+etON2ghH+734X/v9+938AWv/V4w==
           "]]}}, {}}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
1Vu3UQOXmcAIUcz8PoDR//2vDP//v/L/ABF6ogY=
           "]]}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-41.6, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Large,
      PlotLabel->FormBox[
       "\"Initial vX v. Final (Red) vX*27\"", TraditionalForm],
      PlotRange->{{-40., 40.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {307.2, -186.8934781979682}, 
     ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
     GraphicsBox[{{
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
          RectangleBox[{-40., 0}, {-38., 5},
           RoundingRadius->0], RectangleBox[{-38., 0}, {-36., 6},
           RoundingRadius->0], RectangleBox[{-36., 0}, {-34., 8},
           RoundingRadius->0], RectangleBox[{-34., 0}, {-32., 19},
           RoundingRadius->0], RectangleBox[{-32., 0}, {-30., 27},
           RoundingRadius->0], RectangleBox[{-30., 0}, {-28., 58},
           RoundingRadius->0], RectangleBox[{-28., 0}, {-26., 63},
           RoundingRadius->0], RectangleBox[{-26., 0}, {-24., 98},
           RoundingRadius->0], RectangleBox[{-24., 0}, {-22., 173},
           RoundingRadius->0], RectangleBox[{-22., 0}, {-20., 231},
           RoundingRadius->0], RectangleBox[{-20., 0}, {-18., 328},
           RoundingRadius->0], RectangleBox[{-18., 0}, {-16., 434},
           RoundingRadius->0], RectangleBox[{-16., 0}, {-14., 575},
           RoundingRadius->0], RectangleBox[{-14., 0}, {-12., 715},
           RoundingRadius->0], RectangleBox[{-12., 0}, {-10., 858},
           RoundingRadius->0], RectangleBox[{-10., 0}, {-8., 1023},
           RoundingRadius->0], RectangleBox[{-8., 0}, {-6., 1166},
           RoundingRadius->0], RectangleBox[{-6., 0}, {-4., 1313},
           RoundingRadius->0], RectangleBox[{-4., 0}, {-2., 1373},
           RoundingRadius->0], RectangleBox[{-2., 0}, {0., 1570},
           RoundingRadius->0], RectangleBox[{0., 0}, {2., 1373},
           RoundingRadius->0], RectangleBox[{2., 0}, {4., 1370},
           RoundingRadius->0], RectangleBox[{4., 0}, {6., 1301},
           RoundingRadius->0], RectangleBox[{6., 0}, {8., 1231},
           RoundingRadius->0], RectangleBox[{8., 0}, {10., 1015},
           RoundingRadius->0], RectangleBox[{10., 0}, {12., 861},
           RoundingRadius->0], RectangleBox[{12., 0}, {14., 702},
           RoundingRadius->0], RectangleBox[{14., 0}, {16., 587},
           RoundingRadius->0], RectangleBox[{16., 0}, {18., 438},
           RoundingRadius->0], RectangleBox[{18., 0}, {20., 324},
           RoundingRadius->0], RectangleBox[{20., 0}, {22., 242},
           RoundingRadius->0], RectangleBox[{22., 0}, {24., 167},
           RoundingRadius->0], RectangleBox[{24., 0}, {26., 133},
           RoundingRadius->0], RectangleBox[{26., 0}, {28., 77},
           RoundingRadius->0], RectangleBox[{28., 0}, {30., 62},
           RoundingRadius->0], RectangleBox[{30., 0}, {32., 40},
           RoundingRadius->0], RectangleBox[{32., 0}, {34., 22},
           RoundingRadius->0], RectangleBox[{34., 0}, {36., 7},
           RoundingRadius->0], RectangleBox[{36., 0}, {38., 3},
           RoundingRadius->0], RectangleBox[{38., 0}, {40., 2},
           
           RoundingRadius->
            0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {
        {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.40599999999999997`], 
         Thickness[Small]}], {}, 
         {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.40599999999999997`], 
          Thickness[Small]}], RectangleBox[{-16., 0}, {-14., 105},
           RoundingRadius->0], RectangleBox[{-14., 0}, {-12., 35},
           RoundingRadius->0], RectangleBox[{-12., 0}, {-10., 350},
           RoundingRadius->0], RectangleBox[{-10., 0}, {-8., 455},
           RoundingRadius->0], RectangleBox[{-8., 0}, {-6., 770},
           RoundingRadius->0], RectangleBox[{-6., 0}, {-4., 1330},
           RoundingRadius->0], RectangleBox[{-4., 0}, {-2., 1225},
           RoundingRadius->0], RectangleBox[{-2., 0}, {0., 1470},
           RoundingRadius->0], RectangleBox[{0., 0}, {2., 1260},
           RoundingRadius->0], RectangleBox[{2., 0}, {4., 1120},
           RoundingRadius->0], RectangleBox[{4., 0}, {6., 1400},
           RoundingRadius->0], RectangleBox[{6., 0}, {8., 700},
           RoundingRadius->0], RectangleBox[{8., 0}, {10., 350},
           RoundingRadius->0], RectangleBox[{10., 0}, {12., 420},
           RoundingRadius->0], RectangleBox[{12., 0}, {14., 35},
           RoundingRadius->0], RectangleBox[{14., 0}, {16., 35},
           RoundingRadius->0], RectangleBox[{20., 0}, {22., 35},
           
           RoundingRadius->
            0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
5IY82A2Ej7c39qJ/h7O8hXryYNafdQCMOdB46qvE2qU8mEpv0fjAyYHEthul
TdbyYLwqJjvwCzuynuWW6d/Kg2+bczbXT7AjNk5b9XdMZOi99r7vZzYbSvc5
uR0iQIbquvx3ySN70GW9J7oaemSoHLZXEXm4B/UkvX5gYkCGx/T7rj2J2IMS
7ryVdyCQofhIvOUg8x7kPr/H3cmUDJTvvt0KB3cjqfQ7PHROZIhhUensOseM
LD0S5zvOkIF07NVbbh4GJKzL1o17RAablCJr0sguFL5OthF4QgaPusThiMe7
UPxi76XZKtp4gcOLA8a70LOBqJm4OjLUfOoQI8fQI7fpAC/rZjJYVpZOa3ft
UOXEh/syPpIhiDN4h+y3Q03lYtpaHiRDyqmDfOt0O1S2yfpy2yEyTZ9P4YXW
NrUm5NH1je9kUK96QcbubFHP5DfC3BQZ+J/2/GcSvk7VCrttFLxOs3NnuZSx
r1ONrZ+9cdwkw9Fw2zDWkjUq6ZFeueE/MqSqD+Z3Da1SOaPN85foKLDxdHTJ
6r8VauETrnH63RTg57m/5+n3v9T6XXSOT/dQQCPCT4Ln/F8q0eCSpAsbBUI0
fpl9qFimVrktVuXupcC3Z8t3nQSXqMesjW5X8NLm46mra3i6SO2vuHdDkp8C
ApHnukUsFqlFErkj6QIUsNLcXvsav0Ad2ltvYi5MgaTAfYWvP/6hjlt7uYVK
UOClQk5nMtsfalldwuV7+ymwMi24agJz1NnFPSu9khQICJKy7C6bpaa9e53G
K0MB82CtrQ8x01Rm3Mc0Q3kKsE1xjOXWTFHTHek/qipQoMNnotN+bpJ6Zhw9
EFGkgMlx8q0P7hNUJqMb/V+UKMAydDIxlzJO5YzgOvREmQJvj5kE2/eNUd93
D7PFHKSAkfU67gPxJ5XO5uyRnUMUYOjpk8qN/kH9fPV7eY0KBZrNHrLaV49S
w0Tb0nxUKQBGLl8GZEeofYKU1nI1CmzH+ycpvPxG5Q2zlDJSp8CFaEG7skNf
afuR3hig8fnQ80ulXF+o1poCEiMaFFjzV2qRTxyksg/gg501KXDGc/h66fJH
qp77VfVuGi87X/WS9/tAXWgrjNTVokC4naF66af31AZmbrV8Gs9b/KGXN+2n
SnIl+a/RONS4sK+koZdqPFYoYKFNgcH4IuJRxx5qSJwQ4SaNP0Qy/rDEd1ID
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
x2zR/N+etON2ghH+734X/v9+938AWv/V4w==
           "]]}}, {}}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
rAtd5nqVh7H6zUO+8XBfrjexdWCtan0+Prk1NB7+Fo6uGGqtVglRpR2XebEb
jyV9f+HwnyqPaJ2A8LR4kHezP87i/adqb5qpeXdWPFyXnz3dnfu76mVqhfzR
d/Ew9O53ijnHSpUu47fOsIbdeCylpeWFy1VvY6Y1JVvi4fAtr7Yj+stVWZpN
GcVf4sFQYXv9e+BS1Y2CTdU7vfEQ7Hgoua7nV9W7yJCFuel4+Cga0xJy4FeV
k5DF55a5eFj9ybGmAwtV58sfkKMW48HhGp9BW/Zc1WtxjarutXjQc1Lc7Pb9
WeW/YVGvSJMAB6YZJmKLp6tOEI99gH0J0Gw71WK68KNKmYb+h/yBBNC5GP+8
+9JUFbu5dmUnYwLQDty8G5swWbWKi87fYUmAhnM6TqYdE1X22Y9pmdkT4ITR
hlo3abyKoqL97hJXAuz53MEX6zNWZUsTS9LkToCa06/pTItGq0TOea07H08A
OGHR/1VwpOrlNyfpCP4E2A68Giz6caiqlYol3UcwAfx8OEyypb5X+f5Hv2Yg
nADeN7xXspj6q5R3SHw5YgmwflW8VuRub9XqmMWiskQC3LYejMr63VP1uPDO
/deSCfD7wmMbEfvuKpm/BlPU0gngakKQy/rWVTXI9Z5GWyYBFvV/UYqc6qzq
uLg85iybADe0kzsyy9ur4um9vIPkEqA3MJV05vznqmRP1k8+8gnQfYt6zEC9
peo2W3eLpUICdFy1DzQ41lTlFcQaIKiYAG0XmngMKOurVJ66j3fv8id9Maw/
UV1F8ppY+U8pAR4FclQ9C/9YlRUVlze/y8FXB7eempRWLefSsZkqJ4CvfrLG
U66CqpL1ffzpuzxt37QqU/2qqogyrbd/l/PtkqcvPouqutcor7ixyxX7wSVC
yQv1llxS2dnl8GvAm6n4EkEO69jcLps5crB0H3yLnmw8kKvZ5XcGTaediEWo
8gKI+e9yuQM1/XWfcuSwRdnMv8vWxGT7kgsYdXqMMefv5mdnQGgs8ahFvnWE
vQK77GgxKFwa04AM1T++8t/Vd93B+35pwSd09oH+Ss2uH87uHD9LP7eiyQyR
pfldv24FlZwqm/2CXra2p1DscoW2mKllcAfKt2fa92/Xb4KB171B5i70be+O
0PfdemCTpmLLlK9oymSNMnO3XnXW9uxWld9QfMrs36Xd+p50KD75Xa8PLVce
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
c3Y=
           "]]}}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-41.6, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Large,
      PlotLabel->FormBox[
       "\"Initial vY v. Final (Red) vY*35\"", TraditionalForm],
      PlotRange->{{-40., 40.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {921.5999999999999, -186.8934781979682},
      ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}]}, {}},
  ContentSelectable->True,
  ImageSize->{1240.8, 385.7869563959364},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.67240429186545*^9, 3.674909202835103*^9, 
  3.6756944166517553`*^9, 3.677851815788628*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Norm", "/@", "peakVelData"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886757333802977`*^9, 3.6886757614818716`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5249999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5249999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 11}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{21.350480384307446`, 
          36.199350784975806`}, {-27.93127930073051, 93.31946166076501}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 10}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.699350784975806`, 
          50.54822118564416}, {-16.95393921332183, 93.31946166076501}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 6}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{50.04822118564416, 64.89709158631253}, {
          26.955421136312907`, 93.31946166076501}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 11}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{64.39709158631253, 
          79.24596198698087}, {-27.93127930073051, 93.31946166076501}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 11}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{78.74596198698087, 
          93.59483238764923}, {-27.93127930073051, 93.31946166076501}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 12}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{93.09483238764923, 
          107.9437027883176}, {-38.9086193881392, 93.31946166076501}}],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 10}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{107.4437027883176, 
          122.29257318898595`}, {-16.95393921332183, 93.31946166076501}}],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 11}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{121.79257318898595`, 
          136.64144358965433`}, {-27.93127930073051, 93.31946166076501}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5., 11}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{136.14144358965433`, 
          150.99031399032268`}, {-27.93127930073051, 93.31946166076501}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {5.5, 18}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{150.49031399032268`, 
          165.33918439099105`}, {-104.77265991259132`, 93.31946166076501}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6., 18}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{164.83918439099105`, 
          179.6880547916594}, {-104.77265991259132`, 93.31946166076501}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {6.5, 9}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{179.1880547916594, 
          194.03692519232777`}, {-5.976599125913154, 93.31946166076501}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{193.53692519232777`, 208.38579559299612`}, {
          59.88744139853896, 93.31946166076501}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {7.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{207.88579559299612`, 222.7346659936645}, {
          81.84212157335634, 93.31946166076501}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{222.2346659936645, 237.08353639433284`}, {
          59.88744139853896, 93.31946166076501}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {8.5, 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{236.58353639433284`, 251.43240679500119`}, {
          59.88744139853896, 93.31946166076501}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{279.6301475963379, 294.4790179970062}, {
          70.86478148594765, 93.31946166076501}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {10.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{293.9790179970062, 308.8278883976746}, {
          81.84212157335634, 93.31946166076501}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11., 0}, {11.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{322.676758798343, 337.52562919901135`}, {
          81.84212157335634, 93.31946166076501}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{337.02562919901135`, 351.87449959967967`}, {
          81.84212157335634, 93.31946166076501}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.27, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.5, 12.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.688675739464598*^9, 3.6886757617941036`*^9}, 
   3.6886758107416973`*^9, 3.68867618886684*^9, 3.6903058996197386`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vfit", "=", 
  RowBox[{"findMaxwellianFit", "[", 
   RowBox[{"peakVelData", ",", ".5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672405403924748*^9, 3.672405478671063*^9}, {
   3.688675612697506*^9, 3.688675613273915*^9}, {3.6886761935951977`*^9, 
   3.6886761937933393`*^9}, 3.688676361659066*^9, {3.6886764248113265`*^9, 
   3.688676426283371*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "38.57056298845296`"}], ",", 
     RowBox[{"T", "\[Rule]", "0.021077317533643954`"}]}], "}"}], ",", 
   GraphicsBox[{{{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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

         "]]}}, {}, {}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQDQEP7BlQwAcoX80BQv+A8lWgfAYoLQGlWRxQ1XOg
8XmgtAaUFnBANU8ITb0IGl8MShuh2QvjS0FpJSgtg+YOOSgN85cCmrwiGh9m
Dgwoo/HRw0EVzXyYu2FAHS4PAEjJFac=
         "]]}, {}}, {}, {}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 1.2644211449884492`*^-13},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.672405430713191*^9, 3.672405480706201*^9, 3.6749092649837847`*^9, 
   3.674909448866209*^9, 3.6756070850519323`*^9, 3.6756944275741167`*^9, {
   3.675694523915299*^9, 3.675694589937338*^9}, 3.677851792086954*^9, 
   3.67785183191824*^9, 3.677851979123706*^9, 3.688675614826025*^9, 
   3.688675704386695*^9, 3.688675812284793*^9, 3.688675852502344*^9, 
   3.6886759389728136`*^9, 3.6886761942876883`*^9, 3.688676365581849*^9, 
   3.688676426929803*^9, 3.688676745464778*^9, 3.6903059020377235`*^9}]
}, Open  ]],

Cell["\<\

Some position and phase space analysis
\
\>", "Text",
 CellChangeTimes->{{3.672404569318603*^9, 3.672404618595499*^9}, {
  3.672405300207252*^9, 3.67240530123657*^9}, {3.672405789955626*^9, 
  3.6724058034610643`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakPosData", "=", 
   RowBox[{
    RowBox[{"getPositions", "[", "lowFieldMPIData", "]"}], 
    "\[LeftDoubleBracket]", "226", "\[RightDoubleBracket]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6720661036711473`*^9, 3.67206610754603*^9}, {
  3.672066196560624*^9, 3.672066237305513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"initial", " ", "position", " ", "plot"}], "*)"}], 
  RowBox[{"ListPlot", "[", 
   RowBox[{"peakPosData", ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", ".05"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", ".05"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", ".012", "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672066255890057*^9, 3.6720663042003517`*^9}, {
  3.6720687956646137`*^9, 3.672068798340239*^9}, {3.675608333902574*^9, 
  3.675608375075281*^9}, {3.681053854644812*^9, 3.68105386453944*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

      "]]}, {}}, {}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.05}, {0, 0.05}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.672066261626136*^9, 3.672066304873537*^9}, 
   3.672068798730901*^9, 3.672399607735121*^9, {3.675608335929515*^9, 
   3.675608375617811*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["findPeakXpos",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" -- a quick function I wrote to find the particle which has the \
largest x position. I made this to analyze the anomaly on the position graph",
  
  FontSlant->"Italic"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.672068164240006*^9, 3.672068237360523*^9}, 
   3.672068315844865*^9, {3.672070856230945*^9, 3.67207085686977*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findPeakXpos", "[", "posdata_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", "maxTrapped", ",", 
      RowBox[{"peakData", "=", 
       RowBox[{"{", "}"}]}], ",", "countList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"maxTrapped", "=", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "posdata", "]"}], "\[LeftDoubleBracket]", 
        "1", "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"posdata", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
           "maxTrapped"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"peakData", "=", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
              "posdata", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "peakData", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.672068023588318*^9, 3.67206810802414*^9}, 
   3.672068237361516*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakXPhaseSpaceData", "=", 
   RowBox[{"plotPhaseSpaceXData", "[", "lowFieldMPIData", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6720689838676567`*^9, 3.672069010027059*^9}, {
  3.6720691408748503`*^9, 3.6720691622149687`*^9}, {3.672069297624651*^9, 
  3.672069323999281*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"peakYPhaseSpaceData", "=", 
   RowBox[{"plotPhaseSpaceYData", "[", "lowFieldMPIData", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6722293043092003`*^9, 3.67222932452871*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"phase", " ", "space", " ", "graphs"}], "*)"}], 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "peakXPhaseSpaceData", "\[LeftDoubleBracket]", "226", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
     "peakYPhaseSpaceData", "\[LeftDoubleBracket]", "226", 
      "\[RightDoubleBracket]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.672070870509026*^9, 3.672070892285309*^9}, {
  3.675607369799922*^9, 3.675607382600748*^9}, {3.681054882957902*^9, 
  3.6810548887989807`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
QNeyHxow3ubAnccmVqS4VbxyxXPvqnc6+HbGZD10l0Zfle9u0uQjg8kPfc2M
5E3Y02D/HvlD6cCTnu2rqLwBldTVHnhCy4B3T30c6+1kMKapw4caTzpoxm5z
Dkr4Agr2vrwv2fJhOnv+xFu/YTjsqNVg1p8D3lHPmE7HudGs74ctc01UEErT
J65Nz+CDlFElXi0GHIoUSSoPVsUyGA0W9EwGWLU7BP95shFTfnZc6bVFHnzB
DVNvtklgWhUX/E0DaaDUr9R401Aa6c0Wl8d/uwOEqkVJU94R4DYJfSs6fhc4
/CglFYEz+Oi2ee0wLQqMVqlHnPbaiBS2LxcXCGVCQmXLUJC+BnroqZgd15sD
fE2+pcQ9CtiH0erap6z5Oe+Pi2QqCGGG8cN9dOcM6NvztQutMPEab6W/obep
ENxsuJgmuBO5zG1qExahQExlMfHS2G8o5FJ7pDNKhcZN8mojRjIoMbX4m2wo
Eao2epvOQjfYlc5XT9nlwk5mTUq29Hvc4IJ7ZT1bLhhNehx9YqaErWdGWery
0mEtzeepDek3yGpY/g1gvwVfU8vWNw5you3NwrFFlVlwfY19UXaPHCYmzulQ
w06BWLlNuL+PNIrPE0nQeZEB729PpDxc4ED17SPNvepJUP9wznjl0CIesCvX
fUdaKthrf+B79mADWvqs2LEQlgAWDrSD9wjy2Py8mE0QXxoI+l+dV1iUx5KM
qqwIsXnwaev6+ixrfvwP2nZeEM2Ck8zCVQthKRSZZqpin5IBJ7siT9+Pn8fF
VYsOb1XKhtzkT5z9vpoY79ZlA1diEgjX1ffFTnJjtG2nrYUXUuDeT8qE5FkR
jFtX5jmRh8VHzXGyz3x+gUq2nLuhLYtPXGOk44gTcNt7V4nxMgVkc5mtt4qk
UHrLYjIWTQbeV2a0lDw5LGysU8mDtX+D38AtWH8aP1frMckYIUGsW1y8UT07
et4WPWhbSAfpy787Xgfdh4jbHvbyfhQot3qssSNQA2MsuMlvOEoD2dfkv5Ec
mpjU92qq2TqLN45FBTVVayLdx12lArvvALrBxrGzmwM50wyO+t2jgMK5piLG
FxXs4m4/pR+s/uZwebux2mMB7qVZcwdO5MA0+Kppio7jPC+5pK2PUWEO9GrT
4hZgtxmPl251CixWzhS4XBTD7EQTrOs98uDyqxMmXPns2MEiz/ht3Swew01r
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

          "]]}, {}}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Vx(m/s)\"", TraditionalForm], None}, {
         FormBox["\"x(mm)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      LabelStyle->{
        GrayLevel[0], 12},
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.05}, {-20, 20}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360, 360.}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwVl3c8Fd7/x+2R7HHtrpBZSoRv9D6RpNKUEIpS0iAhK4oK2dx73WV9REZJ
KTLqHlkZJVSSPSuZGSHj5/fXeZz/zuP9eL/O8/lScvE44crBxsZmws7G9v9n
+aEWBa9bTOhz4COnHJNGv84a+3kaJAPFfSbLvZ6IyvzE+rvlk8Dtz7KV/1d+
HJJhtnqDwoAl9RYjX24lZK4ZIl7RR4YXi5Tm9k55tCOcSlSJSIItsx6b2Hb1
sfzfZUGvLwOq0969EWjehA/otRmfn8wE66Yz4Ss8nayqMba0a7Nk+Jcro2S3
lx15Xs3+7vqNDiZbGzv6Cr6Dz6wmKWQPHQpzCrc/LlVFDu+z3pLG40EioLUt
X1AcuxyuNryfwoRQjYUvX9iVkUTrQktWbixomT38+78GIq4XKnD/VUqHRZ96
dsMv7PhvxPIttzUyDIkmWLcWiyD3ni0X41yZ4DH5m00tiR+n3/4RYhqXDKit
025X7jIMv4Aje9xSYWqOeUTCURq9zWmz/XaCCvV9fdH2RVLYg7PSROogDQwf
lrHUrsvjm38k2W/YU4HjrmTMKW4ZXKE8dz/lbwJoz8u8shAg4GVNCZmF4FTo
PHa/ntNzhvV8M9ngjxcJvi5dvvcsWwinVaj7SHakwwXz8iEHBUmk9em5T7pz
Jniw9+7ZbaKIwjItZdVG6HD8gg3HrQNsKOOBepWIRCrECBgd2PxMFF/8aSNY
mk6FIS7twR8vFXG9f9CZAhoVSqeG44n/VHBTyQbX9IEUKDCxai4IEsU6x3m1
Fz7QYab9hWI4xzgc6GHT6NVMgq82Gvy/psdZgmvcA6NFDCA2+S23dYmhwDyX
pp3BGZA5XGxSJyCCrleMPbGMTAXeMq9dEfIbUNEPNY8AGh1QUMhg3LIkmhU5
JQEjyWD+eECH98YsHAgcm66kJYFL/uByubMCanrdUGdWzoC4wx5Vt5y0sfs2
Xx3+8yTY6FIeouL+DUYHxQO6+agQ+3Qw42QmB1JedFjN/E2DhWcZ427Whaym
vV2WtwMZ8G9g4d9/9rK4J9DgReVjBnxUTjJJN1JD2/dHNFsH04As84YK7JIo
/IqpXvcNKsTdZVP/Wk3EuWf+1J9focOIqWKv3ls+3O5vE7DolATaJb3JKWkC
2GxE0/njxwSo6+cuo6hy4kRThprz0VS4GOIcFRctgf/cFFG9R02Ei92+cm/q
xXAFN6uVH5EhWOtB3ZKyODr29jInWy0VEqyHzG+HieG5gfsjQmh934hvvfa3
SyBeJianCdMg99tvjVd79VBO0fOwk3vToK7t5AVG4BdW04O9xz7UUeE2Tem/
EHYRLHXsClHnLhPcmxpzD1gS0el08VxTPybIOT221DSRxSGP8q4eKUqGTU57
q/Y0EVCh/27PWNdQGPiP7JUkuAw5SryHLcZS4LR3o8c5HxlcG1tfcyyZDH3m
fytalObgyqKR7RveZIitVn+58Skfnrx702KBRoI150DbSGUplKWgUPDKhg53
db67P5KnsRre2cgylBJALG+YFS28wPLO7Y98HJ0Mu4p+CZ4BQTRAIu43VUyB
Csb3V8WtnLjy0dr/gu1okCB7St85Y4kVtfHKPnHdDAixzdq5/7UomjxZKyJV
Hwdcuc7djh9FUNOZsPv950jwPl9u03LiDEubkHymkSsZDKtPTBOa2bGeu5vz
xk2pMFPMT2+X4cBn9rzaJ3uADg3MgvxrOcpYhGstx/4uBex0K7q5Jz6xzC89
kHpURAOFW3ZKfo29rLl//JOCSZnw4MhX/aH2Ndjr8Ebg17lUiOR5Vmh1XAlv
NXaR3N6TCtztD8c/HSVgGVHjyOXtNDDw2zNWKLsF+fAW/VsuoED3hhtPT/1h
wy2zL+frV+Ng15XepeniRfBQtJQl/6JA4mrjotuJFbDV0ypqsUuCUou6+FE+
aewt2/W6I5cGquzEsy9cdZDc9AmmtxEdghpKyP51BHTWfWPJLud0iJLOJn+6
08/6nqXRFh5LBs/Pfql/T4ph/bs9b7UmKVDaXY4q8pXxxMpIbcP6f6r7b2+3
yml2bNDBQ0rvY0Di0H5hw8FlVp5vr2ELDxM4a89Xv6+QxKdE+8df2saB8ZWX
v7y2CqGzaqsjvBfjwCgiaF/LoAiazkoN/e9PGojbKgblcQuipJeZLopfSGBd
73jm0VAnSF2YPLfsQIK51X3np5pEsIu9qIffCBUC7DmKLuVNsby213Xyr7+/
veHEWlGlKO5s1KriL2PCN6qIzSMaET/lPTxqbJwMBjKMGcIuXqwdtevn3U46
mN+Tfi0WookcHJ7HtHxIBpVk5x5ZmUXYpLDDZvVIMsy/2z/511ASuVZGLkes
JEM70+19d748OimOa98ZxUDu2XPNN3MUUEdca8xGWTKwFISKFh7yItv89sCU
rwmwd7HD66r5CkuI8icgyIgGA1sI3h5jQignQ1Xd+nciUK6fdlPnkMEhq+WB
K3uYYFbI/aXQiRPLhduM94rQ4ZgKjU3uvAxmDKjfiialw9DveTFyGQHnHrh/
akmVAVEq0Vuyj3Ch6HyDpGxfKrgK5B/6+0EUab7QdLHpoMDLDWk8Yh68qObV
+NV+lAyluXwJtmmzIFSmd+ghSoOvUwdMDo7xIMNb8SuBHOnQGsPs56dLILn4
6Y8+H1Jh8x3dAcHXQ6BxJ+9e8TgVLPtO28ufTWRpD2WXb2Wjg+rDXpuJNEHc
xUfU8Z6mg4MFqWhs9xZE6++NGS2Ohfc/4qPqb7JjNnYqdWYkHmQ76YbSZfJ4
4+m3j4LD0kBku4/5B3ZR9CvCf/e4aRqYWIBXsfwci58WMf7YlAQamjlhGn3f
WIoX93/Mf3cLSi5f8q21+wTeMss/1oYZ0M8YY/uw9hxSDOO/cYVQYNWPk+pc
wIaTdsya9vHQgVewR9wwQx23fizIDdxCgc7WJJ9yC250rYvNcGQxFdovT9HL
O2XQaGuO1s/DyZC7rYJDtWYOmhR3aN91oQGpjyer9tpW3DDbXt5WnA5w4CbP
gc88+CbNbopwKQZcHZ/t949YYIX6aTYLjZAgtzbbPbCMD9EZX8MkLJJBvOHd
XytLNbxRXefILVMq9LH+bfMoVMaquqLNViVk8GXXjZIUlsIiO8Mr6jalQbPx
Y0nCPjXsIimVi3dSwS51j9yecFn092Xvs4ZXJOiT0tFcvSSE3kYz1IcfUoCt
RrdpUZSIz7bfv36HLxOuWvvWNp8WwkpFhcdyPzPAaUOUdVCcDE5taDZK96NB
qHRNwHgzAW9s5JjcKJMKlN2LMdOqU8D35XvVxi8MGOFYuh+9SMAnTrXrsD+n
gNq8FdU/cZGVkbWXKVGZBgnpC57yB2Vwph7XlaAIGnDkEjKkslfgh/g3+0Er
GuxcVrFy6ltl6Sh8zg8UYQJD6rPyltX1fBuqCHS+y4StweZRBxf6QVdil3nD
XCacCh7IKtoticynftMH+e6Dje8dl4StXOgZUat3MZEElT2mNZffCeBzzYPZ
P/rS4dPuzGMNA5x4iU18V2AXDYZbJafSn0hiAbPV3Lgd6cA9x0GcLhdFMX6R
rnLzTHBaiW8XIxAxzwQa1S9mwikSP8/ysgJeCbBTsndnwHG5RyIfEkVQkNmS
jusdCrR9HQr98FkEL3hrnLkozgCXn6pBv6zlsDLjV8H7xynw/oK+MtNWCr/4
83YpkBANNyebrBKZ4vh5jbNlU916XrWai6ztVVGAhq1b+CUysDUaab3Om4KY
efNr9lJMuNCyUrJVZZjl6nUnP5g7AzRDGzp8jOdY7/hfB/kG0+GWZdT1c0el
cLHtZZpIMR0srejRXo4iKMKBOu09SgXqK5dRGetN2OTcftMjzomwozk1cGuE
LDqijwdWuBLgtE0pwUaCC81Mr7FVHEoH6eSXRj40OVwraCn+0S8DNoj4jFZI
8aIjBdbbi9ZSgD0yP6FfkBe/dumL8q2iw5xVXZEyHz8qO3Pv9q5rKZCIRv9l
CG/BrUy9BzLr+9jhGmc24ymA4kit9Hb9FNDK1gjT3imLXI2MjswKkKFyslis
3lEZPaa6B1RtSoSCnNasDgkR5NC0csz1CQnSOIy9ejb/AzEbvZLgWjIodjuw
XS+SwK31h6Nuf1/3yXR2f/becciMXTJ/NEuB8isfL07e5kRXD54ISF1gwo5u
/4kWTgLWe3A/LOAfE7QJEqkl4RJYX/pSVsZFOlzdNv5Bp00SvZN3Pu4sQAfm
0aZw27/yeG6PeavAMwrEoJEySX15xNFmsmBhwgBHGcdc/dIN2FPRdmPbZipM
CMbUnN+vhhd39Gv+INKhS87aIM+PgJB+woOM9T5yYWWosmZiFe5WfTHWKVz3
rUU53ywtYSSx6bH1qa4MuH2qykrTVA2n25Kfl2+igmimyNmmaQWE98RsTnhP
hSmPNNf4EQK6s3turaKDBpU+WeWxbEr47bB/mGPNet7ij72YmBdDKnF6pkf3
JcFKjrkzaZsUZulERRp6JcCwKUeZtWAnGFQGF137lwBVBtXD3xuXWUTzEK/2
DwyYHapXbfImIo9tsT7Vwkw4vzuoq5lNFEUu5lm81l33F/2jl28TeNGWe/in
vCAdro9u5hogjYNCWzUhW26dX/y/e+UdFXDo8UY3zUNk+JpKOLp2sp+VcNcd
37ydDv7ELOtZXQ5cUEW2ywuOhrOeW5zKgiXRaaHTrEU6BSJet/+4lM+JfgtN
cLlHUkHufaDEdHU3UCYL7tP2poDDBOVhyZMl1oyj7QbFAApoeq4V/29AHNms
GL8+OUOGZ5/r/CV+yOLdV+o28NygwPRW6QG7D6qoMzrtk18sHVYeXXlmPDjI
2nzYkVNQYT0fX+q/KqatzzObzTZmvX9VKGy4/q5YCu9JP0+0lk2DrpvNMjJH
uXG09EouVZ4CXVRWw4ShEq5ZyrZrYtCAK79HyolfDfV8ik2jVpFBkJdPimDQ
xgqiB2zgvpEKOyuLF0spwjhdD3lK5tGh5XwGOUaHHZPi4hUk1vlKUb9Vpn9X
BflXBtlzE+iQlevEU8riQDzCIjOhkAGf35fV9Z4iImaOGOG8fiJE3HNNObuN
iER2tpwvbEqHsPQ+c/aVP6zNN/iUptf76L4S+axYCUn0+a/DGHoTD/36cSQz
K3nUzs8R/usaE7x16v2VaqZYP4vuk67XMUCcVeFW6KCKH762MBCqTgQzgxfk
mGABbOLY5MhfTIVW8UH7tgEBlOC5dyfXRDqELnTWqJjKYk0v0sTDBirUub+c
Oli2yApyS2jbXUMDca29On/WiPh6iLM2/wQDdjbJyh0xkcL/s358iHuAAXSO
46MfHxKRak/WhQWzFNiwSUX4r+Qg67/upyX7QmLhrYq99Jg0AVtofx3+KpcB
M5wcdQbiojjb3PZJpw8ZClBfvNJPSVRYVxkeXJQGzvOxzRF/ONEtE87TlZNU
GCl9saruOQ+PY+8LP/egQUbhqsbR7yqoxqORT0s3EjpSmhZLekWQ9gWVh/zs
TDAtXYr0ObwACjlf3N75JsFP/furJ7rE8B/TFTC7xAAdPMY1tUsct7ctHe86
+Aju3fF2PCc6y2rOkumfj6fA3vKqwscG/FjPbM9vYn06aFytXU0SJyD7HUIp
fdkZUPxqKLUnXhRfnte8OmRGg5meHPvPetMg6bC1JjQiBXq+jMVKf5dA24xn
PZeHUiDDXCMtZ3AKAt9v+XGLSFr39/O5laFyKEo81pivJBGSaouPhT9VQBEL
JoJjp9Jg2WMtxPrgZqQb1uWSFEEHrY7dHZbxHSA1XO30KDkFHm6RF1bKGmW9
sNh9N/0ODf5J/ljQ/C2DKA7hlRZ9JDAzKvsWtJ8LUa6UpvB9okKVnJeE5XwH
q1FubcPKaTrky/OIhQQK4cqLZc5jBiRg0gqf3DnOh8rPix1qJjJgQnlj+4vk
QVbgi+bQmJN08N526fPrFlWk3UosqrhMhtiFT4TmXDF8habGl1qWCqXLJdfY
13lnE+i05eS6LxgZ1ct8JKkgmgPPxlZGMlQYG1/VClbGLuEyfrdPJsOlyzrZ
Lanr/EoIvfn0+HrfpNz6G2mmiCuvBuJZ2Sjohzqu78dyWNVcYpee3I2HvHJN
u33+Aij0horLSbN46EZfoq1ihLFkq3Pp+246/HTz5Xzs/Rtkjn4rbZFNgjyO
xCs1V3RwcmD1pS8yTLic+9DpTKka2hzlLK+qlwwvaP3em0u4cEDXTJHkQgp4
bJhgl+LjRPnjmXcsXeLhcONpKRU/AYxv45LCqwzY8bJLykyPDSXe6QlX/73O
B1EBt5W5v6xJHqXYoH4K8Kr+L+nPswq4quvwxigpCr5bvmskLsgieb35y0rr
Puw69dygwEcN7wi+Sob1fmHpuDWshlsOlfa5H1F4ngLSv5m0sQURpG6vzOZU
mQphTCN3jcglVupTGc+UPia0zNUevBBHQOLZ9D2Zp2ng4uVSwCMviSWmmFYZ
63crYe8Lny+o4Gnd7MWGnwyItuRi1eX9g0NhW80PpmSA1fxH3txubjwdvt1H
IZkC/DeFj+/eMcE6+IoZI1FPgievXOSHC9Twr75YC7s7aSDMORpbrTrMsrpw
47CnTSqsFUglrBrKI1XJN7pGh0nwOTvxt2KBOL4uX5Wz1YQJ76XL7dVtl+D/
ADuugEM=
          "]]}, {}}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Vy(m/s)\"", TraditionalForm], None}, {
         FormBox["\"y(mm)\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      LabelStyle->{
        GrayLevel[0], 12},
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.05}, {-20, 20}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], {576., -189.}, 
     ImageScaled[{0.5, 0.5}], {360, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 390.},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.672070998052814*^9, 3.6723996747677317`*^9, 
  3.6756063577967787`*^9, 3.67560659538466*^9, 3.675607346244959*^9, 
  3.675607383255972*^9, 3.675607429225442*^9, 3.6756083134143867`*^9, 
  3.6756084603813543`*^9, 3.675687216458375*^9}]
}, Open  ]],

Cell["\<\
This part compares the trapped particles initial speed to their final speed. \
We see that they have actually cooled while being in the trap. This was data \
taken from a test with a voltage of 650 volts.\
\>", "Text",
 CellChangeTimes->{{3.6903048433702917`*^9, 3.6903048954427576`*^9}, {
  3.6903049355823*^9, 3.6903049603549414`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialData", "=", 
   RowBox[{"Import", "[", "\"\<old/initParamData.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalData", "=", 
   RowBox[{"Import", "[", "\"\<old/finalParamData.tsv\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6903045651888747`*^9, 3.690304680803734*^9}, {
  3.6903047154199114`*^9, 3.690304716324706*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initV", "=", 
   RowBox[{
    RowBox[{"getVelocities", "[", "initialData", "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalV", "=", 
   RowBox[{
    RowBox[{"getVelocities", "[", "finalData", "]"}], "\[LeftDoubleBracket]", 
    "1", "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.690304684360511*^9, 3.6903047612524176`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMaxwellianFit", "[", 
  RowBox[{"initV", ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.690304771407953*^9, 3.6903047917034225`*^9}, {
  3.6903049115730543`*^9, 3.6903049180782127`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "145.33377173219736`"}], ",", 
     RowBox[{"T", "\[Rule]", "0.04695956177061866`"}]}], "}"}], ",", 
   GraphicsBox[{{{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
sghgYjxNslHCpmPN55MiFuGV3oyTuJsSnr5nZHZXcxE+0qXtf19XQsfd95g/
py/AKl+SZcFzxtyl3US7cGkehsyYnsnXK6G6xNZHV13moS7SRTCrUQmZBmKK
Eo/Ow/Utqr333yjhkI2d51/yPGxj6Tkc/lEJuSM/xXO//w6Si5zGTj+VcHTK
uOP4y2+g03lNV0RJGVNq6jjyS2ZhG59C4BhJGf8NfKNuiJ6F/qO9lY9pyvi3
1kXa/9wseH2SU9mtqYyx3irzfXKz8GCqm3j0oDKGvSNwq2fMwNrqzu93Titj
mu7hpbCkr1Ap9zqJOUsZc9w1nW6kT0PoWe93rx8rY5tGS4ZEyDSYFohxRT9R
RjgoSf9wahqmaV6hEmXKaLzlzexj2WkQRJHzmo3KqHDiWlVb0WfwsXDXvTCm
jMUtk+Err6dAJYTn+xdxFXxwYLMdmWcS2hRLT3pIqaBLbH6+y8oEuPVZdP6S
VsE9Yav6z4Yn4KHc/SIWJRXcZG9HyHg6AYROGR+xPSr4I6FyLPPQBDCLaf42
tVTBOgXpw3pR4/Cu3JmlIlIFNT12HfTfNQaeduw+WrEqmHjitnkJzxhs48if
aExQwffF1Qosq6NgYLvQ1JWigsu1OmtTnaPwgiXg5kyeCl7Vq+N5fnkUsk2j
t0q8UkGnbb77YnpHYO/PwS06TCS0jA7vq6IMw7W2TrIiMwntZbObT7EPQ2Pm
S0sBVhLWxXv3aI0MgeHhx5mfN5PQTKM4IvjOEFgV+Oy5zUXC2eual3TmBsHr
9JYzveIklM9NqA4pGYDswd2tLntJeP9+1rkW+374WqowbwokLGwS0BHX6gfl
2+KCGtokJMo7FqYJ90OpBqsD534SOhnV5m9/9xEaEjt+FxqRkJdzJk7M4CMM
mDnL/bEm4XUutuZOjQ/A0xx787Y/CYMvBFVs1uyDF53BBkcDSFhqRPJ2legD
t0+eHOKMuXyuferrF+Y+aJg3uV0QREKryOJY49Ze8BLhjOq+yZizi4JO3jve
C90eoYmERBLWzp98uyvoHcSI+GY9LCGh1qfkYbXJbtCSOeXiXkbCybhr8z5t
3fCVZC6r+oyEDTkb/rSXdMM+PXJuSxUJFbWnQz4Gd8Oix9yTr/UkfJfrbr5f
qhvMm53KSJ0kPMG6Wfakcxfwe1o01swy1qtpVexn7gQlnx3RAd9I+Hdhh1rf
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
67WG/wENehhy
         "]]}}, {}, {}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxd0U0KglAUxfFLNGjQICIiIkKtzMpM7WtYa2gJQeO24FJbQsOGFf5v0Hkg
Pw7nPtH3wuv9cmuYWfp5vtbrcbK/9SQH59oXOSIbdrCJU2xhgm3MZJ/3XUyx
h1vs4xEHkocyP8IYx1hgIIZYYiTfO5F5/09//0z2xeIcE9HnF+jnskQ/xxX6
uafSr9HvLZP5jWdW/j9f5dIX0hfSl9JL/t0Dq5JsO+kl2156yXb45Td3dCkp

         "]]}, {}}, {}, {}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 2.8197820753062427`*^-13},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{415., Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6903047865554557`*^9, 3.6903047923742185`*^9}, {
  3.690304912821046*^9, 3.690304918671009*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMaxwellianFit", "[", 
  RowBox[{"finalV", ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6903047969761887`*^9, 3.69030480460454*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "153.6106990836897`"}], ",", 
     RowBox[{"T", "\[Rule]", "0.03336823241443041`"}]}], "}"}], ",", 
   GraphicsBox[{{{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         
         "]]}}, {}, {}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxd0D0KwkAQhuFBLCwsRESCiCTGaPwPiEoqcwaPELD2yh7B0tLIviPkWwgP
X2Zgdiepn/dHx8zi5vsZzusWfIujKvghL8mGEXaxwB7usI8XHOAJh3it2nNL
HEt/JP0TPONU5s0kx5hjIv/ncv8UF6L3Zejv9j35O1boe/O5vue11DdS33rd
2vfys5d8kHyUXPzzFwmwHMA=
         "]]}, {}}, {}, {}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 2.648872138066353*^-13},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{420., Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.690304805400135*^9}]
}, Open  ]]
},
WindowSize->{1280, 942},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 511, 8, 65, "Text"],
Cell[1072, 30, 216, 5, 46, "Input",
 InitializationCell->True],
Cell[1291, 37, 1394, 34, 145, "Input"],
Cell[CellGroupData[{
Cell[2710, 75, 2085, 33, 350, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[4798, 110, 2678, 53, 218, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[7479, 165, 4733, 103, 427, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[12215, 270, 4153, 91, 484, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[16371, 363, 4851, 101, 332, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[21225, 466, 4702, 99, 332, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[25930, 567, 2247, 51, 256, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[28180, 620, 1203, 36, 151, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[29386, 658, 1559, 43, 167, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[30948, 703, 913, 26, 161, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[31898, 734, 1082, 19, 160, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32983, 755, 2899, 71, 435, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[35885, 828, 2731, 68, 435, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[38619, 898, 1863, 45, 283, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[40485, 945, 3011, 69, 293, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Closed]],
Cell[43511, 1017, 118, 2, 24, "Input"],
Cell[CellGroupData[{
Cell[43654, 1023, 1471, 32, 84, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[45128, 1057, 2924, 70, 142, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Open  ]],
Cell[48067, 1130, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[48114, 1133, 273, 4, 53, "Text"],
Cell[48390, 1139, 2957, 71, 164, "Input"],
Cell[CellGroupData[{
Cell[51372, 1214, 443, 11, 30, "Input"],
Cell[51818, 1227, 14191, 275, 735, "Output"]
}, Open  ]],
Cell[66024, 1505, 678, 10, 316, "Input"],
Cell[66705, 1517, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[66774, 1522, 504, 11, 84, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[67281, 1535, 3071, 50, 57, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[70355, 1587, 1521, 31, 57, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[71879, 1620, 1699, 32, 57, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[73581, 1654, 1303, 29, 57, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[74887, 1685, 474, 12, 34, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[75376, 1700, 18172, 344, 501, "Output"],
Cell[CellGroupData[{
Cell[93573, 2048, 791, 17, 107, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[94367, 2067, 378, 9, 87, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[94748, 2078, 2740, 47, 50, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[97491, 2127, 2122, 43, 50, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[99616, 2172, 1176, 24, 30, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[100795, 2198, 1084, 23, 30, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[101882, 2223, 1078, 26, 30, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[102963, 2251, 1177, 20, 39, "Message",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[104143, 2273, 2007, 59, 107, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[106187, 2337, 322, 7, 24, "Input"],
Cell[106512, 2346, 82645, 1372, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189194, 3723, 194, 4, 30, "Input"],
Cell[189391, 3729, 13328, 385, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202756, 4119, 375, 7, 30, "Input"],
Cell[203134, 4128, 10267, 184, 162, "Output"]
}, Open  ]],
Cell[213416, 4315, 259, 8, 84, "Text"],
Cell[213678, 4325, 326, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[214029, 4337, 807, 19, 30, "Input"],
Cell[214839, 4358, 7896, 141, 363, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222772, 4504, 511, 12, 46, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[223286, 4518, 1669, 42, 278, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[224970, 4563, 319, 7, 24, "Input"],
Cell[225292, 4572, 216, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[225533, 4581, 575, 15, 30, "Input"],
Cell[226111, 4598, 16820, 300, 405, "Output"]
}, Open  ]],
Cell[242946, 4901, 385, 7, 65, "Text"],
Cell[243334, 4910, 405, 10, 50, "Input"],
Cell[243742, 4922, 465, 12, 50, "Input"],
Cell[CellGroupData[{
Cell[244232, 4938, 219, 4, 30, "Input"],
Cell[244454, 4944, 12867, 228, 273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257358, 5177, 166, 3, 30, "Input"],
Cell[257527, 5182, 11210, 201, 276, "Output"]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    146793,       3071]
NotebookOptionsPosition[    143244,       2967]
NotebookOutlinePosition[    143797,       2986]
CellTagsIndexPosition[    143754,       2983]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
THE FOLLOWING ASSUMES THAT IMPORTED DATA IS IN A TSV FORMAT OF THE FOLLOWING \
STYLE: X VX Y VY WITH INTEGER FREQUENCIES SERVING AS THE SEPARATION BETWEEN \
TEST RUNS.  CHANGES TO THIS CODE MUST TAKE THIS INTO CONSIDERATION\
\>", "Text",
 CellChangeTimes->{{3.6677569400191393`*^9, 3.667757060164483*^9}, {
  3.66775909166575*^9, 3.667759112943102*^9}, {3.667832719329768*^9, 
  3.66783275385422*^9}},
 Background->RGBColor[1, 0.925, 0.925]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.670524495380979*^9, 3.670524507921308*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lowField12cm", "=", 
   RowBox[{"Import", "[", "\"\<LowField1.2.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowField6cm", "=", 
   RowBox[{"Import", "[", "\"\<LowField.6.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highField12cm", "=", 
   RowBox[{"Import", "[", "\"\<HighField1.2.tsv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highField6cm", "=", 
   RowBox[{"Import", "[", "\"\<HighField.6.tsv\>\"", "]"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.6676596648932962`*^9, 3.6676596844931192`*^9}, {
  3.6676832467817183`*^9, 3.667683250632972*^9}, {3.667728880142356*^9, 
  3.667728902682107*^9}, {3.667749928841014*^9, 3.667749929266423*^9}, {
  3.667750107493984*^9, 3.6677501233894653`*^9}, {3.667754663027288*^9, 
  3.66775466512741*^9}, {3.66775471892115*^9, 3.667754719394032*^9}, {
  3.66783255161019*^9, 3.667832586362712*^9}, {3.66783296590694*^9, 
  3.667832966012723*^9}, {3.667906789153955*^9, 3.667906802337914*^9}, {
  3.668102412366425*^9, 3.66810241995846*^9}, {3.668102535593877*^9, 
  3.6681025385681353`*^9}, {3.668255238708158*^9, 3.66825523985942*^9}, {
  3.668255652548946*^9, 3.668255653041394*^9}, {3.6682556847971697`*^9, 
  3.6682556859817457`*^9}, {3.6682557628359528`*^9, 3.668255764464176*^9}, {
  3.668255817222673*^9, 3.668255818514205*^9}, {3.668255986165658*^9, 
  3.6682560562552443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", "lowField12cm"}], ";"}]], "Input",
 CellChangeTimes->{{3.668335473428625*^9, 3.6683354809742928`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["This first function finds how many frequencies were \
tested in the data set.\n\nThis function(plotVData) makes plots of Vy v. Vx \
for each frequency and places them in a list. Converts to m/s \nThe count \
function counts how many particles survived for each frequency.\nThe \
plotPhaseSpaceXData makes phase space plots of Vx v x.\nThe maxboltz1D \
function is used to fit maxwellian distributions to the velocity data",
 FontSlant->"Italic"]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.667672371386359*^9, 3.667672418318089*^9}, 
   3.667672518720188*^9, 3.6676741587696333`*^9, 3.667683148154711*^9, {
   3.6678355621528788`*^9, 3.667835594692507*^9}, {3.67801786833125*^9, 
   3.678017899272526*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getIndices", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"indices", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"data", "\[LeftDoubleBracket]", 
               RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1"}],
              "]"}], "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"indices", ",", "i"}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "indices", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.667659869031968*^9, 3.6676598729699173`*^9}, {
   3.667659907473193*^9, 3.667660001757038*^9}, {3.667660075871605*^9, 
   3.66766018930908*^9}, {3.667660227331959*^9, 3.667660227930565*^9}, {
   3.667660332585683*^9, 3.667660461104998*^9}, {3.66766057746915*^9, 
   3.667660601222875*^9}, {3.667660635328277*^9, 3.6676606614260263`*^9}, {
   3.667660706256215*^9, 3.667660709835599*^9}, {3.667660828086639*^9, 
   3.667660915459283*^9}, {3.667660949785516*^9, 3.6676609979469557`*^9}, {
   3.667661070411283*^9, 3.6676610737249527`*^9}, {3.667661245500369*^9, 
   3.667661280810173*^9}, {3.667661555226038*^9, 3.667661623149704*^9}, 
   3.667661684908586*^9, {3.6676617711345673`*^9, 3.667661791391315*^9}, {
   3.667661900694957*^9, 3.6676619167984333`*^9}, {3.667661947742538*^9, 
   3.6676620717932653`*^9}, {3.667662113813779*^9, 3.667662182690028*^9}, {
   3.6676625220619917`*^9, 3.6676625853744593`*^9}, {3.667662744333829*^9, 
   3.667662786728298*^9}, {3.667662861393619*^9, 3.667662890268682*^9}, {
   3.6676629370332317`*^9, 3.6676629876691227`*^9}, {3.667663046618265*^9, 
   3.6676630470925198`*^9}, {3.667663199749485*^9, 3.667663210321073*^9}, {
   3.6676632706564693`*^9, 3.667663293677437*^9}, 3.6676633680344677`*^9, {
   3.667663427914921*^9, 3.667663428733301*^9}, 3.6676724183184547`*^9, 
   3.667835562153377*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotVData", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"vPlots", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vList", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], 
              "*", "1000"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vPlots", ",", 
             RowBox[{"ListPlot", "[", "vList", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"vPlots", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6676634494096527`*^9, 3.6676634726379023`*^9}, {
   3.667663516033545*^9, 3.667663541786474*^9}, {3.667663578447805*^9, 
   3.667663594238201*^9}, {3.66766364696064*^9, 3.667663665017823*^9}, {
   3.667664297927742*^9, 3.6676643387818527`*^9}, 3.6676643714546328`*^9, {
   3.667671397631112*^9, 3.6676716164428883`*^9}, {3.667671752891222*^9, 
   3.6676717606356564`*^9}, {3.667671818475004*^9, 3.667671935711884*^9}, {
   3.6676719878399963`*^9, 3.667672020485806*^9}, 3.667672491144166*^9, {
   3.667683848653598*^9, 3.667683857035335*^9}, {3.667683896468519*^9, 
   3.667683909716754*^9}, {3.667684237002583*^9, 3.667684239563719*^9}, {
   3.667684445011178*^9, 3.667684447243455*^9}, {3.667729107932733*^9, 
   3.6677291188761053`*^9}, 3.6677550439462223`*^9, 3.667835562154152*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"count", "[", 
   RowBox[{"data_", ",", 
    RowBox[{"initNumber_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"counts", "=", "0"}], ",", 
      RowBox[{"countList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList", ",", "freq"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"freq", "=", 
      RowBox[{"data", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], " ", "&&", " ", 
           RowBox[{"i", "\[NotEqual]", "1"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"countList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"freq", "/", "1000"}], ",", 
               RowBox[{"counts", "/", "initNumber"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"freq", "=", 
            RowBox[{"data", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"counts", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"countList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"Last", "[", "indexList", "]"}], ",", "1"}], 
                 "\[RightDoubleBracket]"}], "/", "1000"}], ",", 
               RowBox[{"counts", "/", "initNumber"}]}], "}"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "countList", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.66775032984654*^9, 3.667750346764262*^9}, {
   3.6677504076624193`*^9, 3.667750408487493*^9}, {3.667750489922374*^9, 
   3.66775059387519*^9}, {3.6677506615672894`*^9, 3.6677506769610558`*^9}, {
   3.667750717688188*^9, 3.6677507345186787`*^9}, {3.6677507702918673`*^9, 
   3.6677508776697598`*^9}, {3.6677509095717154`*^9, 3.667750933714686*^9}, {
   3.66775101333071*^9, 3.667751053032297*^9}, {3.667751137991049*^9, 
   3.667751181523608*^9}, {3.667751233073598*^9, 3.667751234520054*^9}, {
   3.667751281514202*^9, 3.667751299537883*^9}, {3.6677513353186893`*^9, 
   3.667751335581458*^9}, 3.667835562154558*^9, {3.668877623528111*^9, 
   3.6688776266371117`*^9}, {3.668879409592163*^9, 3.668879426319365*^9}, {
   3.67500117937947*^9, 3.67500120807831*^9}, {3.6750013005775013`*^9, 
   3.675001331714299*^9}, {3.675001814382588*^9, 3.675001868881412*^9}, 
   3.681054032122476*^9, 3.68105412775244*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotPhaseSpaceXData", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"psPlots", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psList", ",", 
             RowBox[{"1000", "*", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
               "}"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"psPlots", ",", 
             RowBox[{"ListPlot", "[", "psList", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"psList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"psPlots", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.6676634494096527`*^9, 3.6676634726379023`*^9}, {
   3.667663516033545*^9, 3.667663541786474*^9}, {3.667663578447805*^9, 
   3.667663594238201*^9}, {3.66766364696064*^9, 3.667663665017823*^9}, {
   3.667664297927742*^9, 3.6676643387818527`*^9}, 3.6676643714546328`*^9, {
   3.667671397631112*^9, 3.6676716164428883`*^9}, {3.667671752891222*^9, 
   3.6676717606356564`*^9}, {3.667671818475004*^9, 3.667671935711884*^9}, {
   3.6676719878399963`*^9, 3.667672020485806*^9}, 3.667672491144166*^9, {
   3.667672598928376*^9, 3.667672685257111*^9}, {3.667672837447526*^9, 
   3.667672838639127*^9}, {3.667684247350618*^9, 3.66768425369951*^9}, {
   3.667750297303577*^9, 3.667750298364802*^9}, 3.6677550515876427`*^9, 
   3.667835562154846*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxboltz1D", "[", 
   RowBox[{"v_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"3.321", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "26"}]]}]}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"1.38", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "23"}]]}]}], ",", "prob"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prob", "=", 
      RowBox[{
       SqrtBox[
        RowBox[{"(", 
         FractionBox["m", 
          RowBox[{"2", " ", "\[Pi]", " ", "k", " ", "T"}]], ")"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "m"}], " ", 
          SuperscriptBox["v", "2"]}], 
         RowBox[{"2", " ", "k", " ", "T"}]]]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{{3.667234895957103*^9, 3.6672349032124453`*^9}, 
   3.6672382293078833`*^9, 3.6712235994414053`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxboltz", "[", 
   RowBox[{"v_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", 
       RowBox[{"3.321", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "26"}]]}]}], ",", 
      RowBox[{"k", "=", 
       RowBox[{"1.38", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "23"}]]}]}], ",", "prob"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"prob", "=", 
      RowBox[{
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["m", 
           RowBox[{"2", " ", "\[Pi]", " ", "k", " ", "T"}]], ")"}], "3"]], 
       " ", "4", "\[Pi]", " ", 
       SuperscriptBox["v", "2"], 
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "m"}], " ", 
          SuperscriptBox["v", "2"]}], 
         RowBox[{"2", " ", "k", " ", "T"}]]]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Return", "[", "prob", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True,
 CellChangeTimes->{3.690294688053028*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The getVelocities function grabs all of the velocity \
data and places it into a list.\nThe getPositions function does the same \
thing but for the positions.\nThe getPlotArea function uses a crude method of \
area approximation to find how much of a space is covered by the data.\nThe \
graphPlotAreas function takes the plot areas of the velocity graphs for each \
frequency measured and graphs the result.",
 FontSlant->"Italic"]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667756687489594*^9, 3.667756833660075*^9}, {
  3.667756912547267*^9, 3.6677569296689243`*^9}, {3.667834454051134*^9, 
  3.6678344988280907`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"getVelocities", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"finalList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"vList", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"data", "\[LeftDoubleBracket]", 
                 RowBox[{"i", ",", "4"}], "\[RightDoubleBracket]"}]}], "}"}], 
              "*", "1000"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "vList"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "vList"}], "]"}], ";"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"finalList", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.6677548422187443`*^9, 3.667754895058812*^9}, {
   3.667754934396628*^9, 3.667755012147859*^9}, 3.667755072506229*^9, 
   3.667755344278878*^9, 3.6677554194331417`*^9, {3.667756034896699*^9, 
   3.667756041451212*^9}, 3.667756811968339*^9, {3.668880069996791*^9, 
   3.6688800956895723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPositions", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pList", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"finalList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "indexList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"indexList", "=", 
      RowBox[{"getIndices", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"Length", "[", "data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"indexList", ",", "i"}], "]"}], "\[Equal]", "False"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"pList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}]}],
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"indexList", ",", "i"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "pList"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"pList", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[Equal]", 
           RowBox[{"Length", "[", "data", "]"}]}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"finalList", ",", "pList"}], "]"}], ";"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"finalList", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667756881911368*^9, 3.667756904768776*^9}, 
   3.6677571327122717`*^9, {3.667757196450549*^9, 3.6677572063150787`*^9}, {
   3.668880263311659*^9, 3.668880267400154*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPlotArea", "[", "Data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2", ",", "y", ",", 
      RowBox[{"area", "=", "0"}], ",", "i", ",", "sortedData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sortedData", "=", 
      RowBox[{"Sort", "[", "Data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "Data", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x1", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x2", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"i", "+", "1"}], ",", "1"}], "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"sortedData", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"area", "=", 
         RowBox[{"area", "+", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", 
            RowBox[{"(", 
             RowBox[{"x2", "-", "x1"}], ")"}]}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "area", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667755312136026*^9, 3.66775545510564*^9}, {
   3.667755606803481*^9, 3.667755721861433*^9}, {3.667755904489266*^9, 
   3.66775594946108*^9}, 3.667756811968512*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphPlotAreas", "[", "data_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"areaList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", 
      RowBox[{"velocities", "=", 
       RowBox[{"{", "}"}]}], ",", "frequencyList"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"frequencyList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"data", "\[LeftDoubleBracket]", 
          RowBox[{"getIndices", "[", "data", "]"}], "\[RightDoubleBracket]"}],
          "]"}], "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/", 
       "1000"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"velocities", "=", 
      RowBox[{"getVelocities", "[", "data", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "velocities", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"areaList", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "frequencyList", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"getPlotArea", "[", 
             RowBox[{
             "velocities", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"areaList", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Frequency (kHz)\>\"", ",", 
           "\"\<velocity space area (\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(s\), \(2\)]\))\>\""}], "}"}]}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", "\"\<Velocity Space area v Frequency\>\""}], 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.667833630001484*^9, 3.667833703931077*^9}, {
  3.667833736448064*^9, 3.667833794863759*^9}, {3.667833826649708*^9, 
  3.667833977491797*^9}, {3.667834018306315*^9, 3.667834082363345*^9}, {
  3.667834156277253*^9, 3.667834240652669*^9}, {3.667834519880701*^9, 
  3.667834568176113*^9}, {3.667834641447834*^9, 3.667834643902892*^9}, {
  3.667834731518578*^9, 3.667834752936783*^9}, {3.667834902026792*^9, 
  3.6678349869668083`*^9}, {3.6678350223183823`*^9, 3.66783514752422*^9}, {
  3.667835200203517*^9, 3.667835201683688*^9}, {3.667907040323604*^9, 
  3.667907042117138*^9}, {3.667907487521336*^9, 3.667907516313013*^9}}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"velData", "=", 
   RowBox[{"getVelocities", "[", "data", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667755188395693*^9, 3.667755214739175*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"highField12Graph", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highField12cm", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (Hz)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", "\"\<Red\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highField6Graph", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"highField6cm", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (Hz)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Particle count v Frequency for -.6 \!\(\*SuperscriptBox[\(cm\), \
\(-1\)]\)\>\""}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", "\"\<Black\>\"", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowField6Graph", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowField6cm", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (Hz)\>\"", ",", "\"\<Count\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Particle count v Frequency for +.6 \!\(\*SuperscriptBox[\(cm\), \
\(-1\)]\)\>\""}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", "\"\<Black\>\"", "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowField12Graph", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"count", "[", 
      RowBox[{"lowField12cm", ",", "20000"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frequency (Hz)\>\"", ",", "\"\<Success Rate\>\""}], 
       "}"}]}], " ", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", "\"\<Red\>\"", "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "12"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667835216901589*^9, 3.6678352210918207`*^9}, {
   3.667835253088744*^9, 3.667835379778184*^9}, {3.6679069353101892`*^9, 
   3.667906953295762*^9}, {3.667907001235524*^9, 3.667907002652276*^9}, {
   3.6682556165774927`*^9, 3.668255635370504*^9}, 3.668255677748095*^9, {
   3.668256064547626*^9, 3.668256066472844*^9}, {3.668256113155204*^9, 
   3.6682561272355328`*^9}, {3.66825617727584*^9, 3.66825618752927*^9}, {
   3.668263120514887*^9, 3.6682631291587048`*^9}, {3.668263196890833*^9, 
   3.668263216561969*^9}, {3.668263251546111*^9, 3.668263388648343*^9}, {
   3.668263434491661*^9, 3.668263438857697*^9}, {3.668263709384787*^9, 
   3.66826372730256*^9}, {3.668263802221262*^9, 3.668263802331258*^9}, {
   3.668263840792816*^9, 3.668263840990855*^9}, {3.668263889928541*^9, 
   3.6682638903518667`*^9}, {3.668264049240296*^9, 3.668264057066462*^9}, {
   3.668264108131157*^9, 3.6682641327024307`*^9}, 3.668264189010167*^9, {
   3.668692909831005*^9, 3.668693125764861*^9}, {3.668693164859058*^9, 
   3.668693165962784*^9}, {3.668693243115498*^9, 3.6686933172550173`*^9}, {
   3.669307758773988*^9, 3.669307793498239*^9}, {3.66985525333213*^9, 
   3.669855257999675*^9}, {3.670524613305917*^9, 3.6705246190252657`*^9}, {
   3.67491948056782*^9, 3.674919481407831*^9}, {3.674919530318017*^9, 
   3.6749195326569557`*^9}, {3.6749197087995777`*^9, 3.674919806613276*^9}, {
   3.67492181927903*^9, 3.674921844914493*^9}, {3.67492241632508*^9, 
   3.6749224222984133`*^9}, {3.674922481983542*^9, 3.6749224826941223`*^9}, {
   3.674922533924453*^9, 3.67492253703906*^9}, {3.6749237344833517`*^9, 
   3.674923776985054*^9}, {3.675601336799417*^9, 3.6756013750648823`*^9}, {
   3.6756014179258204`*^9, 3.6756014551866198`*^9}, {3.6756015450628777`*^9, 
   3.6756016420982943`*^9}, {3.675601692249557*^9, 3.675601718038143*^9}, {
   3.6756024291860857`*^9, 3.675602471256665*^9}, {3.675602546001836*^9, 
   3.6756025494769783`*^9}, {3.675603129366802*^9, 3.6756031401348352`*^9}, {
   3.675603310483233*^9, 3.6756033627571363`*^9}, {3.675603483229203*^9, 
   3.675603510561573*^9}, {3.675603545703446*^9, 3.675603559462028*^9}, {
   3.675603662099682*^9, 3.6756036630098877`*^9}, {3.675603845325368*^9, 
   3.675603849935336*^9}, {3.6756039301124783`*^9, 3.675603932037641*^9}, {
   3.6756040323423777`*^9, 3.675604033231697*^9}, {3.6756040701990957`*^9, 
   3.6756041019606743`*^9}, {3.675604168817823*^9, 3.675604170145082*^9}, {
   3.675604263639978*^9, 3.675604430840561*^9}, {3.675604477465414*^9, 
   3.675604481545146*^9}, {3.675604632489375*^9, 3.6756046839711847`*^9}, {
   3.6813228585381947`*^9, 3.681322871046122*^9}, {3.681322936386582*^9, 
   3.681322947353074*^9}, {3.6813229889539413`*^9, 3.681322991467442*^9}, {
   3.682512492332905*^9, 3.682512497379722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
   "lowField12Graph", ",", "lowField6Graph", ",", "highField12Graph", ",", 
    "highField6Graph"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.668263103433023*^9, 3.6682631119331207`*^9}, {
  3.668263159642069*^9, 3.668263175094119*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1., 0., 0.], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkwlIVFEYhSdbbCfLTNPKcUsdR2fTGUvppGmmbVpatppii6FhJpWlvjZt
s0UjKSYrW9CwFZMKl7HN0ggpQTAqM4wWpYKMaLOZ8Uww8+DxOHz3u/e//31X
nLghJtlKJBLF6l/Dt+8ZBZHZY2ORR1vkMYitLzs/F0nT+rItQhI6m11enGAe
i126xrNhVeeY7dB/yzA3z5wK5nEoexil3jf9DLM9rh5L3pu0XMvsAFVppfrH
3fPM4/HBQz64wukSsyMWLb1e11Vims8JveI/3zPbTXkCZN7lY5pnlDFPxNTX
8wqK00qZJ6FV9VkTNtOUnTHjZ/cnXSDrFZzReC/k8rpXZ8nFcDFMr2UWxHjq
EN3muN3EXVDceyTn1xTuR3BBVoPXlMKm0+SuqHlrO+FxJ7PgitS47CtViSbu
hsr4nttt+0+Ru8HauICpH+7QdZUE+bScJHfH9+KXRfl7mEUe+Btq2AD7L3ig
XWtzoaa+mHwyDkZ+HKCyOU4+Ge21I7XK0mPknvhiFzH/t30RuSdqYo6LD2Ue
JffCbP1pJXQeIfeCw4C4kdIbBeTeeLI86pF18AFybxi3l7uPXIKv3yLj8zR5
5BIYTi/IZze5D25e3Krv2E5yHwxxLFnh1SSQS+GeaXVysGMOuRQLDOWlbyP3
xcWh4fohWeS+eJ8i0bcog9wPPS9ad2SEbyL3g2G3Ga0byWUYa2xQel+GDNr7
ztc2rmUWZMhb8rz6rW1qX9bJEG4saD19OU4bTucdOeRouHOrYNCX1fTlaJEk
O3QsXkNfju4RtbIT3mvpK3Bn1nArST7HQ8H6EukrzO+bTsH+JNBXYqvxgiyj
r8Q22ysz32QtpG/BdUruN5q+ivXG0VdhlSJWf4UW0FfhwWH5Zql4Hn0LLvLH
SuMPG0Xf33y84I/CptyIuuw59P0hDXX61BEQST8AP3NSqjcVRdAPMB8vBHC9
UPoW40Vq+KWd61c9MIS+2rweQc35gumr8bv867M5iaCvsfA1rG88fQ3XV9LX
0JfRD/zP/wFQVWEl
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0., 0., 0.], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEsDgwogA2Nz4HG50Lj8zh8vX29sditxR7C53OQ
/5ITVrtuGpQv4MCk3S5289x0KF/Qwce80zHh6QQoX8jh7taWmgubZ0L5wlDz
F0D5Ig5LCmy5ri+G8UUdXN2LfvK/hJkn5jDlG1v8DJ+pUL64w+mFrts+/50C
5Us4LPVzEE48PBnKl3So/21VcK5jEpQv5aB+qG15+CkYX9pBP28x4x5WGF/G
wVzqQLSC40QoX9YhYoXpWWs/GF/OIeTx0tlHFGD+kXe4xHCPibOrH8pXcLh5
7nvw46XdEH6DgsOsmSDQCZVXdHgwR3Dp3oPtUHlFqH9aofJKDt05z3+v/NgE
lVeChl8DVF4Zal89VF7ZwejZOtUnzXVQeRWHqBTr+/695VB5FYfju3b0sn0o
g8qrQuOvBCqv6tD06PiM3dMKoPJqDn9WfrzkmwTlN6g5xLOfkwy8lQ2VVwcF
7mXt1EyovLrDFe1UyUcR6VB5DYdqkXXuD6tSoPIaDvcKu/qefIqHyms6cErP
i9M8nQCV14SaFwmV10JV36DloOss8/qRWRRUXtvBTbWUaRZHNFQejc+g4zDp
dL3H/lpfqLyOw6+6rD0lkyOg8rrQ+HaCyutC/ecNldeDxkeoPQD9oMkV
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1., 0., 0.], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEsDgwogA2Nz4HG50Lj86Dx+dD4Amh8QTS+EBpf
2MFyy4myffOz7CF8EYcHcwSX7j1YDuWLOuRUVC3Vca6B8sUcStymfGOLr4Dy
xR02V3/aEJBdBeVLOEjr31VhayyF8iUdEo1CDbRWFkP5Ug5Nj47P2D2tAMqX
djjab1iuq5gP5cs4KFzKj2c/lwnlyzrkLWbcwyqUAuXLOSj9/Vb6YE4ilC/v
sGbtjfgy/zgoXwHq/nAIv0HB4fiuHb1sH8Kg8ooO+mADg6Dyig5/Vn685JsU
AJVXctB1lnn9yMwLKo/GZ1CGqneAyis7TDpd77G/1hYqr+IACp0ZPq5QeRWo
fU5QeVWoeVZQeVWo+8yg8mrQ8DKGyqPxGdShfGWoPBqfQQNqPhdUHo3PoIkm
j8Zn0EKTR+MzaKPJo/EZdNDk0fgMumjyaHwGPTgfAHfzpCc=
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0., 0., 0.], PointSize[0.011000000000000001`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdy79LQlEYxvG3sB9oRFaWmZk/UuumJhmtvuhyCYIUGiMUJBLRwYIIKpeg
oalWt3DwP3AwollwuEtbXBxzcnEQgwpfgvs8cDh8+J7jyZbSuXEiiv2ev3s0
E5Nhk+BpsBk8w4Wr61ooWYiPPMvtB+1Tt5TFc9xw3XdTjaLYym6tdDrVPhfP
s1611l7fz8QL7P3uX+rVjHiRn1p36tvNidjG6tHQXv5Ii5fY9njwZdpLiZd5
cJtvXjyrYjt4hXeKL2PNiYTYAV7lYb2nHWajYieHk85uZ18Rr3Fm9ziq1H1i
F3hd3jvEbqMrYPKIzdLB5IUOJh90MG1AB5MfOpgC0ANMhgWNrgTh/yZ0MG1B
B5MCHUzb0MEUgg6mMHQwRf79A80xghY=
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Success Rate\"", TraditionalForm], None}, {
     FormBox["\"Frequency (Hz)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{663., Automatic},
  LabelStyle->{
    GrayLevel[0], 12},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 25.}, {0, 0.0564}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.66826381015511*^9, 3.668263846742692*^9, 3.6682639077209167`*^9, 
   3.6682640649954576`*^9, {3.668264127628137*^9, 3.668264136360319*^9}, 
   3.668264193205118*^9, 3.668692545968804*^9, 3.6686930462902403`*^9, {
   3.66869308366188*^9, 3.66869309851046*^9}, 3.668693130180851*^9, 
   3.6686931698279877`*^9, {3.6686933080951366`*^9, 3.6686933212335873`*^9}, 
   3.6687052353721*^9, 3.668877689137147*^9, 3.6688777912358713`*^9, 
   3.66887912814322*^9, 3.668879217308634*^9, 3.6688805443290987`*^9, {
   3.6693078063328733`*^9, 3.669307825299423*^9}, 3.669855280549157*^9, 
   3.674919541684032*^9, {3.6749197391584587`*^9, 3.67491981319573*^9}, {
   3.6749218320012093`*^9, 3.6749218530669003`*^9}, 3.674922425657261*^9, {
   3.674922488106165*^9, 3.67492249657195*^9}, 3.6749225415360937`*^9, {
   3.674923739006888*^9, 3.6749237814165583`*^9}, 3.675601462196054*^9, {
   3.675601553068289*^9, 3.675601646085279*^9}, {3.675601701911268*^9, 
   3.67560172128123*^9}, 3.67560301002989*^9, {3.67560332226164*^9, 
   3.6756033737476063`*^9}, 3.675603516814434*^9, 3.6756035656012993`*^9, 
   3.675603668144821*^9, 3.6756037215807877`*^9, 3.675603805541808*^9, {
   3.675603841196547*^9, 3.6756038668506107`*^9}, {3.6756039244877996`*^9, 
   3.675603965393866*^9}, 3.67560403711869*^9, {3.675604092913494*^9, 
   3.675604120250577*^9}, 3.67560428319774*^9, {3.6756043149043617`*^9, 
   3.675604325442707*^9}, {3.675604406874587*^9, 3.675604434848287*^9}, 
   3.6756044873801517`*^9, {3.675604671491588*^9, 3.6756046914764757`*^9}, 
   3.678018887581481*^9, 3.6780190473711767`*^9, 3.681322876245409*^9, {
   3.6813229430428333`*^9, 3.681322950598257*^9}, 3.681322995661463*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graph1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
     "velData", "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", ".01", "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Vy\>\"", ",", "\"\<Vx\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{
     "velData", "\[LeftDoubleBracket]", "37", "\[RightDoubleBracket]"}], ",", 
     
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<Red\>\"", "]"}], ",", 
        RowBox[{"PointSize", "[", ".01", "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"graph1", ",", "graph2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.669853639890457*^9, 3.6698537196783237`*^9}, {
   3.669853963488297*^9, 3.669853979690711*^9}, {3.669854021406849*^9, 
   3.669854046451991*^9}, {3.6698540816909933`*^9, 3.669854101905877*^9}, {
   3.669854229252203*^9, 3.669854256336471*^9}, {3.669854912851416*^9, 
   3.6698549312881002`*^9}, {3.6698550125727663`*^9, 3.669855056614456*^9}, {
   3.6698552058985643`*^9, 3.66985521075261*^9}, 3.66985588045127*^9, {
   3.6903012092607822`*^9, 3.690301227965062*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
      AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
bqlFBcD6kTbPJd4OwB/fRq4vlfW/96e7ew==
       
       "]]}, {}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1., 0., 0.], PointSize[0.01], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJwVl3k81G8XhgczRrKOLVEkCm3Iz5J4vkJZk4oSIYqUrZASoiJtQmUJLSoq
WVqUSZwHISQSpbINxpJ9xhi7t/ev8//9Odd1zr3G3X/vMV4SiSTIQyL9f5bd
3n/bOIgLNaprd3leGEINnX2Bk9ICROSBz+m/yxjIR9K4954UFZ9Zm5W073Ur
TCGLD99qlxGPtjoNX/fhJSIq8hKSRDkw2b9/eMUPAZzYH+3Oq0QmAmo/l1F8
hLCjPkSKKveibYPDATKSfDghedxlax8blG+a7Djxh4VWS3q4iL+nYLEamSBd
0yXkrrvjAKdSEBdGK9pWb66GON2FP2bG7SAv/qrDpVqMqAk5RIlw+AChvYtN
NlIzyF6dcyCmuw11hoRI+ZS1ojc/aJzcbbMo17F9RKH+F9rDl1QvLMYCDjPZ
g+QkimueG9PUrzUhrV1y9hkMFop8ovws9UEHbHjpOMT7pAftCntbUR7ORm+O
qZ3bTmtD3hZJ39l5syhssaKQLdsKeQEXWkvvDyBrtRuxmnELyOQi68T1h3+Q
Obtcxruagu/OWkjvPsoBI+Vol6cWTIjO3GkQ2S9CfD0/Gb9abgqcrmiV9r0c
AWdHfQ2VkgHIKjl73fXLAKiLiStwNEah55zCDt2JZXjveq1QNXEm6n0ebNjr
wYDWjk2crDIBwuS9YMpIOR8etWDDOe9luD6x90XxXmF8t1X8qn6xCFFX6cEg
qpdjLcee4bzKH2B6pIOddXAY6n7fl2y5+QlObJUSqJ7jIN+FnUYvoxlIUz8k
saC+CVZ2a5VsuDoAaqRZGVkRKdySqT79n90MOnxp/ub5KVGcJvx4R544DyGl
taJd4HA3ilPK95WkNUNLkoaejBkHrSu/3zU/xUPwhgi9LzhTBfcVHV3ipcVw
W+mLZXuu8+DAIzerx0IFCblUtlYgMYhcTX4YXPw5A5Pm9P7sLD5cUe3090k+
C5n7BY0HZLDgdK26sr8aA3pDtIea3BiIS47wksgqRHFG0w0//YXxgNpnybOr
B1F6XbWOnpUofliYwOO+mZcQj7Rdc0KTi0YEjawt8BScZScE7V/zEwbTmJHK
nvMoq86GO6jIRexAre2JYxNozF8rfG3wXzTm3hiY4idC7H4Rk7dgwkY32Avr
ZD0GYF/tvTWPRal4d6rtJOPGAPjeIX2X/SiEA0ujuFnhvIRHLpecbTuK2hvt
87y5X5ClwH2rU4H/uCjW+ftCugdtU/9j6ev0C81Kr3HVPTyLhrHs74UuLso1
PfO2TJGH4NYEkkwixPDrK4GkMoYg8e5gxv5QhZdI/lTKVyXrdshL0ZbjpGbB
cZeT8lbP/4JPhwa/XNMQnJiNUQy+MAOg//CoObsZedYUn/BZNY0+f3c579bE
jy29g53R+wWIuNlqtcVvAeID9Dj5BBP5Xd4yUC4jigMFP+c53FpC1jtzzirP
jKOeVL6sxU/fkNu9U+LrrHiJGufjD8WNqMQN+eXu0vJZoNi718ttaRzFTeVJ
DYX1oMy0+27RfvNg/K3pqeaUECZFzps5EAzES7V7nfWbhQzqZBevbebFP5SW
5LLk29CxK4EuTXpT6NSrMZlvCh9h8++GjbmcAfS4Q8zmx5HlRHCSbRif9DT4
rpFWW/WQgVZ4+TbPCTNQXVxpbcK5eaTFLFD1ZvMQAspFeQUfZtDGrvDv1L4l
FBZiaL5+9xKIpNT7xV4UxPqHJ8RrdYfgHVnesaOZgl2CmVVJpiTi1jHH95TM
QaCusr5Se4oH+xWV6+XG8mP0stiB3j8FWV/frpPhp2K+HeoF1pQ3aPXOTnpl
EAvK3o53cCLH0OqF8O76688h4Msmx1gfSfzV/YCItyATKdNddYr1umEdvUn5
eQwV344khM4dmUP19py/KcbF6LPUoXsXVg6BOenyzl/mvDhSXjlmqpGGJXIo
WcY+jUjO8ckWocoB4DTd33/0yzBgwQQxHnoPMr++pFShvRbfShB96j4wBLNn
bA41UsiEfhJfb6nGEjoQG6hBm6cQ2+M0L0y2CuAnwRYC4dm8+OmO1WtX0LlQ
oll5QSaGH7ONTB3ahyZQek4BZ9eudkTfXu9bL7aAnnvgmTTohCdu59yenZmE
lpQPIveTSASfUPyb5i8U3PzcxmGSrw3O5vS4n3jXDRljEfvqXzYg+wz3J7It
JDxktjFU0bUJye6mRKkZMeGxRBlxbi8LRYQ8yK7SFsPf9bTd9uFe0LfmGaK1
TaBoG9fzblkMoK4I7ntUQ8GhmrqurwqW4ReHK6foflQcbyNffd5WEH9UjRnd
KjsNxpsGyafjS2BWoHtT35pWNGZm+9TDUxjTvYi3V0MG4WncWnZ0JoXQf+ym
5K7VDQGysqG7fJSJ9Pw/xidkmejanBUzT0oeK/10VKv6MY9W2cbYVTL+ebzQ
sNeuUxCrZEW807L7BYeT/nyJNxUjgoSzxesG+v/tn5WBazLA4qkNlSblC7Bz
qYeU5yaCvU44yDgqk4iGkv2ObxtG0Ou8gKDrugxANAt5qVhBXF1IqY+68e9e
aqk8/7mHRmikJZV7bp0Gu+jGEe8EKg4+Uq0NqWzkkjSwnr2vG3bOrxxIap2B
eeuYtlBnQULb6KiDyp5p1Pef938VU2xoDA9b0arAQn9opeovb1GItPaboy7b
qUR2+RW/Fc7jSOBT+4Yb7y4jHdb1sbBJKjaid2xzn59F8gY6ymcSl2NHinP9
A2DDzMr0Ab0KKuFkW0L6+ZQP76VrnnSMpmBdtacX8ieKYMm9Uz2IxkIJnSzV
KDo/1nonoHHwCgkzBqzgu3YjHHbM/hi2Yxg6Jm4qRAeL4CCvHwOOtzlIN954
jYFlE7RcPrV+zfIxEI6x3rBNoAMuxnncfpc8DuI733m8qPsMpljYxLaPjxiW
vBMlHjENlheJA4mJwyD/9ZDQncZZMGWhG1Hr+sAl2m/OxuAXrLLa1qBR242S
y2xdp86OgsoGleDvms3Aa/bMb7CcjONVVp31HBHAN72rRI3FSURuHZjPiH5H
4sf9VWX3kojbCfPWu8cnUdoyleKfzb/R1Iz6X3NnfqK997QMrWcB5QqqPfdg
MqGgsKuCnspB2heDVor7UPHoaf+rwJxGYvNWdcv051FfsK+ovi2ZcJ2Llvjh
1IHayth1Yd7d6L69iqb7wy6kSHtb08U3D6ssVaL+5KpgTkXZPdMNo8jGJ2wu
9Mog4i1zVCzawAZeo+pNJSPdYFZfZK9JZcHR9S8v3z/djBzm78bP+c+h9BBu
zy/fCgj2ctsYDf2oX1jsUMh5FnrVWZXMKp+CtfQPmQxJJnyzHUtm5ZDxMfLD
+4eS+fDdkAJxKwYZD6w908Jp+Y50pe52NIYux3duwC6K+jBwLNfqiP7L596D
GXHy0DgY8VsVk0lMULonk66kywX7tdtDtTI+o/x1lNSMf9wR5pkvzFLYaLV7
TZWrNA/+C6nkQHk26l1XlyPPJBMi8XFoIXsJFOQevTB5R8ONjWVxI14Y4tN+
W5itjkWdNw1r9Oyo+JkEvemyH5WQfD1wmG6+BKO6F8l1wsNo75KAMUWqB6Wl
txlJ0gWIHe8a16VSuWiKx4Atd7kRFP+cDuBuH0TBbyxV9wZMo56X9v0lL7jw
SsNfqm9sFhmcNeDZc1yQ2LGgcUQ7vQsFVCXqWl76969Y/Hcg5WsXKrv8iaat
s4DaW+18H16cgc4HRY2Z5r+QWGRLovjmKfTYmx1gnMiG9EbDA381RhFtTu/x
+y3jKGcyfy56cQzinY9KMHaNgVldj3OQliAOsEn1+PRwElJzM9bvDm2AyKjB
/gu2PHh++3F849gEWK547TzGoOKJu+XXT7nPgaCfoVG2QycEXFG8ZsfmI44Q
n9LsZkeQSWTnZTFDMq7Rlb6k9G4c3J1f5P3QmkGetd18a+KoxBFhx4noOHFc
l+YRXnpoEejRIbkVXyah/diPs9ecfiNp+JWcbPcHOJ4XLxXGSxB0nZV7TLPI
WFp03/h3yQkk94u1gMv5CRFdt8D3hRMw1RZeJvdjGIabC7XOJUpgPfHRZRc1
utE8DqsZfDUMs0dlrOsnexHs7QYe32U4J61CYIP/NLqtQju4JMhHbD907mhF
EwDcdF5ZVMFFugwDoZP33oBH/0p/DzN+/BFnZhzjkgnuH+2qGplhpDR1W0Ki
UwSPFWK3jTbDqJHKPDr+fh6NEEK1t+w5yNrFOYrOKgaBh3ViX62bYNJ2r2F/
JQc5eX7avCfkLxrfcPLxt48L0HGoKf/6VjHiYEpGXGkWPzFTcsMyNoAJNHL+
0AifGC6IefPRbf0cRDy39he6NoNGRTZpHi2kYvB5b+jFaoQVeUeN09LIWOaC
xya1RzPgOfxJzS+iFW1s10x4ksdHxDI+F1HoLETWvttI9iqF37JEkdOpETAo
FjXcKyGBQ/JpP5P3LCHPmcETifmjoMxUXD1qTSJe+bYUj6UsJwKyMoI9//ng
dVbrzv6hSZTSlvHIZ46X8E7422Af1YTKOQZRRZL/ekWBTXLl1yawtewMjT/3
Ad251CVvc4KNInYfsf22vwtmiCcbg9sXUbZNpsYj9gLi2+agHRFJw1+qXquX
lc6jKLlVt4MzlfC7iHPpdh7zyJ3v2+GvaxhwpOtMTPA9Flg6hOXwePHiIydX
OwvoLYCPRtBuMx1lgudeCfn55kVkX2i+PTCMh1CW1YnwUucgST7JWNFnVajj
WeHgriAGKlp1PX+1xBw03/P1+qpVi8I2n5fewPcR3r8Xa+s1/I6afh/Lzo3i
xwG6yao16lMo4ZIRsU6PivcrLtc4xqhAetbk8REWBz4KPzsSQ/kLxpWieTeS
WGhLusbZWo9KVJrZG9pgOI/aBra1FIWPA512pT3/zSzsdLFL1VISIfQ1rHZT
ZNsQc3mK06eicvTF+WyihOo0vDnDu/PO1mz42qd75r8GJor1Q3WmtyeRj6FR
22NLEhbIOfrNcjsbmi4ZVitHfwNDeQo/+vwTHZ996mVycQJp/yL1289Ogmnp
C3S6Zjmm3cq7UMYvgO/UQsqFEgbY3XDs+q2wCGdfvSGZvB9Bhy8/1juWKozf
xDs9NrPiwVXhc9Gp1ziookZkcNceEkG2X6mxzmkAFrX9s5WK12Cwb821+kAH
2rNpVec6KnFFVvmbO3kKTW9IWGKPNKCixV6Plq8UbK1jRd91h0qkxTel6iaO
oCCdWL0CNgtkVxvQDMdmYKPVI+OK8Bl45Nr8YbC0BPbr8Gbl8gyBUO9MqtSA
ANYOtH5Q5c+Dzb9Y/HylOgbbdfWkjScmoCUodv9Nw0VAm50WQl1JhKdtXnPq
Vi4K3nocEv75trJymcI2fSbiLs+p5v3MhPbygsDox7UoVL0m9crDb4gT/qrM
s5tEfCj37RcmCRLdT/z1JMm9KDipa72Q0zga+GRuKH2wAx3KPWxWsHYcuB9d
beWs+LHs4ZHpVCYX+L7EKZi5zMOJM7/MBm0F8EjVX5peGxd4lGVH8hS48Gar
nWG3BxNJ6cffdaMKYKH8qyYHDjKA5OdGhKnz4xSb+c8bV4rjkxZqdw82zMAB
1eKc7i08xGyCToNKhwhW6NyZt+UuB1SvXkirVeXBA6Jmpn2TSsT/AN5jaxg=

       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Vy\"", TraditionalForm], 
    FormBox["\"Vx\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-11.569388375842, 11.981798841348}, {-12.508537197117999`, 
   12.024882752303}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.669854052339129*^9, 3.6698541025417147`*^9, {3.6698542365524807`*^9, 
   3.6698542573975782`*^9}, {3.669854914526103*^9, 3.669854932327546*^9}, {
   3.6698550408869123`*^9, 3.669855057928849*^9}, 3.669855125207374*^9, 
   3.6698552114922132`*^9, 3.6698558814790297`*^9, {3.6903012020838284`*^9, 
   3.69030122830826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Here", ",", " ", 
  RowBox[{
  "I", " ", "look", " ", "at", " ", "the", " ", "data", " ", "of", " ", "the",
    " ", "simulation", " ", "of", " ", "1.2", 
   SuperscriptBox["cm", 
    RowBox[{"-", "1"}]], " ", "at", " ", "9", " ", "kHz", " ", "to", " ", 
   "compare", " ", "with", " ", 
   RowBox[{"MPI", "'"}], "s", " ", "report", " ", "of", " ", "a", " ", "20", 
   "mK", " ", "trap", " ", 
   RowBox[{"depth", ".", "\[IndentingNewLine]", "My"}], " ", "fitting", " ", 
   "function", " ", "reports", " ", "that", " ", "the", " ", "gas", " ", "is",
    " ", "24", " ", "mK", " ", "in", " ", "the", " ", "x", " ", "direction", 
   " ", "and", " ", "about", " ", "21", " ", "mK", " ", "in", " ", "the", " ", 
   RowBox[{"y", ".", " ", "A"}], " ", "bit", " ", "hotter", " ", "than", " ", 
   "MPI", " ", "but", " ", "they", " ", "do", " ", "say", " ", "that", " ", 
   "they", " ", "their", " ", "trapping", " ", "potential", " ", "was", " ", 
   "\"\<on the order of 20mK\>\"", " ", "without", " ", "providing", " ", 
   "actual", " ", "numerical", " ", "values", " ", "so", " ", "their", " ", 
   "actual", " ", "trapping", " ", "potential", " ", "may", " ", "be", " ", 
   "somewhat", " ", "higher", " ", "or", " ", 
   RowBox[{"lower", "."}]}]}]], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.678017703891471*^9, 3.678017793820258*^9}, {
   3.6780178325308943`*^9, 3.6780178383039923`*^9}, 3.678017921602297*^9, {
   3.67801818148136*^9, 3.678018233732278*^9}, {3.678018287830379*^9, 
   3.678018362353529*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findMaxwellianFit", "[", 
   RowBox[{"vData_", ",", "binWidth_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "histDataForVelocities", ",", "bestFitForVelocities", ",", "bestFitPlot",
       ",", "histX", ",", "histCount"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"histX", ",", "histCount"}], "}"}], "=", 
      RowBox[{"HistogramList", "[", 
       RowBox[{
        RowBox[{"Norm", "/@", "vData"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Norm", "/@", "vData"}], "]"}], ",", "binWidth"}], "}"}]}],
        "]"}]}], ";", 
     RowBox[{"histDataForVelocities", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{"histX", ",", "1"}], "]"}], ",", "histCount"}], "}"}], 
       "]"}]}], ";", 
     RowBox[{"bestFitForVelocities", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"histDataForVelocities", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"maxboltz", "[", 
            RowBox[{"v", ",", "T"}], "]"}]}], ",", 
          RowBox[{"0", "<", "T", "<", "0.3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "T"}], "}"}], ",", "v"}], "]"}]}], ";", 
     RowBox[{"bestFitPlot", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"bestFitForVelocities", "[", "\"\<BestFit\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "0", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Norm", "/@", "vData"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "bestFitForVelocities", "[", "\"\<BestFitParameters\>\"", "]"}], ",", 
        
        RowBox[{"Show", "[", 
         RowBox[{"{", 
          RowBox[{"bestFitPlot", ",", 
           RowBox[{"ListPlot", "[", "histDataForVelocities", "]"}]}], "}"}], 
         "]"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.672405325878304*^9, 3.6724053738673067`*^9}, 
   3.674909442600326*^9, {3.675694354541595*^9, 3.6756943909249496`*^9}, {
   3.675694446992486*^9, 3.675694447065097*^9}, {3.6756944791123447`*^9, 
   3.675694584614746*^9}, {3.6886755472114315`*^9, 3.6886755544615793`*^9}, {
   3.688675688499444*^9, 3.6886756886595316`*^9}, {3.6886757979481525`*^9, 
   3.688675799219054*^9}, {3.6886758345476*^9, 3.688675841843779*^9}, {
   3.688675929986998*^9, 3.688675944899046*^9}, {3.688676169643858*^9, 
   3.6886761726039867`*^9}, 3.688676256947709*^9, {3.6886763213629584`*^9, 
   3.688676323116228*^9}, {3.69029485568195*^9, 3.6902948604555197`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"velsAt9kHz", " ", "=", " ", 
   RowBox[{
   "velData", "\[LeftDoubleBracket]", "21", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posAt9kHz", "=", 
   RowBox[{
    RowBox[{"getPositions", "[", "data", "]"}], "\[LeftDoubleBracket]", "21", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678017142086344*^9, 3.6780171594215927`*^9}, {
  3.6825141158672457`*^9, 3.682514135649755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Norm", "/@", "velsAt9kHz"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6902948988468733`*^9, 3.690294910765197*^9}, {
  3.690294985348319*^9, 3.6902949934134674`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5389999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.5, 8}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{21.350480384307446`, 37.56590987075374}, {
          68.14632356851986, 92.96535391600987}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1., 21}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{37.06590987075374, 53.281339357200046`}, {
          28.627899253848597`, 92.96535391600987}}],
        StatusArea[#, 21]& ,
        TagBoxNote->"21"],
       StyleBox["21", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.5, 43}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{52.781339357200046`, 
          68.99676884364635}, {-38.24943420174894, 92.96535391600987}}],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2., 55}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{68.49676884364635, 
          84.71219833009265}, {-74.72797972298393, 92.96535391600987}}],
        StatusArea[#, 55]& ,
        TagBoxNote->"55"],
       StyleBox["55", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[55, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {2.5, 39}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{84.21219833009265, 
          100.42762781653894`}, {-26.08991902800392, 92.96535391600987}}],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3., 54}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{99.92762781653894, 
          116.14305730298526`}, {-71.6881009295477, 92.96535391600987}}],
        StatusArea[#, 54]& ,
        TagBoxNote->"54"],
       StyleBox["54", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[54, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {3.5, 65}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{115.64305730298526`, 
          131.85848678943154`}, {-105.12676765734646`, 92.96535391600987}}],
        StatusArea[#, 65]& ,
        TagBoxNote->"65"],
       StyleBox["65", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[65, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4., 64}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{131.35848678943154`, 
          147.57391627587785`}, {-102.0868888639102, 92.96535391600987}}],
        StatusArea[#, 64]& ,
        TagBoxNote->"64"],
       StyleBox["64", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[64, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 64}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{147.07391627587785`, 
          163.28934576232416`}, {-102.0868888639102, 92.96535391600987}}],
        StatusArea[#, 64]& ,
        TagBoxNote->"64"],
       StyleBox["64", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[64, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5., 64}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{162.78934576232416`, 
          179.00477524877044`}, {-102.0868888639102, 92.96535391600987}}],
        StatusArea[#, 64]& ,
        TagBoxNote->"64"],
       StyleBox["64", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[64, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {5.5, 56}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{178.50477524877044`, 
          194.72020473521675`}, {-77.76785851642019, 92.96535391600987}}],
        StatusArea[#, 56]& ,
        TagBoxNote->"56"],
       StyleBox["56", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[56, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6., 30}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{194.22020473521675`, 210.43563422166307`}, {
          1.2689901129223387`, 92.96535391600987}}],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {6.5, 28}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{209.93563422166307`, 226.15106370810935`}, {
          7.348747699794842, 92.96535391600987}}],
        StatusArea[#, 28]& ,
        TagBoxNote->"28"],
       StyleBox["28", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[28, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7., 12}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{225.65106370810935`, 241.86649319455566`}, {
          55.98680839477486, 92.96535391600987}}],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {7.5, 16}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{241.36649319455566`, 257.58192268100197`}, {
          43.827293221029855`, 92.96535391600987}}],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8., 7}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{257.08192268100197`, 273.29735216744825`}, {
          71.18620236195612, 92.96535391600987}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {8.5, 5}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{272.79735216744825`, 289.01278165389454`}, {
          77.26595994882862, 92.96535391600987}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{288.51278165389454`, 304.7282111403409}, {
          89.42547512257363, 92.96535391600987}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9., 0}, {9.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{304.2282111403409, 320.44364062678716`}, {
          89.42547512257363, 92.96535391600987}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {10.5, 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{335.65907011323344`, 351.8744995996798}, {
          89.42547512257363, 92.96535391600987}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.21, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 10.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6902949061788263`*^9, 3.6902949111707945`*^9}, {
   3.690294986081514*^9, 3.6902949936942654`*^9}, 3.690301247605336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findMaxwellianFit", "[", 
  RowBox[{
   RowBox[{"Norm", "/@", "velsAt9kHz"}], ",", ".5"}], "]"}]], "Input",
 CellChangeTimes->{{3.690294767823313*^9, 3.690294786387194*^9}, {
  3.690294878972601*^9, 3.690294879206599*^9}, {3.6902949631964607`*^9, 
  3.6902949757075806`*^9}, {3.6902950150193286`*^9, 3.6902950261108575`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", "\[Rule]", "307.7324415414614`"}], ",", 
     RowBox[{"T", "\[Rule]", "0.016712357997266947`"}]}], "}"}], ",", 
   GraphicsBox[{{{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
yPcyDQ==
         "]]}}, {}, {}}, {{}, {{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEP7CG0ggOE/gDlm0L5PyD8BlconwFCN3hD+SxQ
vjOUzwGlYfI8ENohAMoXgNIwvhAaXwSNLwalfaC0BJS2g9JSUNoGSstAaQ0o
LQelDaC0Apo6RTR7laA0LByU0fgqUD4DAwAVqBdg
         
         "]]}, {}}, {}, {}, {{}, {}}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 5.808851419378483*^-13},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    ImageSize->{308., Automatic},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.690294882061381*^9, {3.6902949636956577`*^9, 3.690294976253577*^9}, {
   3.690295015580925*^9, 3.6902950266568537`*^9}, 3.6903012499453216`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.682512903042906*^9, 3.682512904183487*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["\<\
Looking at high field velocities alongside low field velocities\
\>", "Text",
 CellChangeTimes->{{3.6825128762035093`*^9, 3.682512900827346*^9}, {
  3.682513366631854*^9, 3.682513381130014*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"highFieldPeakVels", "=", 
   RowBox[{
    RowBox[{"getVelocities", "[", "highField12cm", "]"}], 
    "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.682512790200964*^9, 3.6825128053218203`*^9}, {
  3.6825128563129168`*^9, 3.682512860325695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"velsAt9kHz", ",", "highFieldPeakVels"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", ".01", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", ".01", "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.682513309237391*^9, 3.682513351058648*^9}, {
  3.68251339716433*^9, 3.682513447767343*^9}, {3.682513675858368*^9, 
  3.6825137572165203`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVl2cgFd4fxi/X5druvWYUSku/yigjcY5QiGQlhewQJZEIUVaDjDLSEKUi
q7IyzrFDRlayZ/bI3v7+b8737XnzfJ7PI2p5Q8+GnkAgeG4//7/FkQaRyq5L
qOrAnjO298bBvboAn7rf7BjaPB2m5TLD+p6/t+Z5ydDX6MfL9uI+QGSWZ9kp
yIQDnrGl3DEXgHeGxs3yA+nxeS+WgOs2PWje8U3yC5Od0Gy4mns8lBEH6726
LpJNwBc5ic2/pgXwST1baUI2BYZcGW99HroEOl6Kp3tcew3edHmNG7Jy4YEG
kvzxTgLUpvs391lREDtyKw++4GHCt/ckRel/aUOLQOP7r2pm+Fb68sRjR3ro
U5oWHsW5gOaHDSb4W8mYY81LS1eEGVYODtz/bz8TdkiMdUrR70KdkjV29TaT
IHuYvZEs9Btx7TZRIwXRcMRwgCX9bgboXP2jmOTIho3lkS+n2CA4MTrhzMdN
xOHRM2bSf+eQWIjKKYeOWWDddULGwI4Zu6U8cCArMsBd3FZmlBwS5qric5VV
3QKWsqeMFspZcFaAiE7lkUp06hj5/fBZMejU9VPa2X0ahcpudKgpdyEhSma3
WSUXrHK/RPK58B15Dm42avOsAEPxBaPA/k7Q4+7O41jcBr62UhdST6yCVOOu
SeHaP8Di8aBpfjAFnpy+thacRoNXzO9KB1fOAWw4S/e5kgvfNWFLZVQk4ttp
KW6D3jQ86ytmOZGBUJxFArfqXB3gvKC7c32LESsUPLWSpq2BD0lRgW6DveBj
n0u02xQvPk+MqmXnmkULQ9FWhMuc2FI0Ovm8JiNsMMxy3YjlhM11ITMnqunh
u8N9ecfdmXD9IqcvGGKH9s8V0tSkN5CNXaEuUywv9ieFxeSZMcKPQ4/Pyfw3
iwafNhuEhsyjqk/KVPFHjUDqjKDhq75ZUGn+hHFMkgFGWH5/9sKDjCVKeKqD
926A/c/UFO6cZsa+78Q+xr7pRoc+G4/TvxsA4FZJZksYCbLrxf8a2kuGZ7y+
lZZ4z4GvNgc9TlI7wVzCWhFBhwoLHqasyhXNIXuNqKa5tFXgtVmaNSfQhp5A
HpeJs1T8JtE9rdNiBRTeNZEyf8EM+78k1Aq4c8LzjCzWRQQaVAmO0HYEjDDN
+V5b0esRoHXwSbBk6AZQuT/r8Di+A6jPlfDZV5Jwh7Sfp0MmI/w9uJC7W4Yd
Pl/V4D1nvYCUxALM3msMoYCE0wq+wxyw7u582C7BRXQ5SKro7+dJZGIsL7G3
cAR93qefelSFD9+2/BatfXwS7ExqfSCXNoV6LqrKrm4S4eP+LcKjk51o7/Cz
H/kPqPjIgLa3pykFmg6Xf2Za4odJhXceX/k5gsS5KMILElNowEP4lOw/Zqy3
X8rzIGUInDsd9E20dRW1Gdu08m99QPsdEha7nxIhPlDYtqnPAlVyWGImS4h4
SmMOedgzY4lfDpRW5yZUJ3Ln/UcHZlh7+j/jtMB1xGdfUVjo3AbmmEUUK/UZ
4URHVZMMJwXWRgwm5+ux4+dtlIfy+RywptyqD1ayYinjgYm08lb00kfkjUkQ
Dxzur+DTecUOVS2655IuTqCa9tfcLSFl6OHUB5VpyhQKNNM+YWbBh0uztJ+N
jEyhcxd7B8CDv6h27c7t1c8zKMh4hG//JCd0kOYhV64tAKeN00qfA/qAywkL
3mu/lpEnXWI8Z1krKJmvCy+9tQYmdOwyTz3MQJLy7hEZtY1oR79U4aGHI+i7
xp1qcUsSLg/WKxNoaANlvScoRm/o4fG4g1MJWwTYoDEVt1SzioqVKHIxPzjw
QcIqnwAHD25JEF8+rrsCyPU7VEXjOaDG8fvTZc8pkDUxvu8NJx/mFbwuY1s+
gt6qZ45zPeSCnk/+vq3n6UJx7wRuRfHNg8/tara/1xgwjxR/F9m0H4TuTnfi
pjajligJOT61BbCv5HXv+iIdxNGScra/WHCP7WHjOicGSO/OlpNxuwK9FjE2
C+Plwp1FycznH9PhWxYhldOeLFAwdk7qFhwFV1RaFe7/XkGZ555/5abjxn1H
jeZ1j8+jefW84Q9JRFxaeXnsXfosaK6pOFIYNoWmzFb23g5cRtO8uhElTRRM
eZFYqqUvAHOtNpym1mlY0FL1cGjFJlK/7jrj/GoWuVSLi9042IeOePBNXdrm
TN2NdvZjsWto0P3YeKN5H1hi8LlKS8oC6dndOx0PL4KIgyrW4VpkOMbFczvu
DR1+c8nRpjNOBOcyduzzSaOD7Bfnml7cW0P/tTuO3XrDBX2uiqWoAS74sqZS
Ru4sJ47PCqezPEIP/9ZJfTuzyA/PCyhYJnv0AYqvjqiD5BKYZFHS0sCL6M5c
uKuB6G80GjfkK2a7DpJqtJdGRZbA3C2pkxHT/0DMHyixZ4ADyydHNWo+/Q2u
jF92ybFmwfagya8jlAtfzD8nXW+2AcZ2+V0sdaPD0zekvPe4jYFpy4ZbMdc5
4He8y4rZmw3zJ4vbPw+iwHPJgWkbKnPgydzGPgGrEcTa/Jk60TqAfHczlkn2
80L96heiiZxM+FysznzfkxHk9IzQJFDAhm8V+S0ledPDSyGlqz5Ty6h5+oqm
7XZerVKXGD7oTIGuBsM0+6WfQChoV5gJhRW7kjf+vj3Pg2lNBXdXCknY0uPT
FPXNINAkvz5789Z27+XLjCXzDoCMvx/t9uxhhTrRvTjBkopPiHdoOl3+A1Z5
Ra/Imq6CCSzQvtG7BFJVb38rFqGDzE32xUqaKcAVHQbdyUS8VHWLoOLDhb8E
3SIU97HA8AOVM2+jWXFvqkfnsvAc4urdug1LpkFk8j62qihunBZzTHAhNgnZ
mV0TOvtpDN34Mb4aAKhY0li47aN0GYjca1auR2XHoW2vY9nUaJDd6VmQEQcR
Qj5j5sb+OWC4PKX2UJQR6ssPRYYHbKHqHu9rDwvGkP9K9sSpd7zYsVuCUbBx
HDmsBoq43VtB028NLx0KpcKHURd/nKkTxDm8gkK6Ahz4mavZMjGKFZ8/bwoz
9jUCsf+6YswesWMkH2+tPtcMbKvyHRx3LoMLPiG1GV9Z8HJB6qjzGxq067WO
laYxQz97CeW3zQQcdGYjx3wPC6ZmSQuRe7jwjyazu+aNjFjT3s0E5Gwgn5C2
s0evb6AwZ7mFdDgErvsfHSnh48S3WH6kXXi6BbZMtCufZPPgcS0H75mRRbD0
NP2Beywj/rqlVvB+iAEKuA7yazEzYY18yd86tBVg/uImZd9ZelhlYhdPUWKC
mkY8f76BVSB9WbCiFzaCg0duH8x8FgPeWavu1j3GhZ8IsVryCiUhkUG9q+Zb
M0CL1pCppUXBGn6NR9PciTB0MY1n3GsAJMS9Ng+4vo5MlKcCJYnCWIf9j+pu
OA3Od/jX/9KfAGUKmn3LU9yQ1Jcf7wp34JhTTO92STPDHMXnHqyG7JjbvegP
8yQPxC8O1Qv5jqKq+LPLo8n00PJSV0m6+gTyHxcwf9rEiJV/Nb6XXGTDBN91
tQuwD1g2Ngnda6DAh0+Orf3UXkKHPY+Eac4zwPfG5lVfmuhw6+4twSShTmAT
dMusUW4R3Myc5vslXICOtNf/l7owAgqD0jkNI1iw3Pr8MV9jChat/f1twJQF
km+vpVu2EWFiN5d2qwUrdIvS8SLyLiMnUd6DO+P7AP9Vp+Y19j7gr/nV9acn
EYKsWn5nNS5YE1pUHe6xDqSGMg7Yz9HBjy82fVm+ziDGR9UyfYc5MFksNy3j
+wr4r9e7ienvFugKlWUsxyyYrjW5IiWFH3u5K6rvP7eFOGJqrwffZ8HkEcsz
TVcZ4Ms+ew9GsiCWN/1HqZYdR9kMQsbdzSRs5jZUEaVKgE9tjHNICaOIaadW
UPVNOnw9t0QuNZgRyzex4wNm3Jjtysor9H0Sgc/5F/KGF1FS3bd9fIxMmHhK
PEOL9BXsOt2TV+46i4q/zXQv+E6DXRve/bWPPyGmj0g/VXYJsa2+jpshM8OD
Lnzn/vptosct4foOYtscsucMCu7e5mj2WZFIM2Z4qeNhbb8rO9Z9IJyS18qA
nX8eNg525MZ1lkYc9ixDQCzviky+XD/al9co9imQCUf6QjYPizVQa7gwFqOc
DzyaGZr0Py2BaDdCxt8WCvzBc+nFvR3jSJ3gf/qPOj1+PLJfIfnKGJKfPjXT
FluJfIXEAhcbqJiWQkpSdmwA6gccVgQNptE3cWps1VUaDDNYlzmpxYrvtfd+
U1ruRZoiTTzV4/9AeUdQ+03XYSRo/O4o23ZvLjS+NrD+OYEuECnvcgmLaEVq
jVjoR8ZPwznfW46Mo9Xb2pcaSAwwl+rdVnSDBw4tHKem6A8jvaCqgJCTVOjk
dVr+6eQqsu04esFVtQrlDcRU7/kpBNNuZoxH3fkNvHY+1aFjYoLyUcTBIokt
YBR8S4K6ToLXD2nWHZ6hxwNjK1l8/GR4MlTy3nwbGb9z0yB7f6DH70/t2sOf
t4QKJcvv8QUy4jkl1Qtd2/9/mZKxcOZMF/AtcLhcSb+MmoSKtOSH+eCnVFu6
ElQKCuspHWidGa+uZDu4cC6AB+vDfoes1tBfQ8MrnB6dyNos5HzZOWGcd7LW
qZZrA3yywitxqAeZnc3VUtygw89LLQSFI/lgG2Mr9ZXhCtpRm1HQbM6GB0aE
Wr2u0/A1cd9DUb9XwY8kX3ddQWa8MSrVVhq9iqaHA7/WC8yhr98jHBZzGSG5
OVqk7QsXrFZ4r5xt1gPemXuYf7w9j1pivnO8jiJAIlvY1+afJNz8SfvCPLET
rVP4eGZCWWD95hmtzVUmTE2wZB3JZ8Gcs1y/nNWXkVhQ6Ibik3WwrCJOlH/D
Dm/IOz9XFtlA2CSMS+0GN76TMmDpkN2PXk376Nd+rgeGryzfCbQQ8Ljaf54i
VxqBwDmS30GlIZRIK4YeerPAnfF12N5fNegUusQXnr3tAe5vPlRsc69J7pi5
Ph5EBuMyXg/5KXi9ZjOjy4qADctMU7z9e5Ht29ddSi9omInf7e/bKhL2lJS9
kpnBjBOl3sqyDfPixlHmb/n2vSDZtHwx7zoTDtMWqryrw4ILDgROSQssI+XD
owwuYYVoldx/+K9oG5hW03lvZcuOP/oSvIY56PFYyEL6h7j3IOXI/A8XBRpm
oPF4lbduoAPXrvaY00iYU2D+STH/FqrZo/V0KJYdpz2zp8j6jQNBy0tak63z
SMWmm3KPaRPl9oX3J478BsZLNk387Zw47yr89tB9FL0P3TMXkECCd7vC2xn4
M0FzQIi86RAB6mVl37kT34FWPpsuKIew45sn9N/FDpFw7hExD+IbNnxzalJ9
UIsep9xk5V5txGD3b+ODFa3rYKdOoG553/bOyVIc1O1hwXuTfLKldP8gd9nx
xNPqzUhdzlMgFNSDv64TVfMpbFDPiv+/vOfdyDSq42eYKhd0Zf9AqRkZRlZp
hsfCu6i4/fQxF4dbTaCOqyDA/M8q0vpQ3jqWw4RHdVXfhR7mhnf2tTTlOEwB
tYYg8T+dE2Awxo1foWEG9D31XtGIp4ORif1nEl6TsZPoWYUr0Qht3jxUrlKy
gU5vDRDSzDnwVYcLfMZiBFhfaGD8rX4SfElzdn0s24cAVUOIJ5gFV2aRav2e
9IFDZufdT/etgQc8n2s242gwT0zk52O+HfCcqr+7oEY2MLh41z/xQh3iJ4T4
KnvQ4G/KkeBd6zRY427Xslt/BjhK7f30+zwVSsRFldhKLyMNieKQLdQCLMRk
jD7tJkM9Jj+Fzh5WqKJ1LTiNn4qviqCVhGEKVuAO6g1a5cTOZMYv2SackK7q
gosqYQ2l0ZsSWpK54ECyDL/q5U009uYHdTWSDcebJF99I7gEtCmjEosldFAZ
JOz9dpEXm0WN7J/T70en13eMRLWtoHWtwE5PExZ4TMn6wt7zy6D5yoW6n7+n
0eNrb43sF3igD+fBXO93XNg2NVBHlSCCPeZk3srVc8Cdpi9bT17eAB3UIvHP
T0kwritkyuwkE/xQEnSd32QGkMu6Dj3J9gcys4+nveaZsFJe9wnL9VVwff6a
nvLdQSDxXmdKoZYRCinIiN2OYMXGJJPaN2gOuU+XNLzcxwNjgwz3bHS9Rys7
Xo7IlTLByzqFhN/vifi7WcjYu1xebNVae/eRyRLSy5O8ZhxAwrIH399L/5eL
tix7xF2psyC8Z/aAXx4jNjX+UOB1agJ1/wsRDnDjwO/shy6ISbJjsuaFrhvy
HLBJViW5SpyMJWUVPh7JpWBvq0hN8ncSnqbpx8c2skLXq60jxpELQDZMWVRB
sxH5GdWm0jgJOOn3y0LpzGl0+5hn4d1MAWx9XKmaU6sI7WBjSmu3KEMcHzhO
miwzQRvJkpA3FY1oz2MdR+fgFXSiU+V1drkAHtVTkjE7R4GBsob+32tHgZrc
JRcPMRJ0tM/VYB8UwD43lYQ80/+BFv+b+0VZpxF7oNahE+RudD/UKjI7egZR
TmdbJdf8QHsPJsVp2WyhstFDSuosbFAVs6vo/CXCCe5nfhSfZWRXKxpGD7nw
wkeBACeHWaR5HxpFREwgobpLbM8aVpHqLHjit+8vMgu4vqat8Ac1FH6wcdHh
gce0p2e/S5Pg86f8tT802xHXVNffDTsa1kFwnL6YC873ZPra86ygt5E9mB8u
Ir5fjH+94vngzrMn6iWq+0F0sc6VxTtTiH5hV8pAEg/s9WZxTDpKwnsP7XVr
kmxG9Gofr4+WMOCwvTvv2E6ScYh9BacyhQCVm53TO/q5MHP+ofAw1AcUwmpH
OMzHkVUXczt7HhNOrUHqK5xNgGJ344CAHgEy3+TpzL25iXAE9w2244yw+xHB
9M1ZOmgYcSbPX5kLRoava52bmQdxzHvzfze3g8UV8TF1E0bYNejCRx3YAAl9
c09vKHNjrwfzuW0Oq+j+u5yu1+FMcD1iQ7RGvQcp87YnVN/gxZ272n/cubEC
jt133UFxZMJTLjceoqFlkEHs8tzgp4M1LFn8Dxv4sLJ9eoo1Dx0EDRQVnDSA
uNbP1jDLr4O/bk6c8joMkOFcjKzLKRF4YXfxa1H2MWCfh56+x1TsdHtPTjsP
Fx5ZmV/IfMoMRen17K1TWGDo5yTlzMFZcO2CSdiVH1TMEeEx9/ciH9w/3kMG
fKvogHBkXrcBGfoffTY+vrcDvTbcK2kZ3wtEqN+qeonrSNvRa80zaBTQFxuL
5B6aQ3RtfuzeaqWgbNA8MYZHCFJFVu6R5jjhJzoj4Q/jjLBXRCXMvJAKy/b9
mDIz6wf0SpWHCyf7kVptrqEk0yyy3v/Z/7VLM7iw/jxs7cYaeKZ1U5bFjYor
VfotG19MouIHzvPstSR44HP8/kV9GvQloF7dYRJ0kPFevJlBj1/a0a+kmP0B
iYTLigcyqPCM+f7atyP0sMbX8sWK6hr4ksV7JXizA/gfDdHOdppGQxapH6ym
GPFdRulPtkwkHGnxTYvzyyq4JHdLmK+JhIfZuS65350FmT0V0bMli4jl2/WP
eeyC8MsXfYPTqWRM0jOb3PuBhBP/jUSvZNKgkuOFXbZzXDjnb8ejqVUijBIn
G1DMWKAkD4e2av0K+EQ7z3xp6DdSeEK7qNM2AZrIVcIswmR84uBKCc10GezJ
+57Qxz2EfulMR8+mMOAV9zx9MiTAl2L0AeM3GXGRvUKO5xANMg2OrOlazgCl
wwwehpX/wHeZIrpelXGU4fK9oMJuA2Xua4/s7B1FV0m5frvmWaEUnU39z0oS
5L/tZuf4dbunnt7lNY8iYhuG+NeXoon4uXsG5WwfAx7Zc7tloaUJyPI8727w
ZMXzwSGJ7dfYIfnc3RkjahE4lDG3rzYlHHSHMr6y9qPgoJEoG3iRC3Kc4iy7
e4sFply5s29DhRsanbx0rPthI3j2BJ0hiU+gBc09Mpzb+Xvp3c/NSeGFxhmZ
psn1BHytNPWH4rbnTWglPbXZ1Yt+qCkv2i7FoivyxZgUNwl2v+B7uXt7Dxju
Oekp9eoHSN9Hin217TVQPSFZLWYOONsedLl+jh3bUoMOAJY1cMQp4ruc6Sxw
dZv7M1kojBsrVqwCVBkwVQG6cRTugLssqyqu8NLhMRTLcEtoDgzuq0kR2t6t
HGGhYOPDFhIWfJuskk3FDQ3FoZNXMQqLa9dQ2xUMekIUq+R0mbCTz8K3d+m8
8BFdicBW0z8Udurbc6X4dUTILwiumyFBn+MfLmo7TCNd78v4TBo37Ax4MX/4
Dzc89HU0r/rYMnCY3Hso5I4I/Bh7ZI9S4gTa7ibrGI9RkKykcd5qmR+qpBpc
cczqQNdU3geuTs6iFvOzk85PvyIRngOx5ftp+CMtr9H/OhPk/jJimqe+haZk
7zPUsE8AvS2yMolnAAi0VF2KP0HFKZf3ftp9mogzSqsPnt+k4YfjXwofKf5C
cS87lbjzyPBUdsO+WKYlMKN7yiLgOzeUIGme+7K5ig5FdQedZqbiZDucTHpD
wLRNxYj3/QxQNnG3vMAJVrhIpzAn6N+ARDpcnJdOjgK3r5oH9JyXwcBnw+HC
5CWUKXGD5+/0KlC4o0B33o4Fuludvuh/jAfKd8ydbJQZQqc2JCyOvewFzhUR
spoPRtDyBQHiQx4M+IV2BSx2kuHkZy/a0HYuFOLPFcnEMsKasNT9yjJM+Fst
tdCOeRwc1DhuFFPXC4r9y6jHZDZAV5uuU/z9FdTzJrchQf0P6HDZZ5D6gw9T
5iZCVFJbEJdvSwTlyCJItJ9zVo6YQy8bFI3GJKYAdU0uMefoDIjgHdzkmWOF
acumh1wjSfjPF/+pM9zc2CFGpuvJWCPoTBYTEgufRsFbz2ymFYVg4coJfK2I
Bukj467We7LDCo09xTRxKtw/dT3AzKgTpcynrwVsTqMwE2ta35nt6/Dru1YL
D963d+Lvw/ZSoNubYFUqtoE2HjMHrZygQMc1rmYv002wYRUet2uOAleJ75OH
cjZBdSD7geDyGvRyX0KqrcUacmwVzVM4yI/VagZMXKVYsLN2rFVZ/DyKTX21
/5xnPfL1Gx2+p0OH10/a4Sc2/5Am/xeT6T4m/NKr3V7wDhWLzsv+6N9Fj9eq
prgDRCnQZVD59jbJ0L/nJY9vWq4hluuKSh8u9KAe7fEGiz0kaHvYbj5jJyt0
DhJ5pDtHhBawLE53dRJUMOEjXw02wJ92ljSKARd2uqjp+c6IFz+5ksH9KouI
72VR64dku8CVCxHpb56tIRXfHn8uRQZcJcv7YHf2DLI0SU5rlVoBttX9RNFQ
Jth1/LBqUzkLXMwqOP1qkAFasBv/Cwil4Jo4K++iS5uomT3qsPYeHhhTuz/y
lkIS+mbtf+X5pUWk9uC1RTvXHPALP58YHd+FFM0UfnYeFsCKtKLImAQB/CZW
QMjCgw7yoj/R0bodaMH2/oOssG2fltlxXjWJAfNy6s80cf8DZ0wyV9TbN4Dj
ywd5OVJcUPDP7AYuYYQcsua3crL+oVq2AgO+EiZ81lpCO/wcFzyZFZ6d3cwE
y5iTNfh6yFCi9/3Nn8QulPLS1zrrAx0sNZWXaDfdQkkncty5lTLBYqd3sWDr
BJpozpLyiKBhw3ClLz/TZ8GpWQuBxdB58Mi+VSZIbAkoKuVdHXJaQJ3N/fKz
nzigZ15A2ANaK/rtQ2TKub+ExHkLY8O4OLCNwXCF+mUSNldVTiJyE6EcZYr5
vkQ/WMdeVaOZE2jVmk+rdn4QIL1+ROfEjFPiSsmHbiyDyL3Ui1ssRDjpuVNO
wDsJ+DfuCPEsZMEnL3lYlzYihEJMduSWLgGSlFGBpgovlJZMkjEpZsG2KSn2
gafmgEynpT6+thPu0Q9tkftHDz9vvasOu86Kz6hxmrecHkJBBz1d7egE4KWX
oGhleQMdYSoP5LGpQOm3FEZXd4yBEauikPi1VWCI176w32HHk8Lj1WfKhkAB
Tnhls8QAlzqOVVTxTYBHe2yfOmr8Q/QDdc+ciyvA7sVIGq2HA09nYfP/tCfA
u76/DyVyubHRR3eb+/rLoIFpyHomZx1MQrbqp4YLgOA5KnZ3jYyvhbQnxpeQ
YXHTpWvh++ixA7+UpdIKGWuZmfjlzeYjcnwNV51WI5qt5h056EuCXa0Uv/E8
Ap7X0VMcLl8Al23Ljpx3HwMzh64l/irYQN2XGtMfS3NBWkeHe/lXdtgd8a3p
5qcxZH7eLbh9PxV/7XiisWrCDQcLKo28NXbAMo64gowvDJDuGAwWCyFCI60d
ZqNu8+BizKvQoiRGuFL4RDPYeQgRR7mbbX9S4Lx8j7qRJhH7WUpdHZDrBB8e
j3yQECFCKkP6+CSRC2cEfi0w37+GfD5p3WB7tAKmOA5LWmcxYeSYo3h1tgHx
p1krx8Ux4Bmv3zfYu5aB0duTiS4c215+VFcsv4EDxnymrT5LZ4V896wOH3y7
gmwnyg5e92kD0yTuMcPXrLC+3diJWMcB/+uSDH+XRoTBfT9ySXmzgOHY8waG
q0WoXQDmXr45ifzmdca+IBImmO3Wkszkw4KeuK90u1/SKhP987s3gUI+p6Ie
jYbd06m/o89vAduVUYeI9CkkNiSya0qLAEUuD3buLmtBbz+38X/cJQydtzQP
yqhywjgcF2Xsw46TFff7bxTzQm4vl2/xF7lwplNL/nTMNoeSXrnZbvvtl6S2
08Pj8yCm89VbxzV6qL4n8NqrSRrEBYoqsPQREvo2QRGxZIF5ykLxp251o7v7
/Rp1zJnxbYaTY5dcKfj1ReWqw+OMuPTjE6MSuTXQe9bKl8WbCovpKKn1S/TQ
+IBxp14TDTd8uhq/9IAIvdhLM91/cuH232kSzoU88PbQxUo5LypWqHKzKTIl
YUMir1HD9h6KUHvQJrU8jezDx+oN/RpByYKCXy53I+Cz3DFwglUQB//7nGhf
t4WkMrSjy+sakY5mj2eYx3fw7EGvkLbDHPA5Z6Hzy6AXrcB3/7l1bYIP2gkS
b+c2APHEhWM+vlT8s+KLeHHROrAk/jKtE+1DFr23A91ezKJ7epIxymU82HrU
J+8WlYg1L3il0F2lxxbXdpmQ5TbQyRTP8TAVGuYPWL0WY0fAtSrNizseT4GW
PvEvLw1ZoWGW+slbXnRQTEDG56r4AmgqT468JrGK3FzCtbW/MOOIci2B4h28
ePeTnfyRRHrMTeQO5vxYAbo/Zo2ece0DERd0BGb76PC9wfyoe7402K7dEZaz
awU9W9/95NWNIZC783H6Ltoaan7hdLVOqhr0765xGXjdh4Q502cNTGjY68hd
3kPEApSTw9U5qNgEDP4EFtErLCCpy0vJu/pYYWO7zYdUP0bsLBt9oEp8EQRX
tcmsc9ei7EJZKU5IgeEPlOA+OSZsIMIqYdNXCiibnyRgEit8r7j/VUvQPyCn
xTAzObuACtg/WgSSxlBUgf3Xd8N8mJ8nqXi8agEol3OmPYmaBUdfStyptioH
RQmDnvWK66Bz5ERLrvcMmowRTJx78A8JB3KK9A8ugTxqUFf611V02kw3Vmo3
B5SXOHuOJNAJhlhjLpfllgAaWcnp3Fl6KCi+c/XEWSFsmp0wosLID3/pRPQv
fu0FP03uRNAOLKOvt+lPP5P+gNgptoxtmAk6N3w2YTrGiF+I3Jasl10AZ+We
iUrPcuHTsXos0fdYYE6DnkRLKRt0Gup91nh5EnnRRHd9YeeCdX9lbx+vHwLB
10GNauQ8sOaKsyLpUSDvsWPlGzmr4OeI20u7QRI2vaF/R+QhHXbhuZbAbM8B
21GTHBBjxJGtAq410yugI1r9uWkmIz75OAO46f1GGjGXlwZbaLhQsaiCWWML
9U2lXmk6vw4KCKHNcbdnEB7jeCo6TMXzx3df3bxGwU8+G3i3Ra6BmdIY4fLI
MaTAVnbX/jc99BM5YKN6oxPsjXxcZejHBx0VlToTNQmYnGL9S/PkHGp8oFgp
FvALKQqRGMGP3+D74Kpasg8Brhza6BhkpMA4yh4/ZMKKbz68s1CgSMUHJBpi
HAwY8Q2zy8LCsZzYbvX9VZX7/8CxP4Rhw9V5tMLyQ4bPuAfIr72xrdPbgaVp
swHjweNg2X1nPF8xO1YtSgYuVayY+jTtXjEjGT+rRjH3CvuQ7hPj3nbhTbTx
+uckpwINvnf7OrVcgdCdzK8ElZxJYOqfKGcTy47jhNi76bX7QSFfiGlJFgu0
S/Qh9YhPAKWdDopzFj3oa9jlRLWzdLjCey0g9tECKK3iGD1zngAZDHdI7Ls8
gg74xahsnmfFif738tUzeaC2TWV+5d5fIGI9PvEu8waCvPX7NyWX0Hkq1VYz
hQ1TPy4fMKlhgkECYr8sGRZBkrcEj1sfO2b+dNjhHiMJ33Co+jFe0wz+Ffnv
rnhPhb1J4UfoGSiQ6SrtwbNtzr92JNg/r5kD6lKeMSX35tHyofCtucl6kLs5
aNVSR8JEg/wT4aLLYPrP/nSPrDUwpGJxBjgPAYd7I9L9RRy4vO/y7283d0I/
33+1B6um0WaeSebpgEzA4MVXS/1IggYy9EmpdOOIbXAllmeEjPP0k2+81p8B
xbuei1nPU+CxW1pvKm7QYfWfGr8zD0wj9X+nwlIOESDe6SAeEkWEJ2XleJX/
/UMtrsEGIYqbCBy5vOF5hQBtddKaY6WXwLX20nsKy3zw2d+5Gbtry8BN2g6F
b++f8nJm4RPyQ2CJNaWS/scQ6irJuBWQWA2cnhrIhWYz45aPS1o+Zpy4pcpY
MVBoO4+adgpRmoywbGx4100XMk6vjQrdcfQR4nBxqtXiHEeW0c/9bm/7uKd4
VWxQ/C+w4J1ZbNtPgN9LnIbZCSyw/90NOW6GQeAW1buf7fIMGClTV+S92A1s
/+12jPKZR/VPdcXcsqjwUqqpWsaeGbRUcEVH8CwjnhFuH34WMQl6WDuojzkF
IIfWiJ0o4oFpknf358oywt30V5nlwvnxQLT0c5aHi+icpN1CrxMXXME3xR3r
VpCA6eRy7NASIv4MFVYzW0cOt/+ojeqQ8WTFGFWucwnRiQlMpgkvoa/Suor9
VkOARz7suTkTGbOlP1QxutiHCNfNoZc4I47RXv/x3w4KjnD5dtaleAXJDGZP
P/yPB9d3nvKztWeFgaf0Qh2KZ0DoUY8Hi3s54HuTGDvPMSLsPjf/Ybh9HB3+
HF1ffoQbXtM4+Pxi/QoyOpCf0n+UDlodfyzYem4ZGCzkf9m3wA5rfO520unT
ILck6knImEW6a2bmZWUEqBGTaIroBWF1cfDdomU6XI9/+hb7CuPVcJn6vd0c
WLjndNrR5wvof7noiIU=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJwVlHk8FGgDgJ1Djm/MZZgJKbUhV0jleF+Ua6U2HdqcTTpGuXN9i8Inu1RE
N6VrhBSryIr3xaRDF2WEiJAp94xhzDi274/n9/z9/PPoHwjbGSwnIyPz10/+
76SmBzkXiSI0PbxrVIunjHsW0bt4Gz7yDKl0Veuk4Kqg/joCnkZ91NmdvPV0
3GbVO2kfSIZhNeEv5pwUcEvjqa6dTnI4OH7NhCBUE1byyKKyzRJQtq9nTO9N
J2ghWfuevbCAVCct4/mFJFynwYocfqYFqbZp98TVCtiZUs09Ui0L6QE2O9IO
qGHnFAE7s7AbuAkb6UefK2J6bUDWqWuaOJxRXOQTJ0acurjMgNd8ZKRB0hOZ
jyPzVjaJF/4BvV0Rd/ceexncEtQr5PiMopau69T2M1y0cB/dTbBh4Eejsqed
zCeAugl76JayEjT+cGZyPF4MIjcHaYa0ilGC7O1CIpcH3jSkEPYn0WFdQnDX
BZEstKuu5slQ+MCft/PXTVQqXG0c0/0wn4aH8q9e2hxEwQRr7WNVB0g4PzlF
nJdLguG7by8K/iTjyDcbiBXnBpAFb0j/SJkc9rkZ6mA9oIH9Q8KvRPkNowcd
rIjREk3YcTEmt+CaGmRIvxr2b5gBzCvC9VHwOwhw5tmmdMyhjy3NpnXZ42jc
f251TLoYLX9iWbXj1XtQ1psD/FKZ0C00ejK8QIAiXxkZhBn2oxX27S3Co0QY
ptdts7dKFT8hdK9JeiAL1X2EH64mS9G2dL5RTqAiLgkruSGKUYHkF9lVDppk
qFJq/sVIoRfFUJLZv5Wr4gl22O6ltwqQ9eJm9L3VneAX6qD8sYzlMGXQ9OD+
1VPgctITc915GnSL5rLOU38g8oKPnidXFm826vY4vr8TSDT1A2z8JEBcZlk4
eIsJI7WH9e95MvGxXnMCs20EsSXpK04kz6GG8ShZ6WUt2C7cdU2uRwl67KV1
PgISYLmf2dwH20CLYOnvHVATzrpXbLfSGgU1LntkAz+qQqO+OVur7STc0UkQ
p86ugL+8tSVYEvoQb+USk7P8Mwg+HeXftnEGRFRM0Fv1niLTrnfrykR8INbb
yuvyJeJiz4pm+QUd/JTdmjX4egwY3Pn9ddcKKlRMnVlzkk+D9w8MGHNUNKCr
20Ve5jwJ+1prvZwoUIVcQ8nSwwlF3P9GJqs0VRUHj6rnccgkfKs1y27ZsDxU
8/isNnNYAQpE/KSXj/8DPeOuqGn30WCI8TuV6p4OkB6v/coCqEINk9DJI+mK
WN7JqNxTsRLounypeRYtQAraHbUtGbOo3DDWmMak4oZHk72ikxNAdyHx65vM
YmQYSff6dmoRZbbneLMNhCCEoabr2KAAY7aUWq9P14HE+ycqFU2IcCl/8XST
BQ2byRoEhS6ScE/I8LY3CZ1I6LBlT8/IFMgvLRe5uvaA+nXrQkXug8j7kpNd
xB8qWDJXxY4kikDq/PApY5YUuYRqxx4PJ8IurXoZFy4TesU3OHI30DCLUxdk
tkkIIsyPEEb2yeHJVasOebkS8NO16eOW2mLkaPJdITK7DkWMj7kNesrh0ghV
qqQNA5cCiwveNE1ssXg8MbReGbubN5xZQu0gyGDD3uKVyrA/N0D343saPrH1
7LnFB/OoXrQtsmjVPFpskOircPWwwR1SdXk5GXq2lvScC9OAGUK1j3f20WBw
5klBjhcJXw6u8VUvVcVXOi76f7bvA0WNp0O1fCeBMrfHOKsqDZyw+VXKXkOA
AYemJezPdBxs0XjmRnMbWpW5/Vh4xhxyf54b4X1VA77wAt7Kz8jwvZx7UnEV
AT+Pa86cGlHHa/Vya3p3KcM0s7yRkdXdiNbsxmRd7kIlxe59fyXS8bC6xu+x
/xWAii/NlwSNM+hb8XqPCwcHgE/fQEPNuDJ0Lenc2zSGwSl/TYfsx3SsH7Tp
aJnVz+9JEw0uWSpBg0jqP7tUFtANT7s8Lo2CXU8oiBVLCRiEDO+OkQjRMk7f
x+dWOjC2mp1RbrsM/hYT/dypWARYpBmP5A8kXDr9UPq/xQmU7XuQ0u86gfT2
zE1xO1XgVW+SRuSgPGxpL+y4WjuPqiqntLcUkbAKJyCDxdKErGswtomjipMf
k98N2fSAgD3nH97IkyL/+wc4hewZkJPBe1vwnoIXa+NqSO4SQLdv9zC/roK/
q7nW7maK0NAle/uDh2iQvN+CqW9ExuTy4FadLCpu8ttk3uW3hDibq2OpDhWg
uvMsP7poDjmpDS6riCZhmlNNUlQWGf/59bCa7jplOJags1E7kQPS2hhnEupU
8MMo2+8Sxg/AZ9WfKZRKAPPupLKTCRl6HzxXICsdQG2neVYsbSUYl91YcSOF
DP3HjHwyiWLA73dO7NYnwObjcdYXxij46es0vX01y+CGfqWzO0Zlcd3APkdX
bTnsNxbYu3dUHt+qFQcOVq6E9GSWieHNOXRolGsYmvQJSF2OWDgqMGDs22mC
lxUF1v/gpuhuIkEtM8+20z90YCVx2tcpjYL3Ghx0ZkJZzNfi+pSLNPCnfPrR
eu9SdCC4XPDSioKLOkyhc6QG7NrWnV2tO4fy5ldmFYQNATvfP+7+3SpA165s
IjX56MIpdz8qczsfVX17FV88I4cdnxEfZF0UALN887hXrGdg7DLztjB1Cuml
E1d8HZwFr33jzlPWilFljJxLnmURmrZeeXgxhISz7u9K/JQrBeqxh5SMgRjs
4UX5cbZR8PVjMkcvtAiB2/qEy43J02iAwciv+UeKCJkFMfrbCTh6Q8bGcqEA
aevaku0n5lBqgelqBy8KPsohDXl5LIC+Q6Y+3R/J+NYjORPXCTnMWDf7yHGB
gUl+89ZBM3TMsHF+Zh/ysy8QGGWNKuJZSbLvkgcZK9duuW62VQFn7pyuY00w
oWNnScmVLU8Qp+dtf0mFPEwh/xH/NFYDo45JZ8a1FmAXNLzrvCcV/wuDbUJv

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.7531186182899, 10.148251683475}, {-8.3044158644455, 
   9.3513517669324}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.682513324604444*^9, 3.6825133516442204`*^9}, {
   3.682513400298604*^9, 3.682513448282791*^9}, {3.682513690360108*^9, 
   3.682513720048325*^9}, 3.6825137606783733`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682513385154559*^9, 3.682513385674549*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"highFieldPeakPos", "=", 
   RowBox[{
    RowBox[{"getPositions", "[", "highField12cm", "]"}], 
    "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6825140878048677`*^9, 3.682514111160913*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"posAt9kHz", ",", "highFieldPeakPos"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682514950266342*^9, 3.6825149946395693`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
vqd13EpfQuFU7LLm//9/x/8AaS8KxA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
/AeyvITs
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0879827384939158`, 1.06013295584588},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.1004641778181, 1.8992762945659}, {1.100088213466, 
   1.8991933658684}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68251498845818*^9, 3.6825149949859333`*^9}}]
}, Open  ]]
},
WindowSize->{1280, 942},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "11.0 for Microsoft Windows (64-bit) (July 28, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 451, 8, 65, "Text"],
Cell[1012, 30, 216, 5, 46, "Input",
 InitializationCell->True],
Cell[1231, 37, 1475, 30, 104, "Input",
 InitializationCell->True],
Cell[2709, 69, 149, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[2883, 76, 838, 13, 141, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[3724, 91, 2678, 53, 218, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[6405, 146, 3122, 70, 313, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[9530, 218, 4153, 91, 484, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[13686, 311, 3091, 70, 313, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[16780, 383, 1203, 36, 151, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True],
Cell[17986, 421, 1217, 38, 151, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[19240, 464, 754, 12, 100, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[19997, 478, 2899, 71, 396, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[22899, 551, 2731, 68, 396, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[25633, 621, 1863, 45, 258, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[27499, 668, 3011, 69, 267, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Closed]],
Cell[30525, 740, 183, 4, 24, "Input"],
Cell[30711, 746, 5802, 112, 175, "Input"],
Cell[CellGroupData[{
Cell[36538, 862, 306, 7, 30, "Input"],
Cell[36847, 871, 6288, 117, 435, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43172, 993, 1690, 40, 69, "Input"],
Cell[44865, 1035, 31422, 532, 585, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76324, 1572, 1616, 27, 92, "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[77943, 1601, 2921, 70, 142, "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Open  ]],
Cell[80879, 1674, 510, 13, 66, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81414, 1691, 242, 5, 30, "Input"],
Cell[81659, 1698, 13366, 385, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95062, 2088, 349, 6, 30, "Input"],
Cell[95414, 2096, 9972, 181, 242, "Output"]
}, Open  ]],
Cell[105401, 2280, 362, 5, 240, "Input"],
Cell[105766, 2287, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[105813, 2290, 234, 5, 46, "Text"],
Cell[106050, 2297, 332, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[106407, 2309, 670, 18, 30, "Input"],
Cell[107080, 2329, 18036, 311, 372, "Output"]
}, Open  ]],
Cell[125131, 2643, 92, 1, 30, "Input"],
Cell[125226, 2646, 279, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[125530, 2657, 266, 6, 30, "Input"],
Cell[125799, 2665, 17429, 299, 376, "Output"]
}, Open  ]]
}
]
*)

